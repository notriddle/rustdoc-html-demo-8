{
  "code": [
  {
    "name": "/opt/homebrew/Cellar/node/21.1.0/bin/node",
    "type": "SHARED_LIB"
  },
  {
    "name": "/opt/homebrew/Cellar/libuv/1.46.0/lib/libuv.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _uv_fs_poll_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_poll_start",
    "type": "CPP"
  },
  {
    "name": "t _poll_cb",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_poll_stop",
    "type": "CPP"
  },
  {
    "name": "t _timer_close_cb",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_poll_getpath",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_poll_close",
    "type": "CPP"
  },
  {
    "name": "t _timer_cb",
    "type": "CPP"
  },
  {
    "name": "t _uv__utf8_decode1",
    "type": "CPP"
  },
  {
    "name": "t _uv__idna_toascii",
    "type": "CPP"
  },
  {
    "name": "t _uv__idna_toascii_label",
    "type": "CPP"
  },
  {
    "name": "T _uv_inet_ntop",
    "type": "CPP"
  },
  {
    "name": "t _inet_ntop4",
    "type": "CPP"
  },
  {
    "name": "T _uv_inet_pton",
    "type": "CPP"
  },
  {
    "name": "t _inet_pton4",
    "type": "CPP"
  },
  {
    "name": "T _uv_random",
    "type": "CPP"
  },
  {
    "name": "t _uv__random",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_done",
    "type": "CPP"
  },
  {
    "name": "t _uv__strscpy",
    "type": "CPP"
  },
  {
    "name": "T _uv_barrier_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_barrier_wait",
    "type": "CPP"
  },
  {
    "name": "T _uv_barrier_destroy",
    "type": "CPP"
  },
  {
    "name": "t _uv__threadpool_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _post",
    "type": "CPP"
  },
  {
    "name": "t _uv__work_submit",
    "type": "CPP"
  },
  {
    "name": "t _init_once",
    "type": "CPP"
  },
  {
    "name": "t _uv__work_done",
    "type": "CPP"
  },
  {
    "name": "t _uv__cancelled",
    "type": "CPP"
  },
  {
    "name": "T _uv_queue_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__queue_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__queue_done",
    "type": "CPP"
  },
  {
    "name": "T _uv_cancel",
    "type": "CPP"
  },
  {
    "name": "t _reset_once",
    "type": "CPP"
  },
  {
    "name": "t _worker",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_again",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_set_repeat",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_get_repeat",
    "type": "CPP"
  },
  {
    "name": "T _uv_timer_get_due_in",
    "type": "CPP"
  },
  {
    "name": "t _uv__next_timeout",
    "type": "CPP"
  },
  {
    "name": "t _uv__run_timers",
    "type": "CPP"
  },
  {
    "name": "t _uv__timer_close",
    "type": "CPP"
  },
  {
    "name": "t _heap_node_swap",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_type_name",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_get_type",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_get_data",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_get_loop",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_set_data",
    "type": "CPP"
  },
  {
    "name": "T _uv_req_type_name",
    "type": "CPP"
  },
  {
    "name": "T _uv_req_get_type",
    "type": "CPP"
  },
  {
    "name": "T _uv_req_get_data",
    "type": "CPP"
  },
  {
    "name": "T _uv_req_set_data",
    "type": "CPP"
  },
  {
    "name": "T _uv_stream_get_write_queue_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_get_send_queue_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_get_send_queue_count",
    "type": "CPP"
  },
  {
    "name": "T _uv_process_get_pid",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_type",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_result",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_ptr",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_path",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_statbuf",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_get_data",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_set_data",
    "type": "CPP"
  },
  {
    "name": "t _uv__strdup",
    "type": "CPP"
  },
  {
    "name": "t _uv__malloc",
    "type": "CPP"
  },
  {
    "name": "t _uv__strndup",
    "type": "CPP"
  },
  {
    "name": "t _uv__free",
    "type": "CPP"
  },
  {
    "name": "t _uv__calloc",
    "type": "CPP"
  },
  {
    "name": "t _uv__realloc",
    "type": "CPP"
  },
  {
    "name": "t _uv__reallocf",
    "type": "CPP"
  },
  {
    "name": "T _uv_replace_allocator",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_free_passwd",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_free_group",
    "type": "CPP"
  },
  {
    "name": "T _uv_handle_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_req_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_buf_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_err_name_r",
    "type": "CPP"
  },
  {
    "name": "T _uv_err_name",
    "type": "CPP"
  },
  {
    "name": "t _uv__unknown_err_code",
    "type": "CPP"
  },
  {
    "name": "T _uv_strerror_r",
    "type": "CPP"
  },
  {
    "name": "T _uv_strerror",
    "type": "CPP"
  },
  {
    "name": "T _uv_ip4_addr",
    "type": "CPP"
  },
  {
    "name": "T _uv_ip6_addr",
    "type": "CPP"
  },
  {
    "name": "T _uv_ip4_name",
    "type": "CPP"
  },
  {
    "name": "T _uv_ip6_name",
    "type": "CPP"
  },
  {
    "name": "T _uv_ip_name",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_bind",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_bind",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_connect",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_connect",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_is_connected",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_check_before_send",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_send",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_try_send",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_recv_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_recv_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_walk",
    "type": "CPP"
  },
  {
    "name": "T _uv_print_all_handles",
    "type": "CPP"
  },
  {
    "name": "t _uv__print_handles",
    "type": "CPP"
  },
  {
    "name": "T _uv_print_active_handles",
    "type": "CPP"
  },
  {
    "name": "T _uv_ref",
    "type": "CPP"
  },
  {
    "name": "T _uv_unref",
    "type": "CPP"
  },
  {
    "name": "T _uv_has_ref",
    "type": "CPP"
  },
  {
    "name": "T _uv_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_now",
    "type": "CPP"
  },
  {
    "name": "t _uv__count_bufs",
    "type": "CPP"
  },
  {
    "name": "T _uv_recv_buffer_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_send_buffer_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_event_getpath",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_scandir_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_scandir_next",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_get_dirent_type",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_readdir_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_configure",
    "type": "CPP"
  },
  {
    "name": "T _uv_default_loop",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_new",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_delete",
    "type": "CPP"
  },
  {
    "name": "T _uv_read_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_free_environ",
    "type": "CPP"
  },
  {
    "name": "T _uv_free_cpu_info",
    "type": "CPP"
  },
  {
    "name": "T _uv_library_shutdown",
    "type": "CPP"
  },
  {
    "name": "t _uv__metrics_update_idle_time",
    "type": "CPP"
  },
  {
    "name": "t _uv__metrics_set_provider_entry_time",
    "type": "CPP"
  },
  {
    "name": "T _uv_metrics_info",
    "type": "CPP"
  },
  {
    "name": "T _uv_metrics_idle_time",
    "type": "CPP"
  },
  {
    "name": "t ___GLOBAL_init_65535",
    "type": "CPP"
  },
  {
    "name": "T _uv_version",
    "type": "CPP"
  },
  {
    "name": "T _uv_version_string",
    "type": "CPP"
  },
  {
    "name": "t _uv__strtok",
    "type": "CPP"
  },
  {
    "name": "T _uv_async_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_async_send",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_fork",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_io",
    "type": "CPP"
  },
  {
    "name": "T _uv_clock_gettime",
    "type": "CPP"
  },
  {
    "name": "T _uv_hrtime",
    "type": "CPP"
  },
  {
    "name": "T _uv_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__make_close_pending",
    "type": "CPP"
  },
  {
    "name": "t _uv__socket_sockopt",
    "type": "CPP"
  },
  {
    "name": "t _uv__getiovmax",
    "type": "CPP"
  },
  {
    "name": "T _uv_is_closing",
    "type": "CPP"
  },
  {
    "name": "T _uv_backend_fd",
    "type": "CPP"
  },
  {
    "name": "T _uv_backend_timeout",
    "type": "CPP"
  },
  {
    "name": "t _uv__backend_timeout",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_alive",
    "type": "CPP"
  },
  {
    "name": "T _uv_run",
    "type": "CPP"
  },
  {
    "name": "t _uv__run_pending",
    "type": "CPP"
  },
  {
    "name": "T _uv_update_time",
    "type": "CPP"
  },
  {
    "name": "T _uv_is_active",
    "type": "CPP"
  },
  {
    "name": "t _uv__socket",
    "type": "CPP"
  },
  {
    "name": "t _uv__nonblock_ioctl",
    "type": "CPP"
  },
  {
    "name": "t _uv__cloexec",
    "type": "CPP"
  },
  {
    "name": "t _uv__close",
    "type": "CPP"
  },
  {
    "name": "t _uv__open_file",
    "type": "CPP"
  },
  {
    "name": "t _uv__open_cloexec",
    "type": "CPP"
  },
  {
    "name": "t _uv__accept",
    "type": "CPP"
  },
  {
    "name": "t _uv__close_nocancel",
    "type": "CPP"
  },
  {
    "name": "t _uv__close_nocheckstdio",
    "type": "CPP"
  },
  {
    "name": "t _uv__nonblock_fcntl",
    "type": "CPP"
  },
  {
    "name": "t _uv__recvmsg",
    "type": "CPP"
  },
  {
    "name": "T _uv_cwd",
    "type": "CPP"
  },
  {
    "name": "T _uv_chdir",
    "type": "CPP"
  },
  {
    "name": "T _uv_disable_stdio_inheritance",
    "type": "CPP"
  },
  {
    "name": "T _uv_fileno",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_start",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_feed",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_active",
    "type": "CPP"
  },
  {
    "name": "t _uv__fd_exists",
    "type": "CPP"
  },
  {
    "name": "T _uv_getrusage",
    "type": "CPP"
  },
  {
    "name": "t _uv__slurp",
    "type": "CPP"
  },
  {
    "name": "t _uv__dup2_cloexec",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_homedir",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_getenv",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_get_passwd",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_tmpdir",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_get_group",
    "type": "CPP"
  },
  {
    "name": "t _uv__getpwuid_r",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_get_passwd2",
    "type": "CPP"
  },
  {
    "name": "T _uv_translate_sys_error",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_environ",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_setenv",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_unsetenv",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_gethostname",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_osfhandle",
    "type": "CPP"
  },
  {
    "name": "T _uv_open_osfhandle",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_getpid",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_getppid",
    "type": "CPP"
  },
  {
    "name": "T _uv_cpumask_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_getpriority",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_setpriority",
    "type": "CPP"
  },
  {
    "name": "T _uv_os_uname",
    "type": "CPP"
  },
  {
    "name": "t _uv__getsockpeername",
    "type": "CPP"
  },
  {
    "name": "T _uv_gettimeofday",
    "type": "CPP"
  },
  {
    "name": "T _uv_sleep",
    "type": "CPP"
  },
  {
    "name": "t _uv__search_path",
    "type": "CPP"
  },
  {
    "name": "T _uv_available_parallelism",
    "type": "CPP"
  },
  {
    "name": "T _uv_dlopen",
    "type": "CPP"
  },
  {
    "name": "t _uv__dlerror",
    "type": "CPP"
  },
  {
    "name": "T _uv_dlclose",
    "type": "CPP"
  },
  {
    "name": "T _uv_dlsym",
    "type": "CPP"
  },
  {
    "name": "T _uv_dlerror",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_access",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_done",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_chmod",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_chown",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_fchmod",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_fchown",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_lchown",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_fdatasync",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_fstat",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_fsync",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_ftruncate",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_futime",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_lutime",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_lstat",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_link",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_mkdir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_mkdtemp",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_mkstemp",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_open",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_read",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_scandir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_opendir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_readdir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_closedir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_readlink",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_realpath",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_rename",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_rmdir",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_sendfile",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_stat",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_symlink",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_unlink",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_utime",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_write",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_req_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_copyfile",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_statfs",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_get_system_error",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_fsync",
    "type": "CPP"
  },
  {
    "name": "t _uv__mkostemp_initonce",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_scandir_filter",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_scandir_sort",
    "type": "CPP"
  },
  {
    "name": "t _uv__getaddrinfo_translate_error",
    "type": "CPP"
  },
  {
    "name": "T _uv_getaddrinfo",
    "type": "CPP"
  },
  {
    "name": "t _uv__getaddrinfo_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__getaddrinfo_done",
    "type": "CPP"
  },
  {
    "name": "T _uv_freeaddrinfo",
    "type": "CPP"
  },
  {
    "name": "T _uv_if_indextoname",
    "type": "CPP"
  },
  {
    "name": "T _uv_if_indextoiid",
    "type": "CPP"
  },
  {
    "name": "T _uv_getnameinfo",
    "type": "CPP"
  },
  {
    "name": "t _uv__getnameinfo_work",
    "type": "CPP"
  },
  {
    "name": "t _uv__getnameinfo_done",
    "type": "CPP"
  },
  {
    "name": "T _uv_prepare_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_prepare_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_prepare_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__run_prepare",
    "type": "CPP"
  },
  {
    "name": "t _uv__prepare_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_check_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_check_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_check_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__run_check",
    "type": "CPP"
  },
  {
    "name": "t _uv__check_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_idle_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_idle_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_idle_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__run_idle",
    "type": "CPP"
  },
  {
    "name": "t _uv__idle_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_loop_fork",
    "type": "CPP"
  },
  {
    "name": "t _uv__loop_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__loop_configure",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_bind",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_bind2",
    "type": "CPP"
  },
  {
    "name": "t _uv__pipe_listen",
    "type": "CPP"
  },
  {
    "name": "t _uv__pipe_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_open",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_connect",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_connect2",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_getsockname",
    "type": "CPP"
  },
  {
    "name": "t _uv__pipe_getsockpeername",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_getpeername",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_pending_instances",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_pending_count",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_pending_type",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe_chmod",
    "type": "CPP"
  },
  {
    "name": "T _uv_pipe",
    "type": "CPP"
  },
  {
    "name": "t _uv__make_pipe",
    "type": "CPP"
  },
  {
    "name": "T _uv_poll_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__poll_io",
    "type": "CPP"
  },
  {
    "name": "T _uv_poll_init_socket",
    "type": "CPP"
  },
  {
    "name": "T _uv_poll_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__poll_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_poll_start",
    "type": "CPP"
  },
  {
    "name": "t _uv__poll_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__process_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__wait_children",
    "type": "CPP"
  },
  {
    "name": "t _uv__spawn_find_path_in_env",
    "type": "CPP"
  },
  {
    "name": "T _uv_spawn",
    "type": "CPP"
  },
  {
    "name": "T _uv_process_kill",
    "type": "CPP"
  },
  {
    "name": "T _uv_kill",
    "type": "CPP"
  },
  {
    "name": "t _uv__process_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__spawn_init_posix_spawn",
    "type": "CPP"
  },
  {
    "name": "t _uv__process_child_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__write_int",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_readpath",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_devurandom",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_devurandom_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_global_once_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_global_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_loop_fork",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_loop_once_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_loop_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_signal_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_signal_start",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_signal_start_oneshot",
    "type": "CPP"
  },
  {
    "name": "T _uv_signal_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_global_reinit",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_unlock",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_event",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_block_and_lock",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_first_handle",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_register_handler",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_unlock_and_unblock",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_lock",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_compare",
    "type": "CPP"
  },
  {
    "name": "t _uv__signal_handler",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_io",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_try_select",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_osx_select_cb",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_osx_select",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_osx_cb_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_open",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_flush_write_queue",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_destroy",
    "type": "CPP"
  },
  {
    "name": "t _uv__write_callbacks",
    "type": "CPP"
  },
  {
    "name": "t _uv__drain",
    "type": "CPP"
  },
  {
    "name": "t _uv__server_io",
    "type": "CPP"
  },
  {
    "name": "t _uv___stream_fd",
    "type": "CPP"
  },
  {
    "name": "T _uv_accept",
    "type": "CPP"
  },
  {
    "name": "T _uv_listen",
    "type": "CPP"
  },
  {
    "name": "T _uv_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _uv_write2",
    "type": "CPP"
  },
  {
    "name": "t _uv__check_before_write",
    "type": "CPP"
  },
  {
    "name": "t _uv__write",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_osx_interrupt_select",
    "type": "CPP"
  },
  {
    "name": "T _uv_write",
    "type": "CPP"
  },
  {
    "name": "T _uv_try_write",
    "type": "CPP"
  },
  {
    "name": "T _uv_try_write2",
    "type": "CPP"
  },
  {
    "name": "t _uv__try_write",
    "type": "CPP"
  },
  {
    "name": "t _uv__read_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_read_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_is_readable",
    "type": "CPP"
  },
  {
    "name": "T _uv_is_writable",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_stream_set_blocking",
    "type": "CPP"
  },
  {
    "name": "t _uv__stream_eof",
    "type": "CPP"
  },
  {
    "name": "t _uv__write_req_finish",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_init_ex",
    "type": "CPP"
  },
  {
    "name": "t _new_socket",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_bind",
    "type": "CPP"
  },
  {
    "name": "t _maybe_new_socket",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_connect",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_open",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_getsockname",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_getpeername",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_close_reset",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_listen",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_nodelay",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_keepalive",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_nodelay",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_keepalive",
    "type": "CPP"
  },
  {
    "name": "T _uv_tcp_simultaneous_accepts",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcp_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_socketpair",
    "type": "CPP"
  },
  {
    "name": "t _maybe_bind_socket",
    "type": "CPP"
  },
  {
    "name": "t _uv__thread_stack_size",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_create",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_create_ex",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_setaffinity",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_getaffinity",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_getcpu",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_self",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_join",
    "type": "CPP"
  },
  {
    "name": "T _uv_thread_equal",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_init_recursive",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_destroy",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_lock",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_trylock",
    "type": "CPP"
  },
  {
    "name": "T _uv_mutex_unlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_destroy",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_rdlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_tryrdlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_rdunlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_wrlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_trywrlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_rwlock_wrunlock",
    "type": "CPP"
  },
  {
    "name": "T _uv_once",
    "type": "CPP"
  },
  {
    "name": "T _uv_sem_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_sem_destroy",
    "type": "CPP"
  },
  {
    "name": "T _uv_sem_post",
    "type": "CPP"
  },
  {
    "name": "T _uv_sem_wait",
    "type": "CPP"
  },
  {
    "name": "T _uv_sem_trywait",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_destroy",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_signal",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_wait",
    "type": "CPP"
  },
  {
    "name": "T _uv_cond_timedwait",
    "type": "CPP"
  },
  {
    "name": "T _uv_key_create",
    "type": "CPP"
  },
  {
    "name": "T _uv_key_delete",
    "type": "CPP"
  },
  {
    "name": "T _uv_key_get",
    "type": "CPP"
  },
  {
    "name": "T _uv_key_set",
    "type": "CPP"
  },
  {
    "name": "t _uv__tcsetattr",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_guess_handle",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_set_mode",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_get_winsize",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_reset_mode",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_set_vterm_state",
    "type": "CPP"
  },
  {
    "name": "T _uv_tty_get_vterm_state",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_finish_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_run_completed",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_bind",
    "type": "CPP"
  },
  {
    "name": "t _uv__set_reuse",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_connect",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_maybe_deferred_bind",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_disconnect",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_send",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_sendmsg",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_try_send",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_init_ex",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_io",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_using_recvmmsg",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_open",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_membership",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_source_membership",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_ttl",
    "type": "CPP"
  },
  {
    "name": "t _uv__setsockopt_maybe_char",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_multicast_ttl",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_multicast_loop",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_set_multicast_interface",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_getpeername",
    "type": "CPP"
  },
  {
    "name": "T _uv_udp_getsockname",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_recv_start",
    "type": "CPP"
  },
  {
    "name": "t _uv__udp_recv_stop",
    "type": "CPP"
  },
  {
    "name": "T _uv_interface_addresses",
    "type": "CPP"
  },
  {
    "name": "T _uv_free_interface_addresses",
    "type": "CPP"
  },
  {
    "name": "t _uv__set_process_title",
    "type": "CPP"
  },
  {
    "name": "t _uv__pthread_setname_np",
    "type": "CPP"
  },
  {
    "name": "t _uv__platform_loop_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__platform_loop_delete",
    "type": "CPP"
  },
  {
    "name": "t _uv__hrtime",
    "type": "CPP"
  },
  {
    "name": "t _uv__hrtime_init_once",
    "type": "CPP"
  },
  {
    "name": "T _uv_exepath",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_free_memory",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_total_memory",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_constrained_memory",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_available_memory",
    "type": "CPP"
  },
  {
    "name": "T _uv_loadavg",
    "type": "CPP"
  },
  {
    "name": "T _uv_resident_set_memory",
    "type": "CPP"
  },
  {
    "name": "T _uv_uptime",
    "type": "CPP"
  },
  {
    "name": "T _uv_cpu_info",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_loop_delete",
    "type": "CPP"
  },
  {
    "name": "t _uv__cf_loop_signal",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_cb",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_close",
    "type": "CPP"
  },
  {
    "name": "t _uv__cf_loop_cb",
    "type": "CPP"
  },
  {
    "name": "t _uv__cf_loop_runner",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_push_event",
    "type": "CPP"
  },
  {
    "name": "t _uv__fsevents_event_cb",
    "type": "CPP"
  },
  {
    "name": "t _uv__kqueue_init",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_fork",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_check_fd",
    "type": "CPP"
  },
  {
    "name": "t _uv__io_poll",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_event",
    "type": "CPP"
  },
  {
    "name": "t _uv__kqueue_delete",
    "type": "CPP"
  },
  {
    "name": "t _uv__platform_invalidate_fd",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_event_init",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_event_start",
    "type": "CPP"
  },
  {
    "name": "T _uv_fs_event_stop",
    "type": "CPP"
  },
  {
    "name": "t _uv__fs_event_close",
    "type": "CPP"
  },
  {
    "name": "T _uv_setup_args",
    "type": "CPP"
  },
  {
    "name": "T _uv_set_process_title",
    "type": "CPP"
  },
  {
    "name": "t _init_process_title_mutex_once",
    "type": "CPP"
  },
  {
    "name": "T _uv_get_process_title",
    "type": "CPP"
  },
  {
    "name": "t _uv__process_title_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_getentropy",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_getentropy_init",
    "type": "CPP"
  },
  {
    "name": "t _uv_fs_poll_stop.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_fs_poll_stop.cold.2",
    "type": "CPP"
  },
  {
    "name": "t _timer_close_cb.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_fs_poll_getpath.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _timer_cb.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _timer_cb.cold.2",
    "type": "CPP"
  },
  {
    "name": "t _uv__utf8_decode1.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv__idna_toascii_label.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv__idna_toascii_label.cold.2",
    "type": "CPP"
  },
  {
    "name": "t _uv__idna_toascii_label.cold.3",
    "type": "CPP"
  },
  {
    "name": "t _uv__random_done.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_barrier_destroy.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv__queue_done.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_loop_delete.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv__async_io.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_close.cold.1",
    "type": "CPP"
  },
  {
    "name": "t _uv_close.cold.2",
    "type": "CPP"
  },
  {
    "name": "t _uv__make_close_pending.cold.1",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlidec.1.1.0.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "t _BrotliInitBitReader",
    "type": "CPP"
  },
  {
    "name": "t _BrotliWarmupBitReader",
    "type": "CPP"
  },
  {
    "name": "t _BrotliSafeReadBits32Slow",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderSetParameter",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderCreateInstance",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderDestroyInstance",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderAttachDictionary",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderDecompress",
    "type": "CPP"
  },
  {
    "name": "T _BrotliDecoderDecompressStream",
    "type": "CPP"
  },
  {
    "name": "t _SaveErrorCode",
    "type": "CPP"
  },
  {
    "name": "t _WriteRingBuffer",
    "type": "CPP"
  },
  {
    "name": "t _DecodeMetaBlockLength",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCalculateRingBufferSize",
    "type": "CPP"
  },
  {
    "name": "t _DecodeVarLenUint8",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlienc.1.1.0.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "t _BrotliCreateBackwardReferences",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH5",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH6",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH40",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH41",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH42",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH55",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesDH65",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH2",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH3",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH4",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH5",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH6",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH40",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH41",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH42",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH54",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH35",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH55",
    "type": "CPP"
  },
  {
    "name": "t _CreateBackwardReferencesNH65",
    "type": "CPP"
  },
  {
    "name": "t _BrotliInitZopfliNodes",
    "type": "CPP"
  },
  {
    "name": "t _BrotliZopfliCreateCommands",
    "type": "CPP"
  },
  {
    "name": "t _BrotliZopfliComputeShortestPath",
    "type": "CPP"
  },
  {
    "name": "t _InitZopfliCostModel",
    "type": "CPP"
  },
  {
    "name": "t _ZopfliCostModelSetFromLiteralCosts",
    "type": "CPP"
  },
  {
    "name": "t _MergeMatches",
    "type": "CPP"
  },
  {
    "name": "t _UpdateNodes",
    "type": "CPP"
  },
  {
    "name": "t _EvaluateNode",
    "type": "CPP"
  },
  {
    "name": "t _ComputeShortestPathFromNodes",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCreateZopfliBackwardReferences",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCreateHqZopfliBackwardReferences",
    "type": "CPP"
  },
  {
    "name": "t _SetCost",
    "type": "CPP"
  },
  {
    "name": "t _BrotliPopulationCostLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliPopulationCostCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliPopulationCostDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliInitBlockSplit",
    "type": "CPP"
  },
  {
    "name": "t _BrotliDestroyBlockSplit",
    "type": "CPP"
  },
  {
    "name": "t _BrotliSplitBlock",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreHuffmanTree",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBuildAndStoreHuffmanTreeFast",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreMetaBlock",
    "type": "CPP"
  },
  {
    "name": "t _StoreCompressedMetaBlockHeader",
    "type": "CPP"
  },
  {
    "name": "t _BuildAndStoreBlockSwitchEntropyCodes",
    "type": "CPP"
  },
  {
    "name": "t _StoreTrivialContextMap",
    "type": "CPP"
  },
  {
    "name": "t _EncodeContextMap",
    "type": "CPP"
  },
  {
    "name": "t _StoreSymbol",
    "type": "CPP"
  },
  {
    "name": "t _StoreSymbolWithContext",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreMetaBlockTrivial",
    "type": "CPP"
  },
  {
    "name": "t _BuildHistograms",
    "type": "CPP"
  },
  {
    "name": "t _BuildAndStoreHuffmanTree",
    "type": "CPP"
  },
  {
    "name": "t _StoreDataWithHuffmanCodes",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreMetaBlockFast",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreUncompressedMetaBlock",
    "type": "CPP"
  },
  {
    "name": "t _StoreVarLenUint8",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompareAndPushToQueueLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramCombineLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramBitCostDistanceLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramRemapLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramReindexLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliClusterHistogramsLiteral",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompareAndPushToQueueCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramCombineCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramBitCostDistanceCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramRemapCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramReindexCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliClusterHistogramsCommand",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompareAndPushToQueueDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramCombineDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramBitCostDistanceDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramRemapDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliHistogramReindexDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliClusterHistogramsDistance",
    "type": "CPP"
  },
  {
    "name": "t _CreatePreparedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _DestroyPreparedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _AttachPreparedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentFast",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentFastImpl9",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentFastImpl11",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentFastImpl13",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentFastImpl15",
    "type": "CPP"
  },
  {
    "name": "t _EmitUncompressedMetaBlock",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreMetaBlockHeader",
    "type": "CPP"
  },
  {
    "name": "t _BuildAndStoreLiteralPrefixCode",
    "type": "CPP"
  },
  {
    "name": "t _BuildAndStoreCommandPrefixCode",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPass",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl8",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl9",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl10",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl11",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl12",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl13",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl14",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl15",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl16",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCompressFragmentTwoPassImpl17",
    "type": "CPP"
  },
  {
    "name": "t _EmitUncompressedMetaBlock",
    "type": "CPP"
  },
  {
    "name": "t _BrotliStoreMetaBlockHeader",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderSetParameter",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderCreateInstance",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderDestroyInstance",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderMaxCompressedSize",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderCompress",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderCompressStream",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderIsFinished",
    "type": "CPP"
  },
  {
    "name": "t _InjectFlushOrPushOutput",
    "type": "CPP"
  },
  {
    "name": "t _EncodeData",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderHasMoreOutput",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderTakeOutput",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderVersion",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderPrepareDictionary",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderDestroyPreparedDictionary",
    "type": "CPP"
  },
  {
    "name": "T _BrotliEncoderAttachPreparedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliEncoderEstimatePeakMemoryUsage",
    "type": "CPP"
  },
  {
    "name": "t _BrotliEncoderGetPreparedDictionarySize",
    "type": "CPP"
  },
  {
    "name": "t _GetBrotliStorage",
    "type": "CPP"
  },
  {
    "name": "t _GetHashTable",
    "type": "CPP"
  },
  {
    "name": "t _UpdateLastProcessedPos",
    "type": "CPP"
  },
  {
    "name": "t _ExtendLastCommand",
    "type": "CPP"
  },
  {
    "name": "t _PrepareH3",
    "type": "CPP"
  },
  {
    "name": "t _PrepareH6",
    "type": "CPP"
  },
  {
    "name": "t _PrepareH54",
    "type": "CPP"
  },
  {
    "name": "t _BrotliInitSharedEncoderDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCleanupSharedEncoderDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliDestroyEncoderDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCreateManagedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliDestroyManagedDictionary",
    "type": "CPP"
  },
  {
    "name": "t _BrotliSetDepth",
    "type": "CPP"
  },
  {
    "name": "t _BrotliCreateHuffmanTree",
    "type": "CPP"
  },
  {
    "name": "t _BrotliOptimizeHuffmanCountsForRle",
    "type": "CPP"
  },
  {
    "name": "t _BrotliWriteHuffmanTree",
    "type": "CPP"
  },
  {
    "name": "t _BrotliConvertBitDepthsToSymbols",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBuildHistogramsWithContext",
    "type": "CPP"
  },
  {
    "name": "t _BrotliEstimateBitCostsForLiterals",
    "type": "CPP"
  },
  {
    "name": "t _BrotliInitMemoryManager",
    "type": "CPP"
  },
  {
    "name": "t _BrotliAllocate",
    "type": "CPP"
  },
  {
    "name": "t _BrotliFree",
    "type": "CPP"
  },
  {
    "name": "t _BrotliWipeOutMemoryManager",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBootstrapAlloc",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBootstrapFree",
    "type": "CPP"
  },
  {
    "name": "t _BrotliInitDistanceParams",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBuildMetaBlock",
    "type": "CPP"
  },
  {
    "name": "t _ComputeDistanceCost",
    "type": "CPP"
  },
  {
    "name": "t _BrotliBuildMetaBlockGreedy",
    "type": "CPP"
  },
  {
    "name": "t _BrotliOptimizeHistograms",
    "type": "CPP"
  },
  {
    "name": "t _BlockSplitterFinishBlockLiteral",
    "type": "CPP"
  },
  {
    "name": "t _ContextBlockSplitterFinishBlock",
    "type": "CPP"
  },
  {
    "name": "t _BlockSplitterFinishBlockCommand",
    "type": "CPP"
  },
  {
    "name": "t _BlockSplitterFinishBlockDistance",
    "type": "CPP"
  },
  {
    "name": "t _BrotliFindAllStaticDictionaryMatches",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/c-ares/1.21.0/lib/libcares.2.7.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _ares__addrinfo2hostent",
    "type": "CPP"
  },
  {
    "name": "T _ares__addrinfo2addrttl",
    "type": "CPP"
  },
  {
    "name": "T _ares_append_ai_node",
    "type": "CPP"
  },
  {
    "name": "T _ares__addrinfo_localhost",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_create",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_create_const",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_reclaim",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_append",
    "type": "CPP"
  },
  {
    "name": "t _ares__buf_ensure_space",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_append_byte",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_append_start",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_append_finish",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_finish_bin",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_finish_str",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_tag",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_tag_rollback",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_tag_clear",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_tag_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_consume",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_be16",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_be32",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_bytes",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_bytes_dup",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_str_dup",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_fetch_bytes_into_buf",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_consume_whitespace",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_consume_nonwhitespace",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_consume_line",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_begins_with",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_len",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_peek",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_get_position",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_set_position",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_parse_dns_name",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_parse_dns_binstr",
    "type": "CPP"
  },
  {
    "name": "T _ares__buf_parse_dns_str",
    "type": "CPP"
  },
  {
    "name": "T _ares__close_connection",
    "type": "CPP"
  },
  {
    "name": "T _ares__close_sockets",
    "type": "CPP"
  },
  {
    "name": "T _ares__check_cleanup_conn",
    "type": "CPP"
  },
  {
    "name": "T _ares__get_hostent",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_destroy",
    "type": "CPP"
  },
  {
    "name": "t _ares__htable_buckets_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_create",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_insert",
    "type": "CPP"
  },
  {
    "name": "t _ares__htable_find",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_get",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_remove",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_num_keys",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_hash_FNV1a",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_hash_FNV1a_casecmp",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_create",
    "type": "CPP"
  },
  {
    "name": "t _hash_func",
    "type": "CPP"
  },
  {
    "name": "t _bucket_key",
    "type": "CPP"
  },
  {
    "name": "t _bucket_free",
    "type": "CPP"
  },
  {
    "name": "t _key_eq",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_insert",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_get",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_get_direct",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_remove",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_asvp_num_keys",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_create",
    "type": "CPP"
  },
  {
    "name": "t _hash_func",
    "type": "CPP"
  },
  {
    "name": "t _bucket_key",
    "type": "CPP"
  },
  {
    "name": "t _bucket_free",
    "type": "CPP"
  },
  {
    "name": "t _key_eq",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_insert",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_get",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_get_direct",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_remove",
    "type": "CPP"
  },
  {
    "name": "T _ares__htable_stvp_num_keys",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_create",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_replace_destructor",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_insert_first",
    "type": "CPP"
  },
  {
    "name": "t _ares__llist_insert_at",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_insert_last",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_insert_before",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_insert_after",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_first",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_last",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_next",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_prev",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_len",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_parent",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_first_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_last_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_claim",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_node_replace",
    "type": "CPP"
  },
  {
    "name": "T _ares__llist_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__parse_into_addrinfo",
    "type": "CPP"
  },
  {
    "name": "T _ares__read_line",
    "type": "CPP"
  },
  {
    "name": "T _ares__readaddrinfo",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_create",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_replace_destructor",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_insert",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_find",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_first",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_last",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_next",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_prev",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_len",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_parent",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_first_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_last_val",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_claim",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_node_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__slist_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__sortaddrinfo",
    "type": "CPP"
  },
  {
    "name": "t _rfc6724_compare",
    "type": "CPP"
  },
  {
    "name": "t _get_scope",
    "type": "CPP"
  },
  {
    "name": "t _get_label",
    "type": "CPP"
  },
  {
    "name": "t _get_precedence",
    "type": "CPP"
  },
  {
    "name": "T _ares__tvnow",
    "type": "CPP"
  },
  {
    "name": "T _ares_cancel",
    "type": "CPP"
  },
  {
    "name": "T _ares_free_data",
    "type": "CPP"
  },
  {
    "name": "T _ares_malloc_data",
    "type": "CPP"
  },
  {
    "name": "T _ares_destroy_options",
    "type": "CPP"
  },
  {
    "name": "T _ares_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ares__destroy_servers_state",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_opcode_isvalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rcode_isvalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_flags_arevalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rec_type_isvalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_class_isvalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_section_isvalid",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_key_to_rec_type",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rec_type_tostr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_class_tostr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_opcode_tostr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_key_tostr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_key_datatype",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_keys",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_parse",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_rr",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_rr_data",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_and_set_dns_name",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_and_set_be32",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_and_set_dns_str",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_parse_and_set_be16",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_create",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_get_id",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_get_opcode",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_get_rcode",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_destroy",
    "type": "CPP"
  },
  {
    "name": "t _ares__dns_rr_free",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_query_cnt",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_query_add",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_query_get",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_rr_cnt",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_rr_prealloc",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_rr_add",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_record_rr_get",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_name",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_type",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_class",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_ttl",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_addr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_addr6",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_u8",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_u16",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_u32",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_bin",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_get_str",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_addr",
    "type": "CPP"
  },
  {
    "name": "t _ares_dns_rr_data_ptr",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_addr6",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_u8",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_u16",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_u32",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_bin_own",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_bin",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_str_own",
    "type": "CPP"
  },
  {
    "name": "T _ares_dns_rr_set_str",
    "type": "CPP"
  },
  {
    "name": "T _ares__expand_name_validated",
    "type": "CPP"
  },
  {
    "name": "T _ares_expand_name",
    "type": "CPP"
  },
  {
    "name": "T _ares__expand_name_for_response",
    "type": "CPP"
  },
  {
    "name": "T _ares_expand_string_ex",
    "type": "CPP"
  },
  {
    "name": "T _ares_expand_string",
    "type": "CPP"
  },
  {
    "name": "T _ares_fds",
    "type": "CPP"
  },
  {
    "name": "T _ares_free_hostent",
    "type": "CPP"
  },
  {
    "name": "T _ares_free_string",
    "type": "CPP"
  },
  {
    "name": "T _ares__freeaddrinfo_cnames",
    "type": "CPP"
  },
  {
    "name": "T _ares__freeaddrinfo_nodes",
    "type": "CPP"
  },
  {
    "name": "T _ares_freeaddrinfo",
    "type": "CPP"
  },
  {
    "name": "T _ares__append_addrinfo_cname",
    "type": "CPP"
  },
  {
    "name": "T _ares__addrinfo_cat_cnames",
    "type": "CPP"
  },
  {
    "name": "T _ares__append_addrinfo_node",
    "type": "CPP"
  },
  {
    "name": "T _ares__addrinfo_cat_nodes",
    "type": "CPP"
  },
  {
    "name": "T _ares_getaddrinfo",
    "type": "CPP"
  },
  {
    "name": "t _next_lookup",
    "type": "CPP"
  },
  {
    "name": "t _is_localhost",
    "type": "CPP"
  },
  {
    "name": "t _end_hquery",
    "type": "CPP"
  },
  {
    "name": "t _as_is_first",
    "type": "CPP"
  },
  {
    "name": "t _host_callback",
    "type": "CPP"
  },
  {
    "name": "T _ares_gethostbyaddr",
    "type": "CPP"
  },
  {
    "name": "t _next_lookup",
    "type": "CPP"
  },
  {
    "name": "t _addr_callback",
    "type": "CPP"
  },
  {
    "name": "t _end_aquery",
    "type": "CPP"
  },
  {
    "name": "T _ares_gethostbyname",
    "type": "CPP"
  },
  {
    "name": "t _ares_gethostbyname_callback",
    "type": "CPP"
  },
  {
    "name": "T _ares_gethostbyname_file",
    "type": "CPP"
  },
  {
    "name": "t _get6_address_index",
    "type": "CPP"
  },
  {
    "name": "t _get_address_index",
    "type": "CPP"
  },
  {
    "name": "T _ares_getnameinfo",
    "type": "CPP"
  },
  {
    "name": "t _lookup_service",
    "type": "CPP"
  },
  {
    "name": "t _append_scopeid",
    "type": "CPP"
  },
  {
    "name": "t _nameinfo_callback",
    "type": "CPP"
  },
  {
    "name": "T _ares__is_onion_domain",
    "type": "CPP"
  },
  {
    "name": "t _ares_striendstr",
    "type": "CPP"
  },
  {
    "name": "T _ares_getsock",
    "type": "CPP"
  },
  {
    "name": "T _ares_init",
    "type": "CPP"
  },
  {
    "name": "T _ares_init_options",
    "type": "CPP"
  },
  {
    "name": "t _ares_query_timeout_cmp_cb",
    "type": "CPP"
  },
  {
    "name": "t _init_by_environment",
    "type": "CPP"
  },
  {
    "name": "t _init_by_resolv_conf",
    "type": "CPP"
  },
  {
    "name": "t _init_by_defaults",
    "type": "CPP"
  },
  {
    "name": "T _ares__init_servers_state",
    "type": "CPP"
  },
  {
    "name": "T _ares_dup",
    "type": "CPP"
  },
  {
    "name": "T _ares_save_options",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_local_ip4",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_local_ip6",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_local_dev",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_socket_callback",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_socket_configure_callback",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_socket_functions",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_sortlist",
    "type": "CPP"
  },
  {
    "name": "t _try_option",
    "type": "CPP"
  },
  {
    "name": "t _default_malloc",
    "type": "CPP"
  },
  {
    "name": "T _ares_malloc_zero",
    "type": "CPP"
  },
  {
    "name": "T _ares_realloc_zero",
    "type": "CPP"
  },
  {
    "name": "T _ares_library_init",
    "type": "CPP"
  },
  {
    "name": "T _ares_library_init_mem",
    "type": "CPP"
  },
  {
    "name": "T _ares_library_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ares_library_initialized",
    "type": "CPP"
  },
  {
    "name": "T _ares__round_up_pow2",
    "type": "CPP"
  },
  {
    "name": "T _ares__log2",
    "type": "CPP"
  },
  {
    "name": "T _ares_mkquery",
    "type": "CPP"
  },
  {
    "name": "T _ares_create_query",
    "type": "CPP"
  },
  {
    "name": "T _ares_get_servers",
    "type": "CPP"
  },
  {
    "name": "T _ares_get_servers_ports",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_servers",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_servers_ports",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_servers_csv",
    "type": "CPP"
  },
  {
    "name": "t _set_servers_csv",
    "type": "CPP"
  },
  {
    "name": "T _ares_set_servers_ports_csv",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_a_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_aaaa_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_caa_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_mx_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_naptr_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_ns_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_ptr_reply",
    "type": "CPP"
  },
  {
    "name": "T _ares_parse_soa_reply",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/libnghttp2/1.58.0/lib/libnghttp2.14.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "t _nghttp2_pq_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_push",
    "type": "CPP"
  },
  {
    "name": "t _bubble_up",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_top",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_pop",
    "type": "CPP"
  },
  {
    "name": "t _bubble_down",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_remove",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_empty",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_update",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_pq_each",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_each_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_each",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_print_distance",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_insert",
    "type": "CPP"
  },
  {
    "name": "t _map_resize",
    "type": "CPP"
  },
  {
    "name": "t _insert",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_find",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_remove",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_clear",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_map_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_push",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_pop",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_front",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_back",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_queue_empty",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_frame_hd",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_frame_hd",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_hd_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_headers_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_headers_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_nv_array_del",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_priority_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_priority_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_rst_stream_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_rst_stream_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_settings_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_settings_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_push_promise_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_push_promise_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_ping_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_ping_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_goaway_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_goaway_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_window_update_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_window_update_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_trail_padlen",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_data_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_data_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_extension_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_extension_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_altsvc_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_altsvc_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_origin_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_origin_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_priority_update_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_priority_update_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_priority_len",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_headers_payload_nv_offset",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_headers",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_priority_spec",
    "type": "CPP"
  },
  {
    "name": "t _frame_pack_headers_shared",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_priority_spec",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_headers_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_priority",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_priority_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_rst_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_rst_stream_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_settings",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_settings_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_settings_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_settings_entry",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_settings_payload2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_push_promise",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_push_promise_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_ping",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_ping_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_goaway",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_goaway_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_goaway_payload2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_window_update",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_window_update_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_altsvc",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_altsvc_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_altsvc_payload2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_origin",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_origin_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_pack_priority_update",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_unpack_priority_update_payload",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_iv_copy",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_nv_equal",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_nv_compare_name",
    "type": "CPP"
  },
  {
    "name": "t _bytes_compar",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_nv_array_sort",
    "type": "CPP"
  },
  {
    "name": "t _nv_compar",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_nv_array_copy",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_iv_check",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_frame_add_pad",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_init2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_reserve",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_reset",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_buf_wrap_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_init2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_init3",
    "type": "CPP"
  },
  {
    "name": "t _buf_chain_new",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_realloc",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_wrap_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_wrap_init2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_wrap_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_seek_last_present",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_len",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_add",
    "type": "CPP"
  },
  {
    "name": "t _bufs_alloc_chain",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_addb",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_addb_hold",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_orb",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_orb_hold",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_remove",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_remove_copy",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_reset",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_advance",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_bufs_next_present",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_init",
    "type": "CPP"
  },
  {
    "name": "t _stream_less",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_shutdown",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_reschedule",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_change_weight",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_distributed_weight",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_attach_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_detach_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_defer_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_resume_deferred_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_check_deferred_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_check_deferred_by_flow_control",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_update_remote_initial_window_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_update_local_initial_window_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_promise_fulfilled",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_find_ancestor",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_insert",
    "type": "CPP"
  },
  {
    "name": "t _stream_obq_move",
    "type": "CPP"
  },
  {
    "name": "t _stream_obq_push",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_add",
    "type": "CPP"
  },
  {
    "name": "t _insert_link_dep",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_remove",
    "type": "CPP"
  },
  {
    "name": "t _stream_obq_remove",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_insert_subtree",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_add_subtree",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_dep_remove_subtree",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_in_dep_tree",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_stream_next_outbound_item",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_state",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_parent",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_next_sibling",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_previous_sibling",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_first_child",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_weight",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_sum_dependency_weight",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_stream_get_stream_id",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_outbound_item_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_outbound_item_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_outbound_queue_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_outbound_queue_push",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_outbound_queue_pop",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_is_fatal",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_terminate_session",
    "type": "CPP"
  },
  {
    "name": "t _session_terminate_session",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_terminate_session2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_terminate_session_with_reason",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_is_my_stream_id",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_get_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_get_stream_raw",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_client_new",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_client_new3",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_client_new2",
    "type": "CPP"
  },
  {
    "name": "t _session_new",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_server_new",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_server_new3",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_server_new2",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_del",
    "type": "CPP"
  },
  {
    "name": "t _inflight_settings_del",
    "type": "CPP"
  },
  {
    "name": "t _free_streams",
    "type": "CPP"
  },
  {
    "name": "t _ob_q_free",
    "type": "CPP"
  },
  {
    "name": "t _active_outbound_item_reset",
    "type": "CPP"
  },
  {
    "name": "t _session_inbound_frame_reset",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_reprioritize_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_open_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_rst_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_detach_idle_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_keep_idle_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_close_stream",
    "type": "CPP"
  },
  {
    "name": "t _session_detach_stream_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_destroy_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_keep_closed_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_adjust_closed_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_adjust_idle_stream",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_close_stream_if_shut_rdwr",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_check_request_allowed",
    "type": "CPP"
  },
  {
    "name": "t _session_is_closing",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_get_next_ob_item",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_pop_next_ob_item",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_mem_send",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_mem_send_internal",
    "type": "CPP"
  },
  {
    "name": "t _session_after_frame_sent1",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_send",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_request_headers_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_response_headers_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_push_response_headers_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_headers_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_priority_received",
    "type": "CPP"
  },
  {
    "name": "t _session_handle_invalid_connection",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_rst_stream_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_update_local_settings",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_settings_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_settings",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_push_promise_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_ping_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_ping",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_goaway_received",
    "type": "CPP"
  },
  {
    "name": "t _session_close_stream_on_goaway",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_window_update_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_altsvc_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_origin_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_priority_update_received",
    "type": "CPP"
  },
  {
    "name": "t _session_update_stream_priority",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_on_data_received",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_update_recv_stream_window_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_window_update",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_update_recv_connection_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_mem_recv",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_want_read",
    "type": "CPP"
  },
  {
    "name": "t _session_call_error_callback",
    "type": "CPP"
  },
  {
    "name": "t _session_on_data_received_fail_fast",
    "type": "CPP"
  },
  {
    "name": "t _session_process_headers_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_priority_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_rst_stream_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_push_promise_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_ping_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_window_update_frame",
    "type": "CPP"
  },
  {
    "name": "t _session_process_priority_update_frame",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_consume",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_recv",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_want_write",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_add_goaway",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_pack_data",
    "type": "CPP"
  },
  {
    "name": "t _session_call_select_padding",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_user_data",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_set_stream_user_data",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_resume_data",
    "type": "CPP"
  },
  {
    "name": "t _session_resume_deferred_stream_item",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_outbound_queue_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_effective_recv_data_length",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_effective_local_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_local_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_effective_recv_data_length",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_effective_local_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_local_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_remote_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_remote_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_remote_settings",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_local_settings",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_upgrade",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_upgrade_internal",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_upgrade2",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_local_close",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_stream_remote_close",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_consume_connection",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_consume_stream",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_set_next_stream_id",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_next_stream_id",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_last_proc_stream_id",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_find_stream",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_root_stream",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_check_server_session",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_change_stream_priority",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_create_idle_stream",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_hd_inflate_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_get_hd_deflate_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_set_user_data",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_change_extpri_stream_priority",
    "type": "CPP"
  },
  {
    "name": "t _stream_less",
    "type": "CPP"
  },
  {
    "name": "t _session_ob_data_push",
    "type": "CPP"
  },
  {
    "name": "t _session_ob_data_remove",
    "type": "CPP"
  },
  {
    "name": "t _session_after_frame_sent2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_session_predicate_data_send",
    "type": "CPP"
  },
  {
    "name": "t _session_defer_stream_item",
    "type": "CPP"
  },
  {
    "name": "t _session_predicate_push_response_headers_send",
    "type": "CPP"
  },
  {
    "name": "t _session_headers_add_pad",
    "type": "CPP"
  },
  {
    "name": "t _session_handle_invalid_stream2",
    "type": "CPP"
  },
  {
    "name": "t _get_error_code_from_lib_error_code",
    "type": "CPP"
  },
  {
    "name": "t _update_local_initial_window_size_func",
    "type": "CPP"
  },
  {
    "name": "t _update_remote_initial_window_size_func",
    "type": "CPP"
  },
  {
    "name": "t _find_stream_on_goaway_func",
    "type": "CPP"
  },
  {
    "name": "t _session_update_consumed_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_trailer",
    "type": "CPP"
  },
  {
    "name": "t _submit_headers_shared_nva",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_headers",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_ping",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_priority",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_rst_stream",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_goaway",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_shutdown_notice",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_settings",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_push_promise",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_window_update",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_session_set_local_window_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_altsvc",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_origin",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_priority_update",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_request",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_response",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_data",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_pack_settings_payload",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_submit_extension",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_put_uint16be",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_put_uint32be",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_get_uint16",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_get_uint32",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_downcase",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_adjust_local_window_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_increase_local_window_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_should_send_window_update",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_strerror",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_header_name",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_header_value",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_header_value_rfc9113",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_method",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_path",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_check_authority",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_cpymem",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_http2_strerror",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_select_next_protocol",
    "type": "CPP"
  },
  {
    "name": "t _select_next_protocol",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_entry_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_entry_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_deflate_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_deflate_init2",
    "type": "CPP"
  },
  {
    "name": "t _hd_context_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_inflate_init",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_deflate_free",
    "type": "CPP"
  },
  {
    "name": "t _hd_context_free",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_inflate_free",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_change_table_size",
    "type": "CPP"
  },
  {
    "name": "t _hd_context_shrink_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_change_table_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_table_get",
    "type": "CPP"
  },
  {
    "name": "t _hd_ringbuf_get",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_deflate_hd_bufs",
    "type": "CPP"
  },
  {
    "name": "t _emit_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_hd",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_hd_vec",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_bound",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_new",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_new2",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_del",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_hd",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_hd2",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_inflate_hd_nv",
    "type": "CPP"
  },
  {
    "name": "t _hd_inflate_read_len",
    "type": "CPP"
  },
  {
    "name": "t _hd_inflate_read_huff",
    "type": "CPP"
  },
  {
    "name": "t _hd_inflate_commit_newname",
    "type": "CPP"
  },
  {
    "name": "t _hd_inflate_commit_indname",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_end_headers",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_new",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_new2",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_del",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_emit_indname_block",
    "type": "CPP"
  },
  {
    "name": "t _emit_indname_block",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_emit_newname_block",
    "type": "CPP"
  },
  {
    "name": "t _emit_newname_block",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_emit_table_size",
    "type": "CPP"
  },
  {
    "name": "t _nghttp2_hd_decode_length",
    "type": "CPP"
  },
  {
    "name": "t _decode_length",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_get_num_table_entries",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_get_table_entry",
    "type": "CPP"
  },
  {
    "name": "t _hd_get_table_entry",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_get_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_deflate_get_max_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_get_num_table_entries",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_get_table_entry",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_get_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "T _nghttp2_hd_inflate_get_max_dynamic_table_size",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/openssl@3/3.1.4/lib/libcrypto.3.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _AES_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_cfb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_cfb1_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_cfb8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _AES_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _AES_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_ige_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_bi_ige_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_options",
    "type": "CPP"
  },
  {
    "name": "T _AES_ofb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _AES_wrap_key",
    "type": "CPP"
  },
  {
    "name": "T _AES_unwrap_key",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_ctr32_encrypt_blocks",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_xts_encrypt",
    "type": "CPP"
  },
  {
    "name": "t .composite_enc_loop",
    "type": "CPP"
  },
  {
    "name": "T _aes_v8_xts_decrypt",
    "type": "CPP"
  },
  {
    "name": "t .composite_dec_loop",
    "type": "CPP"
  },
  {
    "name": "t _bsaes_decrypt8",
    "type": "CPP"
  },
  {
    "name": "t _bsaes_const",
    "type": "CPP"
  },
  {
    "name": "t _bsaes_encrypt8",
    "type": "CPP"
  },
  {
    "name": "t _bsaes_encrypt8_alt",
    "type": "CPP"
  },
  {
    "name": "t _bsaes_key_convert",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bsaes_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bsaes_ctr32_encrypt_blocks",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bsaes_xts_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bsaes_xts_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_consts",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_encrypt_preheat",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_encrypt_core",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_encrypt_2x",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_decrypt_preheat",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_decrypt_core",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_decrypt_2x",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_key_preheat",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_core",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_192_smear",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_round",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_low_round",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_transform",
    "type": "CPP"
  },
  {
    "name": "t _vpaes_schedule_mangle",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "t vpaes_cbc_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpaes_ecb_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_aria_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_aria_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_aria_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_set",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2c_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c2i_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_set_bit",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_get_bit",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_check",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_d2i_fp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_d2i_bio",
    "type": "CPP"
  },
  {
    "name": "T _asn1_d2i_read_bio",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i_bio_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i_bio",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i_fp_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i_fp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_digest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_item_digest_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_digest",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_check",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_set_string",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_adj",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_i2d_fp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_i2d_bio",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_i2d_fp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_i2d_bio",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_i2d_mem_bio",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2c_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "t _i2c_ibuf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c2i_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "t _c2i_ibuf",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_UINTEGER",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_get_int64",
    "type": "CPP"
  },
  {
    "name": "t _asn1_string_get_int64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_set_int64",
    "type": "CPP"
  },
  {
    "name": "t _asn1_string_set_int64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_get_uint64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_set_uint64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_get",
    "type": "CPP"
  },
  {
    "name": "T _BN_to_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "t _bn_to_asn1_string",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_to_BN",
    "type": "CPP"
  },
  {
    "name": "t _asn1_string_to_bn",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_get_int64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_set_int64",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_get",
    "type": "CPP"
  },
  {
    "name": "T _BN_to_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_to_BN",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c2i_uint64_int",
    "type": "CPP"
  },
  {
    "name": "t _asn1_get_uint64",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2c_uint64_int",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_mbstring_copy",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_mbstring_ncopy",
    "type": "CPP"
  },
  {
    "name": "t _traverse_string",
    "type": "CPP"
  },
  {
    "name": "t _type_str",
    "type": "CPP"
  },
  {
    "name": "t _cpy_asc",
    "type": "CPP"
  },
  {
    "name": "t _cpy_bmp",
    "type": "CPP"
  },
  {
    "name": "t _cpy_univ",
    "type": "CPP"
  },
  {
    "name": "t _out_utf8",
    "type": "CPP"
  },
  {
    "name": "t _cpy_utf8",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _a2d_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _i2t_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _i2a_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c2i_ASN1_OBJECT",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OBJECT_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OBJECT_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OBJECT_create",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLE_type",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UNIVERSALSTRING_to_string",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_sign",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_sign",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_sign_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_sign_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_print_ex",
    "type": "CPP"
  },
  {
    "name": "t _do_name_ex",
    "type": "CPP"
  },
  {
    "name": "t _send_bio_chars",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_print_ex_fp",
    "type": "CPP"
  },
  {
    "name": "t _send_fp_chars",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_print_ex",
    "type": "CPP"
  },
  {
    "name": "t _do_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_print_ex_fp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_to_UTF8",
    "type": "CPP"
  },
  {
    "name": "t _do_buf",
    "type": "CPP"
  },
  {
    "name": "t _do_hex_dump",
    "type": "CPP"
  },
  {
    "name": "t _do_esc_char",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_set_default_mask",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_get_default_mask",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_set_default_mask_asc",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_set_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_TABLE_get",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_TABLE_add",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_TABLE_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _st_free",
    "type": "CPP"
  },
  {
    "name": "t _table_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _sk_table_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_TIME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_TIME",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_time_to_tm",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_time_from_tm",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_adj",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_check",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_to_generalizedtime",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_to_tm",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_set_string",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_set_string_X509",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_diff",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_time_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_cmp_time_t",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_normalize",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TIME_compare",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_get",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_set1",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_pack_sequence",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_unpack_sequence",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_utctime_to_tm",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_check",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_set_string",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_adj",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_cmp_time_t",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_print",
    "type": "CPP"
  },
  {
    "name": "T _UTF8_getc",
    "type": "CPP"
  },
  {
    "name": "T _UTF8_putc",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_verify",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_verify",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_verify_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_verify_ctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_get_count",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_get0",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_find",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_find_str",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_add0",
    "type": "CPP"
  },
  {
    "name": "t _ameth_cmp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_add_alias",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_get0_info",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_asn1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_public",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_private",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_item",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_siginf",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_public_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_param_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_set_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_set_pub_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_get_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_asn1_set_get_pub_key",
    "type": "CPP"
  },
  {
    "name": "t _ameth_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_ASN1_strings",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_generate_nconf",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_generate_v3",
    "type": "CPP"
  },
  {
    "name": "t _generate_v3",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_str2mask",
    "type": "CPP"
  },
  {
    "name": "t _mask_cb",
    "type": "CPP"
  },
  {
    "name": "t _asn1_cb",
    "type": "CPP"
  },
  {
    "name": "t _asn1_str2tag",
    "type": "CPP"
  },
  {
    "name": "t _parse_tagging",
    "type": "CPP"
  },
  {
    "name": "t _append_exp",
    "type": "CPP"
  },
  {
    "name": "t _bitstr_cb",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ITEM_lookup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ITEM_get",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_check_infinite_end",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_const_check_infinite_end",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_get_object",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_put_object",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_put_eoc",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_object_size",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_copy",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_dup",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_set0",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_type_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_string_embed_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_length",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_length_set",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_type",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_get0_data",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_STRING_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sk_ASN1_UTF8STRING2text",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_parse",
    "type": "CPP"
  },
  {
    "name": "t _asn1_parse2",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_parse_dump",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_tag2str",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_bio_stream",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_crlf_copy",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_ASN1_stream",
    "type": "CPP"
  },
  {
    "name": "t _B64_write_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_write_ASN1_ex",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_write_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_ASN1_ex",
    "type": "CPP"
  },
  {
    "name": "t _mime_parse_hdr",
    "type": "CPP"
  },
  {
    "name": "t _mime_hdr_find",
    "type": "CPP"
  },
  {
    "name": "t _mime_hdr_free",
    "type": "CPP"
  },
  {
    "name": "t _b64_read_asn1",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_ASN1",
    "type": "CPP"
  },
  {
    "name": "t _strip_eol",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_text",
    "type": "CPP"
  },
  {
    "name": "t _mime_hdr_cmp",
    "type": "CPP"
  },
  {
    "name": "t _strip_ends",
    "type": "CPP"
  },
  {
    "name": "t _mime_hdr_new",
    "type": "CPP"
  },
  {
    "name": "t _mime_hdr_addparam",
    "type": "CPP"
  },
  {
    "name": "t _mime_param_cmp",
    "type": "CPP"
  },
  {
    "name": "t _mime_param_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_add_oid_module",
    "type": "CPP"
  },
  {
    "name": "t _oid_module_init",
    "type": "CPP"
  },
  {
    "name": "t _oid_module_finish",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_add_stable_module",
    "type": "CPP"
  },
  {
    "name": "t _stbl_module_init",
    "type": "CPP"
  },
  {
    "name": "t _stbl_module_finish",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_pack",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_unpack",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_asn1",
    "type": "CPP"
  },
  {
    "name": "T _BIO_asn1_set_prefix",
    "type": "CPP"
  },
  {
    "name": "T _BIO_asn1_get_prefix",
    "type": "CPP"
  },
  {
    "name": "T _BIO_asn1_set_suffix",
    "type": "CPP"
  },
  {
    "name": "T _BIO_asn1_get_suffix",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_write",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_read",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_puts",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_gets",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_new",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_free",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_setup_ex",
    "type": "CPP"
  },
  {
    "name": "t _asn1_bio_flush_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_NDEF",
    "type": "CPP"
  },
  {
    "name": "t _ndef_prefix",
    "type": "CPP"
  },
  {
    "name": "t _ndef_prefix_free",
    "type": "CPP"
  },
  {
    "name": "t _ndef_suffix",
    "type": "CPP"
  },
  {
    "name": "t _ndef_suffix_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_KeyParams",
    "type": "CPP"
  },
  {
    "name": "T _d2i_KeyParams_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_PrivateKey_legacy",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "t _d2i_PrivateKey_decoder",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_AutoPrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "T _d2i_AutoPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PublicKey",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_set_octetstring",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_get_octetstring",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_set_int_octetstring",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_get_int_octetstring",
    "type": "CPP"
  },
  {
    "name": "t _asn1_type_get_int_oct",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_type_set_octetstring_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_type_get_octetstring_int",
    "type": "CPP"
  },
  {
    "name": "T _i2a_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _a2i_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _i2a_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "T _a2i_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "T _i2a_ASN1_STRING",
    "type": "CPP"
  },
  {
    "name": "T _a2i_ASN1_STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_KeyParams",
    "type": "CPP"
  },
  {
    "name": "t _i2d_provided",
    "type": "CPP"
  },
  {
    "name": "T _i2d_KeyParams_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PublicKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NETSCAPE_ENCRYPTED_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NETSCAPE_ENCRYPTED_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_ENCRYPTED_PKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_ENCRYPTED_PKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NETSCAPE_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NETSCAPE_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_PKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_PKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_CERT_SEQUENCE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_CERT_SEQUENCE_new",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_CERT_SEQUENCE_free",
    "type": "CPP"
  },
  {
    "name": "t _nsseq_cb",
    "type": "CPP"
  },
  {
    "name": "T _PBEPARAM_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PBEPARAM",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PBEPARAM",
    "type": "CPP"
  },
  {
    "name": "T _PBEPARAM_new",
    "type": "CPP"
  },
  {
    "name": "T _PBEPARAM_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe_set0_algor_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe_set0_algor",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe_set_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe_set",
    "type": "CPP"
  },
  {
    "name": "T _PBE2PARAM_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PBE2PARAM",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PBE2PARAM",
    "type": "CPP"
  },
  {
    "name": "T _PBE2PARAM_new",
    "type": "CPP"
  },
  {
    "name": "T _PBE2PARAM_free",
    "type": "CPP"
  },
  {
    "name": "T _PBKDF2PARAM_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PBKDF2PARAM",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PBKDF2PARAM",
    "type": "CPP"
  },
  {
    "name": "T _PBKDF2PARAM_new",
    "type": "CPP"
  },
  {
    "name": "T _PBKDF2PARAM_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe2_set_iv_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbkdf2_set_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe2_set_iv",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe2_set",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbkdf2_set",
    "type": "CPP"
  },
  {
    "name": "T _SCRYPT_PARAMS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SCRYPT_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SCRYPT_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _SCRYPT_PARAMS_new",
    "type": "CPP"
  },
  {
    "name": "T _SCRYPT_PARAMS_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_pbe2_set_scrypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_scrypt_keyivgen_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_scrypt_keyivgen",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_PRIV_KEY_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_PRIV_KEY_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_PRIV_KEY_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_set0",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_get0",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_get0_attrs",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_pkey_add1_attr",
    "type": "CPP"
  },
  {
    "name": "t _pkey_cb",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_name_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_set_asc",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_num_asc",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_buf_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_bn_print",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_print",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_tag2bit",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_ex_d2i",
    "type": "CPP"
  },
  {
    "name": "t _asn1_item_ex_d2i_intern",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i_ex",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_d2i",
    "type": "CPP"
  },
  {
    "name": "t _asn1_item_embed_d2i",
    "type": "CPP"
  },
  {
    "name": "t _asn1_template_ex_d2i",
    "type": "CPP"
  },
  {
    "name": "t _asn1_d2i_ex_primitive",
    "type": "CPP"
  },
  {
    "name": "t _asn1_check_tlen",
    "type": "CPP"
  },
  {
    "name": "t _asn1_template_noexp_d2i",
    "type": "CPP"
  },
  {
    "name": "t _asn1_collect",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_ndef_i2d",
    "type": "CPP"
  },
  {
    "name": "t _asn1_item_flags_i2d",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_i2d",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_ex_i2d",
    "type": "CPP"
  },
  {
    "name": "t _asn1_template_ex_i2d",
    "type": "CPP"
  },
  {
    "name": "t _asn1_i2d_ex_primitive",
    "type": "CPP"
  },
  {
    "name": "t _der_cmp",
    "type": "CPP"
  },
  {
    "name": "t _asn1_ex_i2c",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_item_embed_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_ex_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_template_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_primitive_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_ex_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _asn1_item_embed_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_item_ex_new_intern",
    "type": "CPP"
  },
  {
    "name": "t _asn1_template_new",
    "type": "CPP"
  },
  {
    "name": "t _asn1_primitive_new",
    "type": "CPP"
  },
  {
    "name": "t _asn1_primitive_clear",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_get_nm_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_set_nm_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_get_cert_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_set_cert_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_get_oid_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_set_oid_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_get_str_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PCTX_set_str_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_item_print",
    "type": "CPP"
  },
  {
    "name": "t _asn1_item_print_ctx",
    "type": "CPP"
  },
  {
    "name": "t _asn1_print_fsname",
    "type": "CPP"
  },
  {
    "name": "t _asn1_template_print_ctx",
    "type": "CPP"
  },
  {
    "name": "t _asn1_print_integer",
    "type": "CPP"
  },
  {
    "name": "t _asn1_print_oid",
    "type": "CPP"
  },
  {
    "name": "t _asn1_print_obstring",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_get_item",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_get_template",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_set_app_data",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SCTX_get_app_data",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_INTEGER_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ENUMERATED_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BIT_STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTF8STRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_UTF8STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_UTF8STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTF8STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTF8STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLESTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_PRINTABLESTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_PRINTABLESTRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLESTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLESTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_T61STRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_T61STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_T61STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_T61STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_T61STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_IA5STRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_IA5STRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_IA5STRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_IA5STRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_IA5STRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALSTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_GENERALSTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_GENERALSTRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALSTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALSTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_UTCTIME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_UTCTIME",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UTCTIME_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_GENERALIZEDTIME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_GENERALIZEDTIME",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_GENERALIZEDTIME_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_VISIBLESTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_VISIBLESTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_VISIBLESTRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_VISIBLESTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_VISIBLESTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UNIVERSALSTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_UNIVERSALSTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_UNIVERSALSTRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UNIVERSALSTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_UNIVERSALSTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BMPSTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_BMPSTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_BMPSTRING",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BMPSTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BMPSTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_NULL_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_NULL",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_NULL",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_NULL_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_NULL_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OBJECT_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_ANY_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SEQUENCE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_TYPE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_TYPE",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TYPE_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_PRINTABLE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_PRINTABLE",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLE_new",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_PRINTABLE_free",
    "type": "CPP"
  },
  {
    "name": "T _DISPLAYTEXT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DISPLAYTEXT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DISPLAYTEXT",
    "type": "CPP"
  },
  {
    "name": "T _DISPLAYTEXT_new",
    "type": "CPP"
  },
  {
    "name": "T _DISPLAYTEXT_free",
    "type": "CPP"
  },
  {
    "name": "T _DIRECTORYSTRING_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DIRECTORYSTRING",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DIRECTORYSTRING",
    "type": "CPP"
  },
  {
    "name": "T _DIRECTORYSTRING_new",
    "type": "CPP"
  },
  {
    "name": "T _DIRECTORYSTRING_free",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_BOOLEAN_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_TBOOLEAN_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_FBOOLEAN_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_OCTET_STRING_NDEF_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SEQUENCE_ANY_it",
    "type": "CPP"
  },
  {
    "name": "T _ASN1_SET_ANY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_SEQUENCE_ANY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_SEQUENCE_ANY",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASN1_SET_ANY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASN1_SET_ANY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_get_choice_selector",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_get_choice_selector_const",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_set_choice_selector",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_do_lock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_enc_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_enc_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_enc_save",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_enc_restore",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_get_field_ptr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_get_const_field_ptr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_asn1_do_adb",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_it",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGORS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_ALGOR",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_ALGOR",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_ALGORS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_ALGORS",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_set0",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_set_md",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_ALGOR_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_algor_new_from_md",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_algor_get_md",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_algor_mgf1_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_algor_md_to_mgf1",
    "type": "CPP"
  },
  {
    "name": "T _BIGNUM_it",
    "type": "CPP"
  },
  {
    "name": "T _CBIGNUM_it",
    "type": "CPP"
  },
  {
    "name": "t _bn_new",
    "type": "CPP"
  },
  {
    "name": "t _bn_free",
    "type": "CPP"
  },
  {
    "name": "t _bn_c2i",
    "type": "CPP"
  },
  {
    "name": "t _bn_i2c",
    "type": "CPP"
  },
  {
    "name": "t _bn_print",
    "type": "CPP"
  },
  {
    "name": "t _bn_secure_new",
    "type": "CPP"
  },
  {
    "name": "t _bn_secure_c2i",
    "type": "CPP"
  },
  {
    "name": "T _X509_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _INT32_it",
    "type": "CPP"
  },
  {
    "name": "T _UINT32_it",
    "type": "CPP"
  },
  {
    "name": "T _INT64_it",
    "type": "CPP"
  },
  {
    "name": "T _UINT64_it",
    "type": "CPP"
  },
  {
    "name": "T _ZINT32_it",
    "type": "CPP"
  },
  {
    "name": "T _ZUINT32_it",
    "type": "CPP"
  },
  {
    "name": "T _ZINT64_it",
    "type": "CPP"
  },
  {
    "name": "T _ZUINT64_it",
    "type": "CPP"
  },
  {
    "name": "t _uint32_new",
    "type": "CPP"
  },
  {
    "name": "t _uint32_free",
    "type": "CPP"
  },
  {
    "name": "t _uint32_clear",
    "type": "CPP"
  },
  {
    "name": "t _uint32_c2i",
    "type": "CPP"
  },
  {
    "name": "t _uint32_i2c",
    "type": "CPP"
  },
  {
    "name": "t _uint32_print",
    "type": "CPP"
  },
  {
    "name": "t _uint64_new",
    "type": "CPP"
  },
  {
    "name": "t _uint64_free",
    "type": "CPP"
  },
  {
    "name": "t _uint64_clear",
    "type": "CPP"
  },
  {
    "name": "t _uint64_c2i",
    "type": "CPP"
  },
  {
    "name": "t _uint64_i2c",
    "type": "CPP"
  },
  {
    "name": "t _uint64_print",
    "type": "CPP"
  },
  {
    "name": "T _LONG_it",
    "type": "CPP"
  },
  {
    "name": "T _ZLONG_it",
    "type": "CPP"
  },
  {
    "name": "t _long_new",
    "type": "CPP"
  },
  {
    "name": "t _long_free",
    "type": "CPP"
  },
  {
    "name": "t _long_c2i",
    "type": "CPP"
  },
  {
    "name": "t _long_i2c",
    "type": "CPP"
  },
  {
    "name": "t _long_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_PKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_PKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_SIG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_SIG",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_getm",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKAC_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NETSCAPE_SPKAC",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NETSCAPE_SPKAC",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKAC_new",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKAC_free",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NETSCAPE_SPKI",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NETSCAPE_SPKI",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_new",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_VAL_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_VAL",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_VAL",
    "type": "CPP"
  },
  {
    "name": "T _X509_VAL_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_VAL_free",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_is_capable",
    "type": "CPP"
  },
  {
    "name": "T _async_local_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _async_fibre_makecontext",
    "type": "CPP"
  },
  {
    "name": "T _async_fibre_free",
    "type": "CPP"
  },
  {
    "name": "T _async_get_ctx",
    "type": "CPP"
  },
  {
    "name": "T _async_start_func",
    "type": "CPP"
  },
  {
    "name": "t _async_fibre_swapcontext",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_start_job",
    "type": "CPP"
  },
  {
    "name": "t _async_release_job",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_pause_job",
    "type": "CPP"
  },
  {
    "name": "T _async_init",
    "type": "CPP"
  },
  {
    "name": "T _async_deinit",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_init_thread",
    "type": "CPP"
  },
  {
    "name": "t _async_delete_thread_state",
    "type": "CPP"
  },
  {
    "name": "t _async_job_new",
    "type": "CPP"
  },
  {
    "name": "t _async_job_free",
    "type": "CPP"
  },
  {
    "name": "t _async_empty_pool",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_cleanup_thread",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_get_current_job",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_get_wait_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_block_pause",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_unblock_pause",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_ASYNC_strings",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_set_wait_fd",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_get_all_fds",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_get_changed_fds",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_clear_fd",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_set_callback",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_get_callback",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_set_status",
    "type": "CPP"
  },
  {
    "name": "T _ASYNC_WAIT_CTX_get_status",
    "type": "CPP"
  },
  {
    "name": "T _async_wait_ctx_reset_counts",
    "type": "CPP"
  },
  {
    "name": "T _BF_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_options",
    "type": "CPP"
  },
  {
    "name": "T _BF_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _BF_set_key",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_buffer",
    "type": "CPP"
  },
  {
    "name": "t _buffer_write",
    "type": "CPP"
  },
  {
    "name": "t _buffer_read",
    "type": "CPP"
  },
  {
    "name": "t _buffer_puts",
    "type": "CPP"
  },
  {
    "name": "t _buffer_gets",
    "type": "CPP"
  },
  {
    "name": "t _buffer_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _buffer_new",
    "type": "CPP"
  },
  {
    "name": "t _buffer_free",
    "type": "CPP"
  },
  {
    "name": "t _buffer_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_linebuffer",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_write",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_read",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_puts",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_gets",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_new",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_free",
    "type": "CPP"
  },
  {
    "name": "t _linebuffer_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_nbio_test",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_write",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_read",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_puts",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_gets",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_new",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_free",
    "type": "CPP"
  },
  {
    "name": "t _nbiof_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_null",
    "type": "CPP"
  },
  {
    "name": "t _nullf_write",
    "type": "CPP"
  },
  {
    "name": "t _nullf_read",
    "type": "CPP"
  },
  {
    "name": "t _nullf_puts",
    "type": "CPP"
  },
  {
    "name": "t _nullf_gets",
    "type": "CPP"
  },
  {
    "name": "t _nullf_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _nullf_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_prefix",
    "type": "CPP"
  },
  {
    "name": "t _prefix_write",
    "type": "CPP"
  },
  {
    "name": "t _prefix_read",
    "type": "CPP"
  },
  {
    "name": "t _prefix_puts",
    "type": "CPP"
  },
  {
    "name": "t _prefix_gets",
    "type": "CPP"
  },
  {
    "name": "t _prefix_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _prefix_create",
    "type": "CPP"
  },
  {
    "name": "t _prefix_destroy",
    "type": "CPP"
  },
  {
    "name": "t _prefix_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_readbuffer",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_write",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_read",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_puts",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_gets",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_new",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_free",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _readbuffer_resize",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_clear",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_make",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_rawmake",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_family",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_rawaddress",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_rawport",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_hostname_string",
    "type": "CPP"
  },
  {
    "name": "t _addr_strings",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_service_string",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_path_string",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_sockaddr",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_sockaddr_noconst",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDR_sockaddr_size",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_next",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_family",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_socktype",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_protocol",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_sockaddr_size",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_sockaddr",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_address",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ADDRINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_parse_hostserv",
    "type": "CPP"
  },
  {
    "name": "T _BIO_lookup",
    "type": "CPP"
  },
  {
    "name": "T _BIO_lookup_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_debug_callback_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_debug_callback",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump_cb",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump_indent_cb",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump_fp",
    "type": "CPP"
  },
  {
    "name": "t _write_fp",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump_indent_fp",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump",
    "type": "CPP"
  },
  {
    "name": "t _write_bio",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dump_indent",
    "type": "CPP"
  },
  {
    "name": "T _BIO_hex_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_BIO_strings",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_free",
    "type": "CPP"
  },
  {
    "name": "t _bio_call_callback",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_data",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_data",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_init",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_init",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _BIO_vfree",
    "type": "CPP"
  },
  {
    "name": "T _BIO_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _BIO_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _BIO_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_callback",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_callback",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_callback_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_callback_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _BIO_method_name",
    "type": "CPP"
  },
  {
    "name": "T _BIO_method_type",
    "type": "CPP"
  },
  {
    "name": "T _BIO_read",
    "type": "CPP"
  },
  {
    "name": "t _bio_read_intern",
    "type": "CPP"
  },
  {
    "name": "T _BIO_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_write",
    "type": "CPP"
  },
  {
    "name": "t _bio_write_intern",
    "type": "CPP"
  },
  {
    "name": "T _BIO_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_puts",
    "type": "CPP"
  },
  {
    "name": "T _BIO_gets",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_line",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_indent",
    "type": "CPP"
  },
  {
    "name": "T _BIO_int_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ptr_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl_pending",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl_wpending",
    "type": "CPP"
  },
  {
    "name": "T _BIO_push",
    "type": "CPP"
  },
  {
    "name": "T _BIO_pop",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_retry_BIO",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_retry_reason",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_retry_reason",
    "type": "CPP"
  },
  {
    "name": "T _BIO_find_type",
    "type": "CPP"
  },
  {
    "name": "T _BIO_next",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_next",
    "type": "CPP"
  },
  {
    "name": "T _BIO_free_all",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dup_chain",
    "type": "CPP"
  },
  {
    "name": "T _BIO_copy_next_retry",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _BIO_number_read",
    "type": "CPP"
  },
  {
    "name": "T _BIO_number_written",
    "type": "CPP"
  },
  {
    "name": "T _bio_free_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _bio_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _BIO_wait",
    "type": "CPP"
  },
  {
    "name": "t _bio_wait",
    "type": "CPP"
  },
  {
    "name": "T _BIO_do_connect_retry",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_new_index",
    "type": "CPP"
  },
  {
    "name": "t _do_bio_type_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_write",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _bwrite_conv",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_write",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_read",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _bread_conv",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_read",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_puts",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_puts",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_gets",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_gets",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_create",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_create",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_destroy",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_get_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_meth_set_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_printf",
    "type": "CPP"
  },
  {
    "name": "T _BIO_vprintf",
    "type": "CPP"
  },
  {
    "name": "t __dopr",
    "type": "CPP"
  },
  {
    "name": "T _BIO_snprintf",
    "type": "CPP"
  },
  {
    "name": "T _BIO_vsnprintf",
    "type": "CPP"
  },
  {
    "name": "t _doapr_outch",
    "type": "CPP"
  },
  {
    "name": "t _fmtint",
    "type": "CPP"
  },
  {
    "name": "t _fmtfp",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_host_ip",
    "type": "CPP"
  },
  {
    "name": "T _BIO_sock_init",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_port",
    "type": "CPP"
  },
  {
    "name": "T _BIO_sock_error",
    "type": "CPP"
  },
  {
    "name": "T _BIO_gethostbyname",
    "type": "CPP"
  },
  {
    "name": "T _bio_sock_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "T _BIO_socket_ioctl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_get_accept_socket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_accept",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_tcp_ndelay",
    "type": "CPP"
  },
  {
    "name": "T _BIO_socket_nbio",
    "type": "CPP"
  },
  {
    "name": "T _BIO_sock_info",
    "type": "CPP"
  },
  {
    "name": "T _BIO_socket_wait",
    "type": "CPP"
  },
  {
    "name": "T _BIO_socket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_connect",
    "type": "CPP"
  },
  {
    "name": "T _BIO_bind",
    "type": "CPP"
  },
  {
    "name": "T _BIO_listen",
    "type": "CPP"
  },
  {
    "name": "T _BIO_accept_ex",
    "type": "CPP"
  },
  {
    "name": "T _BIO_closesocket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_accept",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_accept",
    "type": "CPP"
  },
  {
    "name": "t _acpt_write",
    "type": "CPP"
  },
  {
    "name": "t _acpt_read",
    "type": "CPP"
  },
  {
    "name": "t _acpt_puts",
    "type": "CPP"
  },
  {
    "name": "t _acpt_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _acpt_new",
    "type": "CPP"
  },
  {
    "name": "t _acpt_free",
    "type": "CPP"
  },
  {
    "name": "t _acpt_state",
    "type": "CPP"
  },
  {
    "name": "t _acpt_close_socket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_bio",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_bio_pair",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl_get_write_guarantee",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl_get_read_request",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ctrl_reset_read_request",
    "type": "CPP"
  },
  {
    "name": "T _BIO_nread0",
    "type": "CPP"
  },
  {
    "name": "T _BIO_nread",
    "type": "CPP"
  },
  {
    "name": "T _BIO_nwrite0",
    "type": "CPP"
  },
  {
    "name": "T _BIO_nwrite",
    "type": "CPP"
  },
  {
    "name": "t _bio_write",
    "type": "CPP"
  },
  {
    "name": "t _bio_read",
    "type": "CPP"
  },
  {
    "name": "t _bio_puts",
    "type": "CPP"
  },
  {
    "name": "t _bio_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _bio_new",
    "type": "CPP"
  },
  {
    "name": "t _bio_free",
    "type": "CPP"
  },
  {
    "name": "t _bio_nread0",
    "type": "CPP"
  },
  {
    "name": "t _bio_nwrite0",
    "type": "CPP"
  },
  {
    "name": "T _BIO_CONNECT_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_CONNECT_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_connect",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_connect",
    "type": "CPP"
  },
  {
    "name": "t _conn_write",
    "type": "CPP"
  },
  {
    "name": "t _conn_read",
    "type": "CPP"
  },
  {
    "name": "t _conn_puts",
    "type": "CPP"
  },
  {
    "name": "t _conn_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _conn_new",
    "type": "CPP"
  },
  {
    "name": "t _conn_free",
    "type": "CPP"
  },
  {
    "name": "t _conn_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _conn_state",
    "type": "CPP"
  },
  {
    "name": "t _conn_close_socket",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bio_core_globals_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bio_core_globals_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_core",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_from_core_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bio_init_core",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_write_ex",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_read_ex",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_puts",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_gets",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_new",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_datagram",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_dgram",
    "type": "CPP"
  },
  {
    "name": "T _BIO_dgram_non_fatal_error",
    "type": "CPP"
  },
  {
    "name": "t _dgram_write",
    "type": "CPP"
  },
  {
    "name": "t _dgram_read",
    "type": "CPP"
  },
  {
    "name": "t _dgram_puts",
    "type": "CPP"
  },
  {
    "name": "t _dgram_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _dgram_new",
    "type": "CPP"
  },
  {
    "name": "t _dgram_free",
    "type": "CPP"
  },
  {
    "name": "t _BIO_dgram_should_retry",
    "type": "CPP"
  },
  {
    "name": "t _dgram_get_mtu_overhead",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_fd",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_fd",
    "type": "CPP"
  },
  {
    "name": "T _BIO_fd_should_retry",
    "type": "CPP"
  },
  {
    "name": "T _BIO_fd_non_fatal_error",
    "type": "CPP"
  },
  {
    "name": "t _fd_write",
    "type": "CPP"
  },
  {
    "name": "t _fd_read",
    "type": "CPP"
  },
  {
    "name": "t _fd_puts",
    "type": "CPP"
  },
  {
    "name": "t _fd_gets",
    "type": "CPP"
  },
  {
    "name": "t _fd_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _fd_new",
    "type": "CPP"
  },
  {
    "name": "t _fd_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_file",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_file",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_fp",
    "type": "CPP"
  },
  {
    "name": "t _file_write",
    "type": "CPP"
  },
  {
    "name": "t _file_read",
    "type": "CPP"
  },
  {
    "name": "t _file_puts",
    "type": "CPP"
  },
  {
    "name": "t _file_gets",
    "type": "CPP"
  },
  {
    "name": "t _file_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _file_new",
    "type": "CPP"
  },
  {
    "name": "t _file_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_log",
    "type": "CPP"
  },
  {
    "name": "t _slg_write",
    "type": "CPP"
  },
  {
    "name": "t _slg_puts",
    "type": "CPP"
  },
  {
    "name": "t _slg_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _slg_new",
    "type": "CPP"
  },
  {
    "name": "t _slg_free",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_mem",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_secmem",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_mem_buf",
    "type": "CPP"
  },
  {
    "name": "t _mem_write",
    "type": "CPP"
  },
  {
    "name": "t _mem_read",
    "type": "CPP"
  },
  {
    "name": "t _mem_puts",
    "type": "CPP"
  },
  {
    "name": "t _mem_gets",
    "type": "CPP"
  },
  {
    "name": "t _mem_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _mem_new",
    "type": "CPP"
  },
  {
    "name": "t _mem_free",
    "type": "CPP"
  },
  {
    "name": "t _mem_buf_sync",
    "type": "CPP"
  },
  {
    "name": "t _mem_buf_free",
    "type": "CPP"
  },
  {
    "name": "t _mem_init",
    "type": "CPP"
  },
  {
    "name": "t _secmem_new",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_null",
    "type": "CPP"
  },
  {
    "name": "t _null_write",
    "type": "CPP"
  },
  {
    "name": "t _null_read",
    "type": "CPP"
  },
  {
    "name": "t _null_puts",
    "type": "CPP"
  },
  {
    "name": "t _null_gets",
    "type": "CPP"
  },
  {
    "name": "t _null_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_s_socket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_socket",
    "type": "CPP"
  },
  {
    "name": "T _BIO_sock_should_retry",
    "type": "CPP"
  },
  {
    "name": "T _BIO_sock_non_fatal_error",
    "type": "CPP"
  },
  {
    "name": "t _sock_write",
    "type": "CPP"
  },
  {
    "name": "t _sock_read",
    "type": "CPP"
  },
  {
    "name": "t _sock_puts",
    "type": "CPP"
  },
  {
    "name": "t _sock_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _sock_new",
    "type": "CPP"
  },
  {
    "name": "t _sock_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_new_from_bio",
    "type": "CPP"
  },
  {
    "name": "t _core_bio_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_new_file",
    "type": "CPP"
  },
  {
    "name": "t _core_bio_new_from_new_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_new_mem_buf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_gets",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_puts",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ossl_core_bio_vprintf",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_mont",
    "type": "CPP"
  },
  {
    "name": "t bn_mul8x_mont_neon",
    "type": "CPP"
  },
  {
    "name": "t __bn_sqr8x_mont",
    "type": "CPP"
  },
  {
    "name": "t __bn_mul4x_mont",
    "type": "CPP"
  },
  {
    "name": "T _BN_add",
    "type": "CPP"
  },
  {
    "name": "T _BN_uadd",
    "type": "CPP"
  },
  {
    "name": "T _BN_usub",
    "type": "CPP"
  },
  {
    "name": "T _BN_sub",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_add_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_div_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_add_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_sub_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_comba8",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_comba4",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_comba8",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_comba4",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_set_current_thread",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_update",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_create_param",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_convert",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_convert_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_invert",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_invert_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_is_current_thread",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_lock",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_unlock",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _BN_BLINDING_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc2409_prime_768",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc2409_prime_1024",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_1536",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_2048",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_3072",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_4096",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_6144",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_rfc3526_prime_8192",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2hex",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2dec",
    "type": "CPP"
  },
  {
    "name": "T _BN_hex2bn",
    "type": "CPP"
  },
  {
    "name": "T _BN_dec2bn",
    "type": "CPP"
  },
  {
    "name": "T _BN_asc2bn",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_secure_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_secure_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_start",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_end",
    "type": "CPP"
  },
  {
    "name": "T _BN_CTX_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_get_libctx",
    "type": "CPP"
  },
  {
    "name": "T _BN_generate_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_prime_fasttest",
    "type": "CPP"
  },
  {
    "name": "T _BN_div",
    "type": "CPP"
  },
  {
    "name": "T _bn_div_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_BN_strings",
    "type": "CPP"
  },
  {
    "name": "T _BN_exp",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_mont_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_mont",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_recp",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_mont_consttime",
    "type": "CPP"
  },
  {
    "name": "t _bn_get_bits",
    "type": "CPP"
  },
  {
    "name": "t _MOD_EXP_CTIME_COPY_FROM_PREBUF",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_simple",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp_mont_consttime_x2",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_exp2_mont",
    "type": "CPP"
  },
  {
    "name": "T _int_bn_mod_inverse",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_inverse",
    "type": "CPP"
  },
  {
    "name": "T _BN_are_coprime",
    "type": "CPP"
  },
  {
    "name": "T _BN_gcd",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_add",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_poly2arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_mul_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_sqr_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_mul",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_sqr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_inv",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_inv_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_arr2poly",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_div",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_div_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_exp_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_sqrt_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_sqrt",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_solve_quad_arr",
    "type": "CPP"
  },
  {
    "name": "T _BN_GF2m_mod_solve_quad",
    "type": "CPP"
  },
  {
    "name": "t _bn_GF2m_mul_1x1",
    "type": "CPP"
  },
  {
    "name": "T _bn_compute_wNAF",
    "type": "CPP"
  },
  {
    "name": "T _bn_get_top",
    "type": "CPP"
  },
  {
    "name": "T _bn_get_dmax",
    "type": "CPP"
  },
  {
    "name": "T _bn_set_all_zero",
    "type": "CPP"
  },
  {
    "name": "T _bn_copy_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_get_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_set_static_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_set_words",
    "type": "CPP"
  },
  {
    "name": "T _BN_kronecker",
    "type": "CPP"
  },
  {
    "name": "T _BN_set_params",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_params",
    "type": "CPP"
  },
  {
    "name": "T _BN_value_one",
    "type": "CPP"
  },
  {
    "name": "T _BN_num_bits_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_num_bits",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_zero",
    "type": "CPP"
  },
  {
    "name": "T _BN_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_flags",
    "type": "CPP"
  },
  {
    "name": "t _bn_free_d",
    "type": "CPP"
  },
  {
    "name": "T _BN_free",
    "type": "CPP"
  },
  {
    "name": "T _bn_init",
    "type": "CPP"
  },
  {
    "name": "T _BN_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_secure_new",
    "type": "CPP"
  },
  {
    "name": "T _bn_expand2",
    "type": "CPP"
  },
  {
    "name": "T _BN_dup",
    "type": "CPP"
  },
  {
    "name": "T _BN_copy",
    "type": "CPP"
  },
  {
    "name": "T _bn_wexpand",
    "type": "CPP"
  },
  {
    "name": "T _BN_swap",
    "type": "CPP"
  },
  {
    "name": "T _BN_clear",
    "type": "CPP"
  },
  {
    "name": "T _BN_get_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_set_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_bin2bn",
    "type": "CPP"
  },
  {
    "name": "T _bn_correct_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2binpad",
    "type": "CPP"
  },
  {
    "name": "t _bn2binpad",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2bin",
    "type": "CPP"
  },
  {
    "name": "T _BN_lebin2bn",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2lebinpad",
    "type": "CPP"
  },
  {
    "name": "T _BN_native2bn",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2nativepad",
    "type": "CPP"
  },
  {
    "name": "T _BN_ucmp",
    "type": "CPP"
  },
  {
    "name": "T _BN_cmp",
    "type": "CPP"
  },
  {
    "name": "T _BN_set_bit",
    "type": "CPP"
  },
  {
    "name": "T _BN_clear_bit",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_bit_set",
    "type": "CPP"
  },
  {
    "name": "T _BN_mask_bits",
    "type": "CPP"
  },
  {
    "name": "T _BN_set_negative",
    "type": "CPP"
  },
  {
    "name": "T _bn_cmp_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_cmp_part_words",
    "type": "CPP"
  },
  {
    "name": "T _BN_consttime_swap",
    "type": "CPP"
  },
  {
    "name": "T _BN_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _BN_zero_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_abs_is_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_one",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_odd",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_negative",
    "type": "CPP"
  },
  {
    "name": "T _BN_to_montgomery",
    "type": "CPP"
  },
  {
    "name": "T _BN_with_flags",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_set_old",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_set",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_get_arg",
    "type": "CPP"
  },
  {
    "name": "T _bn_correct_top_consttime",
    "type": "CPP"
  },
  {
    "name": "T _BN_nnmod",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_add",
    "type": "CPP"
  },
  {
    "name": "T _bn_mod_add_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_add_quick",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_sub",
    "type": "CPP"
  },
  {
    "name": "T _bn_mod_sub_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_sub_quick",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_mul",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_sqr",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_lshift1",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_lshift1_quick",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_lshift",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_lshift_quick",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_mul_montgomery",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_mont_fixed_top",
    "type": "CPP"
  },
  {
    "name": "t _bn_from_montgomery_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_from_montgomery",
    "type": "CPP"
  },
  {
    "name": "T _bn_from_mont_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _bn_to_mont_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_set",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _BN_MONT_CTX_set_locked",
    "type": "CPP"
  },
  {
    "name": "T _BN_bn2mpi",
    "type": "CPP"
  },
  {
    "name": "T _BN_mpi2bn",
    "type": "CPP"
  },
  {
    "name": "T _bn_sub_part_words",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_recursive",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_normal",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_part_recursive",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_low_recursive",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_low_normal",
    "type": "CPP"
  },
  {
    "name": "T _BN_mul",
    "type": "CPP"
  },
  {
    "name": "T _bn_mul_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_get0_nist_prime_192",
    "type": "CPP"
  },
  {
    "name": "T _BN_get0_nist_prime_224",
    "type": "CPP"
  },
  {
    "name": "T _BN_get0_nist_prime_256",
    "type": "CPP"
  },
  {
    "name": "T _BN_get0_nist_prime_384",
    "type": "CPP"
  },
  {
    "name": "T _BN_get0_nist_prime_521",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_192",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_224",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_256",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_384",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_521",
    "type": "CPP"
  },
  {
    "name": "T _BN_nist_mod_func",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_get0_small_factors",
    "type": "CPP"
  },
  {
    "name": "T _BN_GENCB_call",
    "type": "CPP"
  },
  {
    "name": "T _BN_generate_prime_ex2",
    "type": "CPP"
  },
  {
    "name": "t _bn_is_prime_int",
    "type": "CPP"
  },
  {
    "name": "T _BN_generate_prime_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_prime_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_check_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_is_prime_fasttest_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_check_generated_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_check_prime",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_miller_rabin_is_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _BN_print",
    "type": "CPP"
  },
  {
    "name": "T _BN_options",
    "type": "CPP"
  },
  {
    "name": "T _BN_rand_ex",
    "type": "CPP"
  },
  {
    "name": "t _bnrand",
    "type": "CPP"
  },
  {
    "name": "T _BN_rand",
    "type": "CPP"
  },
  {
    "name": "T _BN_bntest_rand",
    "type": "CPP"
  },
  {
    "name": "T _BN_priv_rand_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_priv_rand",
    "type": "CPP"
  },
  {
    "name": "T _BN_rand_range_ex",
    "type": "CPP"
  },
  {
    "name": "t _bnrand_range",
    "type": "CPP"
  },
  {
    "name": "T _BN_rand_range",
    "type": "CPP"
  },
  {
    "name": "T _BN_priv_rand_range_ex",
    "type": "CPP"
  },
  {
    "name": "T _BN_priv_rand_range",
    "type": "CPP"
  },
  {
    "name": "T _BN_pseudo_rand",
    "type": "CPP"
  },
  {
    "name": "T _BN_pseudo_rand_range",
    "type": "CPP"
  },
  {
    "name": "T _BN_generate_dsa_nonce",
    "type": "CPP"
  },
  {
    "name": "T _BN_RECP_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _BN_RECP_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _BN_RECP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _BN_RECP_CTX_set",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_mul_reciprocal",
    "type": "CPP"
  },
  {
    "name": "T _BN_div_recp",
    "type": "CPP"
  },
  {
    "name": "T _BN_reciprocal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_rsa_fips186_4_gen_prob_primes",
    "type": "CPP"
  },
  {
    "name": "t _bn_rsa_fips186_4_find_aux_prob_prime",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bn_rsa_fips186_4_derive_prime",
    "type": "CPP"
  },
  {
    "name": "T _BN_lshift1",
    "type": "CPP"
  },
  {
    "name": "T _BN_rshift1",
    "type": "CPP"
  },
  {
    "name": "T _BN_lshift",
    "type": "CPP"
  },
  {
    "name": "T _bn_lshift_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_rshift",
    "type": "CPP"
  },
  {
    "name": "T _bn_rshift_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _BN_sqr",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_fixed_top",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_normal",
    "type": "CPP"
  },
  {
    "name": "T _bn_sqr_recursive",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_sqrt",
    "type": "CPP"
  },
  {
    "name": "T _BN_mod_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_div_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_add_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_sub_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_mul_word",
    "type": "CPP"
  },
  {
    "name": "T _BN_X931_derive_prime_ex",
    "type": "CPP"
  },
  {
    "name": "t _bn_x931_derive_pi",
    "type": "CPP"
  },
  {
    "name": "T _BN_X931_generate_Xpq",
    "type": "CPP"
  },
  {
    "name": "T _BN_X931_generate_prime_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_BUF_strings",
    "type": "CPP"
  },
  {
    "name": "T _BUF_MEM_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _BUF_MEM_new",
    "type": "CPP"
  },
  {
    "name": "T _BUF_MEM_free",
    "type": "CPP"
  },
  {
    "name": "T _BUF_MEM_grow",
    "type": "CPP"
  },
  {
    "name": "t _sec_alloc_realloc",
    "type": "CPP"
  },
  {
    "name": "T _BUF_MEM_grow_clean",
    "type": "CPP"
  },
  {
    "name": "T _BUF_reverse",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_Ekeygen",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_EncryptBlock_Rounds",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_EncryptBlock",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_DecryptBlock_Rounds",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_DecryptBlock",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_cfb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_cfb1_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_cfb8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_ctr128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_set_key",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _Camellia_ofb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CAST_set_key",
    "type": "CPP"
  },
  {
    "name": "T _ChaCha20_ctr32_sve",
    "type": "CPP"
  },
  {
    "name": "T _ChaCha20_ctr32_dflt",
    "type": "CPP"
  },
  {
    "name": "T _ChaCha20_ctr32",
    "type": "CPP"
  },
  {
    "name": "t _ChaCha20_neon",
    "type": "CPP"
  },
  {
    "name": "t ChaCha20_512_neon",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_CTX_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_CTX_get0_cipher_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_Init",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_Update",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_Final",
    "type": "CPP"
  },
  {
    "name": "T _CMAC_resume",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVANNCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_REVANNCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_REVANNCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVANNCONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVANNCONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CHALLENGE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CHALLENGE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CHALLENGE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CHALLENGE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CHALLENGE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POPODECKEYCHALLCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POPODECKEYRESPCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CAKEYUPDANNCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CAKEYUPDANNCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CAKEYUPDANNCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CAKEYUPDANNCONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CAKEYUPDANNCONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ERRORMSGCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_ERRORMSGCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_ERRORMSGCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ERRORMSGCONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ERRORMSGCONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_ITAV",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_ITAV",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_create",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_set0",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_get0_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_get0_value",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_ITAV_push0_stack_item",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_asn1_get_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTORENCCERT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CERTORENCCERT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CERTORENCCERT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTORENCCERT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTORENCCERT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTIFIEDKEYPAIR_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CERTIFIEDKEYPAIR",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CERTIFIEDKEYPAIR",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTIFIEDKEYPAIR_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTIFIEDKEYPAIR_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVDETAILS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_REVDETAILS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_REVDETAILS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVDETAILS_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVDETAILS_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVREQCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVREPCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_REVREPCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_REVREPCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVREPCONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_REVREPCONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_KEYRECREPCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_KEYRECREPCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_KEYRECREPCONTENT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_KEYRECREPCONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_KEYRECREPCONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKISTATUS_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKISI_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_PKISI",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_PKISI",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKISI_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKISI_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKISI_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTSTATUS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CERTSTATUS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CERTSTATUS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTSTATUS_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTSTATUS_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTCONFIRMCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTRESPONSE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CERTRESPONSE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CERTRESPONSE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTRESPONSE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTRESPONSE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREQ_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_POLLREQ",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_POLLREQ",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREQ_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREQ_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREQCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREP_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_POLLREP",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_POLLREP",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREP_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREP_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_POLLREPCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTREPMESSAGE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_CERTREPMESSAGE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_CERTREPMESSAGE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTREPMESSAGE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CERTREPMESSAGE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_GENMSGCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_GENREPCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CRLANNCONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIBODY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_PKIBODY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_PKIBODY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIBODY_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIBODY_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIHEADER_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_PKIHEADER",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_PKIHEADER",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIHEADER_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PKIHEADER_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PROTECTEDPART_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_PROTECTEDPART",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_PROTECTEDPART",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PROTECTEDPART_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_PROTECTEDPART_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSGS_it",
    "type": "CPP"
  },
  {
    "name": "t _OSSL_CMP_ITAV_adb",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cmp_msg_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_exchange_certConf",
    "type": "CPP"
  },
  {
    "name": "t _send_receive_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_exchange_error",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_certConf_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_try_certreq",
    "type": "CPP"
  },
  {
    "name": "t _initial_certreq",
    "type": "CPP"
  },
  {
    "name": "t _poll_for_response",
    "type": "CPP"
  },
  {
    "name": "t _cert_response",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_exec_certreq",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_exec_RR_ses",
    "type": "CPP"
  },
  {
    "name": "t _save_statusInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_exec_GENM_ses",
    "type": "CPP"
  },
  {
    "name": "t _unprotected_exception",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get0_trustedStore",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set0_trustedStore",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get0_untrusted",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_untrusted",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_new",
    "type": "CPP"
  },
  {
    "name": "t _cmp_ctx_set_md",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_reinit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_print_log",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set0_statusString",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set0_newCert",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set1_newChain",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set1_caPubs",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set1_extraCertsIn",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set0_validatedSrvCert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_transactionID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_senderNonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set1_recipNonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set_status",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_status",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get0_statusString",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_certConf_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_certConf_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_certConf_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_log_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_print_errors",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_referenceValue",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_secretValue",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get1_newChain",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get1_extraCertsIn",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_extraCertsOut",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_push0_policy",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_push0_geninfo_ITAV",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_reset_geninfo_ITAVs",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_push0_genm_ITAV",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get1_caPubs",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_srvCert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_recipient",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_expected_sender",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_issuer",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_subjectName",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set0_reqExtensions",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_reqExtensions_have_SAN",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_push1_subjectAltName",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_cert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_build_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_oldCert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_p10CSR",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get0_newCert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_pkey",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set0_newPkey",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get0_newPkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_get0_newPubkey",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_proxy",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_server",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_no_proxy",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_http_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_http_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_http_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_transfer_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_transfer_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_transfer_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_serverPort",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set1_serverPath",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_ctx_set_failInfoCode",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_failInfoCode",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_set_option",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_get_option",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CMP_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set_pvno",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_get_pvno",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_get_protection_nid",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_HDR_get0_transactionID",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_get0_senderNonce",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_HDR_get0_recipNonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_general_name_is_NULL_DN",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set1_sender",
    "type": "CPP"
  },
  {
    "name": "t _set1_general_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set1_recipient",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_update_messageTime",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set1_senderKID",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_push0_freeText",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_push1_freeText",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_generalInfo_push0_item",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_generalInfo_push1_items",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set_implicitConfirm",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_has_implicitConfirm",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_set_transactionID",
    "type": "CPP"
  },
  {
    "name": "t _set_random",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_hdr_init",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_http_perform",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_get0_header",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_bodytype_to_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_set_bodytype",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_get_bodytype",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_create",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_setup_CRM",
    "type": "CPP"
  },
  {
    "name": "t _add1_extension",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certreq_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certrep_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_rr_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_rp_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pkiconf_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_gen_push0_ITAV",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_gen_push1_ITAVs",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_genm_new",
    "type": "CPP"
  },
  {
    "name": "t _gen_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_genp_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_error_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certstatus_set0_certHash",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certConf_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pollReq_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pollRep_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_revrepcontent_get_pkisi",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_revrepcontent_get_CertId",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pollrepcontent_get0_pollrep",
    "type": "CPP"
  },
  {
    "name": "t _suitable_rid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certrepmessage_get0_certresponse",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_certresponse_get1_cert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_update_transactionID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_update_recipNonce",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_read",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_MSG_bio",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_MSG_write",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_MSG_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CMP_MSG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CMP_MSG",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_calc_protection",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_add_extraCerts",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_protect",
    "type": "CPP"
  },
  {
    "name": "t _set_sig_algor",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_get0_cmp_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_get0_custom_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_set_send_unprotected_errors",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_set_accept_unprotected",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_set_accept_raverified",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_CTX_set_grant_implicit_confirm",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_SRV_process_request",
    "type": "CPP"
  },
  {
    "name": "t _unprotected_exception",
    "type": "CPP"
  },
  {
    "name": "t _process_cert_request",
    "type": "CPP"
  },
  {
    "name": "t _process_rr",
    "type": "CPP"
  },
  {
    "name": "t _process_genm",
    "type": "CPP"
  },
  {
    "name": "t _process_error",
    "type": "CPP"
  },
  {
    "name": "t _process_certConf",
    "type": "CPP"
  },
  {
    "name": "t _process_pollReq",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_server_perform",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pkisi_get_status",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_PKIStatus_to_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pkisi_get0_statusString",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pkisi_get_pkifailureinfo",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_pkisi_check_pkifailureinfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_snprint_PKIStatusInfo",
    "type": "CPP"
  },
  {
    "name": "t _snprint_PKIStatusInfo_parts",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_CTX_snprint_PKIStatus",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_STATUSINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_log_open",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_log_close",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_log_parse_metadata",
    "type": "CPP"
  },
  {
    "name": "t _parse_level",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_print_to_bio",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_print_errors_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_X509_STORE_add1_certs",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_sk_ASN1_UTF8STRING_push_str",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_asn1_octet_string_set1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_asn1_octet_string_set1_bytes",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_validate_cert_path",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CMP_validate_msg",
    "type": "CPP"
  },
  {
    "name": "t _verify_PBMAC",
    "type": "CPP"
  },
  {
    "name": "t _check_msg_find_cert",
    "type": "CPP"
  },
  {
    "name": "t _verify_signature",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_msg_check_update",
    "type": "CPP"
  },
  {
    "name": "t _check_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cmp_verify_popo",
    "type": "CPP"
  },
  {
    "name": "t _no_log_cb",
    "type": "CPP"
  },
  {
    "name": "t _check_msg_given_cert",
    "type": "CPP"
  },
  {
    "name": "t _check_msg_all_certs",
    "type": "CPP"
  },
  {
    "name": "t _cert_acceptable",
    "type": "CPP"
  },
  {
    "name": "t _check_cert_path",
    "type": "CPP"
  },
  {
    "name": "t _check_cert_path_3gpp",
    "type": "CPP"
  },
  {
    "name": "t _already_checked",
    "type": "CPP"
  },
  {
    "name": "t _check_msg_with_certs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_IssuerAndSerialNumber_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_CertificateChoices_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RevocationInfoChoice_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_KeyTransRecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_OtherKeyAttribute_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientKeyIdentifier_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientEncryptedKey_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_OriginatorPublicKey_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_KeyAgreeRecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_KEKRecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_PasswordRecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EnvelopedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_DigestedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EncryptedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_AuthEnvelopedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_CompressedData_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ContentInfo_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_Attributes_Sign_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_Attributes_Verify_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_Receipt_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SharedInfo_encode",
    "type": "CPP"
  },
  {
    "name": "t _CMS_OtherCertificateFormat_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_SignerIdentifier_it",
    "type": "CPP"
  },
  {
    "name": "t _cms_si_cb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_OtherRevocationInfoFormat_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_EncapsulatedContentInfo_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_KeyAgreeRecipientIdentifier_it",
    "type": "CPP"
  },
  {
    "name": "t _cms_rek_cb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_OriginatorIdentifierOrKey_it",
    "type": "CPP"
  },
  {
    "name": "t _cms_kari_cb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_KEKIdentifier_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_OtherRecipientInfo_it",
    "type": "CPP"
  },
  {
    "name": "t _cms_ri_cb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_OriginatorInfo_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_EncryptedContentInfo_it",
    "type": "CPP"
  },
  {
    "name": "t _CMS_ContentInfo_adb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_AuthenticatedData_it",
    "type": "CPP"
  },
  {
    "name": "t _cms_cb",
    "type": "CPP"
  },
  {
    "name": "t _CMS_ReceiptsFrom_it",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_get_attr_count",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_get_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_get_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_delete_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_add1_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_signed_get0_data_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_get_attr_count",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_get_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_get_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_delete_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_add1_attr",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_unsigned_get0_data_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_si_check_attributes",
    "type": "CPP"
  },
  {
    "name": "t _cms_check_attribute",
    "type": "CPP"
  },
  {
    "name": "t _cms_attrib_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_DigestedData_create",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_DigestedData_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_DigestedData_do_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_dh_envelope",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_ecdh_envelope",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_EncryptedContent_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_EncryptedContent_init",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EncryptedData_set1_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_EncryptedData_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_env_enc_content_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_get0_env_enc_content",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_get0_enveloped",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_get0_auth_enveloped",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_env_asn1_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _cms_get_enveloped_type",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_RecipientInfos",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_RecipientInfos_set_cmsctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_type",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_get0_pkey_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EnvelopedData_create_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EnvelopedData_create",
    "type": "CPP"
  },
  {
    "name": "T _CMS_AuthEnvelopedData_create_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_AuthEnvelopedData_create",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_recipient",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_pkey_get_ri_type",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_recipient_cert",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_ktri_get0_algs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_ktri_get0_signer_id",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_ktri_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_set0_pkey",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kekri_id_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_recipient_key",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kekri_get0_id",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_set0_key",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_EnvelopedData_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_AuthEnvelopedData_init_bio",
    "type": "CPP"
  },
  {
    "name": "t _cms_env_encrypt_content_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_EnvelopedData_final",
    "type": "CPP"
  },
  {
    "name": "t _cms_env_set_version",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_AuthEnvelopedData_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_pkey_is_ri_type_supported",
    "type": "CPP"
  },
  {
    "name": "t _cms_get_key_wrap_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CMS_strings",
    "type": "CPP"
  },
  {
    "name": "T _d2i_CMS_ReceiptRequest",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CMS_ReceiptRequest",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_new",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_free",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get1_ReceiptRequest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_check_signing_certs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_create0_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_create0",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_ReceiptRequest",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ReceiptRequest_get0_values",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_msgSigDigest_add1",
    "type": "CPP"
  },
  {
    "name": "t _cms_msgSigDigest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_Receipt_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_encode_Receipt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_stream",
    "type": "CPP"
  },
  {
    "name": "T _d2i_CMS_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CMS_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_CMS",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_CMS",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_CMS",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_CMS",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_CMS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CMS_bio_stream",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_CMS_stream",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_write_CMS",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_CMS_ex",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_CMS",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_get0_alg",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_get0_reks",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_get0_orig_id",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_orig_id_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientEncryptedKey_get0_id",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientEncryptedKey_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_set0_pkey_and_peer",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_set0_pkey",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_get0_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_kari_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _cms_kek_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_RecipientInfo_kari_init",
    "type": "CPP"
  },
  {
    "name": "t _cms_kari_set_originator_private_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_RecipientInfo_kari_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ContentInfo_print_ctx",
    "type": "CPP"
  },
  {
    "name": "T _d2i_CMS_ContentInfo",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_get0_cmsctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_ctx_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_ctx_get0_propq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_resolve_libctx",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CMS_ContentInfo",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ContentInfo_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ContentInfo_free",
    "type": "CPP"
  },
  {
    "name": "T _CMS_ContentInfo_new",
    "type": "CPP"
  },
  {
    "name": "t _cms_get0_certificate_choices",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_type",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_Data_create",
    "type": "CPP"
  },
  {
    "name": "T _CMS_set_detached",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_content_bio",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_content",
    "type": "CPP"
  },
  {
    "name": "T _CMS_dataInit",
    "type": "CPP"
  },
  {
    "name": "T _CMS_dataFinal",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_eContentType",
    "type": "CPP"
  },
  {
    "name": "t _cms_get0_econtent_type",
    "type": "CPP"
  },
  {
    "name": "T _CMS_set1_eContentType",
    "type": "CPP"
  },
  {
    "name": "T _CMS_is_detached",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_DigestAlgorithm_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_DigestAlgorithm_find_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_CertificateChoices",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_cert",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_cert",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_RevocationInfoChoice",
    "type": "CPP"
  },
  {
    "name": "t _cms_get0_revocation_choices",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_crl",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_crl",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get1_certs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get1_crls",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_ias_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_keyid_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_set1_ias",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_set1_keyid",
    "type": "CPP"
  },
  {
    "name": "T _CMS_RecipientInfo_set0_password",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add0_recipient_password",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_RecipientInfo_pwri_crypt",
    "type": "CPP"
  },
  {
    "name": "t _kek_wrap_key",
    "type": "CPP"
  },
  {
    "name": "t _kek_unwrap_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_rsa_envelope",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_rsa_sign",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignedData_init",
    "type": "CPP"
  },
  {
    "name": "t _cms_signed_data_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_set1_SignerIdentifier",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_SignerIdentifier_get0_signer_id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_SignerIdentifier_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add1_signer",
    "type": "CPP"
  },
  {
    "name": "t _cms_sd_asn1_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add_standard_smimecap",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add_smimecap",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cms_add1_signing_cert",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cms_add1_signing_cert_v2",
    "type": "CPP"
  },
  {
    "name": "t _cms_copy_messageDigest",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_sign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_SignerInfos_set_cmsctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_SignerInfos",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_get0_pkey_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_get0_md_ctx",
    "type": "CPP"
  },
  {
    "name": "t _cms_get0_signed",
    "type": "CPP"
  },
  {
    "name": "T _CMS_get0_signers",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_set1_signer_cert",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_get0_signer_id",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_cert_cmp",
    "type": "CPP"
  },
  {
    "name": "T _CMS_set1_signers_certs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_get0_algs",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_SignedData_final",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cms_SignedData_init_bio",
    "type": "CPP"
  },
  {
    "name": "T _CMS_SignerInfo_verify_content",
    "type": "CPP"
  },
  {
    "name": "T _CMS_add_simple_smimecap",
    "type": "CPP"
  },
  {
    "name": "t _cms_add_cipher_smcap",
    "type": "CPP"
  },
  {
    "name": "t _cms_add_digest_smcap",
    "type": "CPP"
  },
  {
    "name": "t _cms_generic_sign",
    "type": "CPP"
  },
  {
    "name": "T _CMS_data",
    "type": "CPP"
  },
  {
    "name": "t _cms_copy_content",
    "type": "CPP"
  },
  {
    "name": "T _CMS_data_create_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_final",
    "type": "CPP"
  },
  {
    "name": "T _CMS_data_create",
    "type": "CPP"
  },
  {
    "name": "T _CMS_digest_verify",
    "type": "CPP"
  },
  {
    "name": "t _check_content",
    "type": "CPP"
  },
  {
    "name": "t _do_free_upto",
    "type": "CPP"
  },
  {
    "name": "T _CMS_digest_create_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_digest_create",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EncryptedData_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EncryptedData_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_EncryptedData_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_verify",
    "type": "CPP"
  },
  {
    "name": "t _cms_get_text_bio",
    "type": "CPP"
  },
  {
    "name": "T _CMS_verify_receipt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_sign_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_sign",
    "type": "CPP"
  },
  {
    "name": "T _CMS_sign_receipt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _CMS_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_decrypt_set1_pkey",
    "type": "CPP"
  },
  {
    "name": "T _CMS_decrypt_set1_pkey_and_peer",
    "type": "CPP"
  },
  {
    "name": "T _CMS_decrypt_set1_key",
    "type": "CPP"
  },
  {
    "name": "T _CMS_decrypt_set1_password",
    "type": "CPP"
  },
  {
    "name": "T _CMS_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CMS_uncompress",
    "type": "CPP"
  },
  {
    "name": "T _CMS_compress",
    "type": "CPP"
  },
  {
    "name": "T _COMP_zlib",
    "type": "CPP"
  },
  {
    "name": "T _ossl_comp_zlib_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_COMP_strings",
    "type": "CPP"
  },
  {
    "name": "T _COMP_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _COMP_CTX_get_method",
    "type": "CPP"
  },
  {
    "name": "T _COMP_get_type",
    "type": "CPP"
  },
  {
    "name": "T _COMP_get_name",
    "type": "CPP"
  },
  {
    "name": "T _COMP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _COMP_compress_block",
    "type": "CPP"
  },
  {
    "name": "T _COMP_expand_block",
    "type": "CPP"
  },
  {
    "name": "T _COMP_CTX_get_type",
    "type": "CPP"
  },
  {
    "name": "T __CONF_get_section",
    "type": "CPP"
  },
  {
    "name": "T __CONF_get_section_values",
    "type": "CPP"
  },
  {
    "name": "T __CONF_add_string",
    "type": "CPP"
  },
  {
    "name": "T __CONF_get_string",
    "type": "CPP"
  },
  {
    "name": "T __CONF_new_data",
    "type": "CPP"
  },
  {
    "name": "t _conf_value_hash",
    "type": "CPP"
  },
  {
    "name": "t _conf_value_cmp",
    "type": "CPP"
  },
  {
    "name": "T __CONF_free_data",
    "type": "CPP"
  },
  {
    "name": "t _value_free_hash",
    "type": "CPP"
  },
  {
    "name": "t _value_free_stack_doall",
    "type": "CPP"
  },
  {
    "name": "T __CONF_new_section",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_default",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_WIN32",
    "type": "CPP"
  },
  {
    "name": "t _def_create",
    "type": "CPP"
  },
  {
    "name": "t _def_init_default",
    "type": "CPP"
  },
  {
    "name": "t _def_destroy",
    "type": "CPP"
  },
  {
    "name": "t _def_destroy_data",
    "type": "CPP"
  },
  {
    "name": "t _def_load_bio",
    "type": "CPP"
  },
  {
    "name": "t _def_dump",
    "type": "CPP"
  },
  {
    "name": "t _def_is_number",
    "type": "CPP"
  },
  {
    "name": "t _def_to_int",
    "type": "CPP"
  },
  {
    "name": "t _def_load",
    "type": "CPP"
  },
  {
    "name": "t _get_next_file",
    "type": "CPP"
  },
  {
    "name": "t _eat_alpha_numeric",
    "type": "CPP"
  },
  {
    "name": "t _str_copy",
    "type": "CPP"
  },
  {
    "name": "t _trim_ws",
    "type": "CPP"
  },
  {
    "name": "t _parsebool",
    "type": "CPP"
  },
  {
    "name": "t _process_include",
    "type": "CPP"
  },
  {
    "name": "t _dump_value_doall_arg",
    "type": "CPP"
  },
  {
    "name": "t _def_init_WIN32",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CONF_strings",
    "type": "CPP"
  },
  {
    "name": "T _CONF_set_nconf",
    "type": "CPP"
  },
  {
    "name": "T _CONF_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _CONF_load",
    "type": "CPP"
  },
  {
    "name": "T _CONF_load_bio",
    "type": "CPP"
  },
  {
    "name": "T _CONF_load_fp",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_load_bio",
    "type": "CPP"
  },
  {
    "name": "T _CONF_get_section",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_get_section",
    "type": "CPP"
  },
  {
    "name": "T _CONF_get_string",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_get_string",
    "type": "CPP"
  },
  {
    "name": "T _CONF_get_number",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_get_number_e",
    "type": "CPP"
  },
  {
    "name": "T _CONF_free",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_free_data",
    "type": "CPP"
  },
  {
    "name": "T _CONF_dump_fp",
    "type": "CPP"
  },
  {
    "name": "T _CONF_dump_bio",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_dump_bio",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_new",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_free",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_get_section_names",
    "type": "CPP"
  },
  {
    "name": "t _section_name_cmp",
    "type": "CPP"
  },
  {
    "name": "t _collect_section_name",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_load",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_load_fp",
    "type": "CPP"
  },
  {
    "name": "t _default_is_number",
    "type": "CPP"
  },
  {
    "name": "t _default_to_int",
    "type": "CPP"
  },
  {
    "name": "T __CONF_get_number",
    "type": "CPP"
  },
  {
    "name": "T _NCONF_dump_fp",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_INIT_new",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_INIT_set_config_filename",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_INIT_set_config_file_flags",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_INIT_set_config_appname",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_INIT_free",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_load_builtin_modules",
    "type": "CPP"
  },
  {
    "name": "T _CONF_modules_load",
    "type": "CPP"
  },
  {
    "name": "T _CONF_modules_load_file_ex",
    "type": "CPP"
  },
  {
    "name": "T _CONF_get1_default_config_file",
    "type": "CPP"
  },
  {
    "name": "T _CONF_modules_load_file",
    "type": "CPP"
  },
  {
    "name": "T _CONF_modules_unload",
    "type": "CPP"
  },
  {
    "name": "t _conf_modules_finish_int",
    "type": "CPP"
  },
  {
    "name": "T _CONF_modules_finish",
    "type": "CPP"
  },
  {
    "name": "T _CONF_module_add",
    "type": "CPP"
  },
  {
    "name": "t _module_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_config_modules_free",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_get_name",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_get_value",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_get_usr_data",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_set_usr_data",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_get_module",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _CONF_imodule_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _CONF_module_get_usr_data",
    "type": "CPP"
  },
  {
    "name": "T _CONF_module_set_usr_data",
    "type": "CPP"
  },
  {
    "name": "T _CONF_parse_list",
    "type": "CPP"
  },
  {
    "name": "t _do_load_builtin_modules_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _do_init_module_list_lock_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_config",
    "type": "CPP"
  },
  {
    "name": "T _ossl_config_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_no_config_int",
    "type": "CPP"
  },
  {
    "name": "T _conf_ssl_get",
    "type": "CPP"
  },
  {
    "name": "T _conf_ssl_name_find",
    "type": "CPP"
  },
  {
    "name": "T _conf_ssl_get_cmd",
    "type": "CPP"
  },
  {
    "name": "T _ossl_config_add_ssl_module",
    "type": "CPP"
  },
  {
    "name": "t _ssl_module_init",
    "type": "CPP"
  },
  {
    "name": "t _ssl_module_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PRIVATEKEYINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_PRIVATEKEYINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_PRIVATEKEYINFO",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PRIVATEKEYINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PRIVATEKEYINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_ENCKEYWITHID_IDENTIFIER",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_IDENTIFIER_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_ENCKEYWITHID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_ENCKEYWITHID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCKEYWITHID_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_CERTID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_CERTID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCRYPTEDVALUE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_ENCRYPTEDVALUE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_ENCRYPTEDVALUE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCRYPTEDVALUE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCRYPTEDVALUE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_SINGLEPUBINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_SINGLEPUBINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_SINGLEPUBINFO",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_SINGLEPUBINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_SINGLEPUBINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKIPUBLICATIONINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_PKIPUBLICATIONINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_PKIPUBLICATIONINFO",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKIPUBLICATIONINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKIPUBLICATIONINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKIPUBLICATIONINFO_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKMACVALUE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_PKMACVALUE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_PKMACVALUE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKMACVALUE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PKMACVALUE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOPRIVKEY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_POPOPRIVKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_POPOPRIVKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOPRIVKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOPRIVKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PBMPARAMETER_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_PBMPARAMETER",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_PBMPARAMETER",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PBMPARAMETER_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_PBMPARAMETER_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_AUTHINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_POPOSIGNINGKEYINPUT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_POPOSIGNINGKEYINPUT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEYINPUT_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_POPOSIGNINGKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_POPOSIGNINGKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPOSIGNINGKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_POPO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_POPO",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_POPO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_ATTRIBUTETYPEANDVALUE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_ATTRIBUTETYPEANDVALUE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_OPTIONALVALIDITY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_OPTIONALVALIDITY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_OPTIONALVALIDITY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_OPTIONALVALIDITY_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_OPTIONALVALIDITY_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_CERTTEMPLATE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_CERTTEMPLATE",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTREQUEST_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_CERTREQUEST",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_CERTREQUEST",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTREQUEST_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTREQUEST_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTREQUEST_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_MSG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_MSG",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_dup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSGS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OSSL_CRMF_MSGS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OSSL_CRMF_MSGS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSGS_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSGS_free",
    "type": "CPP"
  },
  {
    "name": "t _OSSL_CRMF_ATTRIBUTETYPEANDVALUE_adb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CRMF_strings",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regCtrl_regToken",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regCtrl_regToken",
    "type": "CPP"
  },
  {
    "name": "t _OSSL_CRMF_MSG_push0_regCtrl",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regCtrl_authenticator",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regCtrl_authenticator",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set0_SinglePubInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_PKIPublicationInfo_push0_SinglePubInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set_PKIPublicationInfo_action",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regCtrl_pkiPublicationInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regCtrl_pkiPublicationInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regCtrl_oldCertID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regCtrl_oldCertID",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_gen",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regCtrl_protocolEncrKey",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regCtrl_protocolEncrKey",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regInfo_utf8Pairs",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regInfo_utf8Pairs",
    "type": "CPP"
  },
  {
    "name": "t _OSSL_CRMF_MSG_push0_regInfo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_regInfo_certReq",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set1_regInfo_certReq",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get0_tmpl",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set0_validity",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set_certReqId",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_get_certReqId",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_set0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_push0_extension",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSG_create_popo",
    "type": "CPP"
  },
  {
    "name": "t _create_popo_signature",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_MSGS_verify_popo",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_get0_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_get0_subject",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_get0_issuer",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_get0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_get0_issuer",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTID_get0_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_CERTTEMPLATE_fill",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_ENCRYPTEDVALUE_get1_encCert",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_pbmp_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_CRMF_pbm_new",
    "type": "CPP"
  },
  {
    "name": "T _SCT_new_from_base64",
    "type": "CPP"
  },
  {
    "name": "t _ct_base64_decode",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_new_from_base64_ex",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_new_from_base64",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CT_strings",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_free",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_new",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_free",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_load_default_file",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_load_file",
    "type": "CPP"
  },
  {
    "name": "t _ctlog_store_load_log",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_new",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_get0_log_id",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_get0_public_key",
    "type": "CPP"
  },
  {
    "name": "T _CTLOG_STORE_get0_log_by_id",
    "type": "CPP"
  },
  {
    "name": "T _o2i_SCT_signature",
    "type": "CPP"
  },
  {
    "name": "T _o2i_SCT",
    "type": "CPP"
  },
  {
    "name": "T _i2o_SCT_signature",
    "type": "CPP"
  },
  {
    "name": "T _i2o_SCT",
    "type": "CPP"
  },
  {
    "name": "T _o2i_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "T _i2o_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_set1_cert",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_set1_issuer",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_set_shared_CTLOG_STORE",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_set_time",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_get0_cert",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_get0_issuer",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_get0_log_store",
    "type": "CPP"
  },
  {
    "name": "T _CT_POLICY_EVAL_CTX_get_time",
    "type": "CPP"
  },
  {
    "name": "T _SCT_validation_status_string",
    "type": "CPP"
  },
  {
    "name": "T _SCT_print",
    "type": "CPP"
  },
  {
    "name": "T _SCT_LIST_print",
    "type": "CPP"
  },
  {
    "name": "T _SCT_new",
    "type": "CPP"
  },
  {
    "name": "T _SCT_free",
    "type": "CPP"
  },
  {
    "name": "T _SCT_LIST_free",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set_version",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set_log_entry_type",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set0_log_id",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set1_log_id",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set_signature_nid",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set1_extensions",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set0_signature",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set1_signature",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_version",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_log_entry_type",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get0_log_id",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_signature_nid",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _SCT_is_complete",
    "type": "CPP"
  },
  {
    "name": "T _SCT_signature_is_complete",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_source",
    "type": "CPP"
  },
  {
    "name": "T _SCT_set_source",
    "type": "CPP"
  },
  {
    "name": "T _SCT_get_validation_status",
    "type": "CPP"
  },
  {
    "name": "T _SCT_validate",
    "type": "CPP"
  },
  {
    "name": "T _SCT_LIST_validate",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_set1_cert",
    "type": "CPP"
  },
  {
    "name": "t _ct_x509_get_ext",
    "type": "CPP"
  },
  {
    "name": "t _ct_x509_cert_fixup",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_set1_issuer",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_set1_issuer_pubkey",
    "type": "CPP"
  },
  {
    "name": "t _ct_public_key_hash",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_set1_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_set_time",
    "type": "CPP"
  },
  {
    "name": "T _SCT_CTX_verify",
    "type": "CPP"
  },
  {
    "name": "t _sct_ctx_update",
    "type": "CPP"
  },
  {
    "name": "t _x509_ext_d2i_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "t _i2r_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "t _i2s_poison",
    "type": "CPP"
  },
  {
    "name": "t _s2i_poison",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_ext_d2i_SCT_LIST",
    "type": "CPP"
  },
  {
    "name": "t _set_sct_list_source",
    "type": "CPP"
  },
  {
    "name": "T _DES_cbc_cksum",
    "type": "CPP"
  },
  {
    "name": "T _DES_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ede3_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ede3_cfb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_cfb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_encrypt1",
    "type": "CPP"
  },
  {
    "name": "T _DES_encrypt2",
    "type": "CPP"
  },
  {
    "name": "T _DES_encrypt3",
    "type": "CPP"
  },
  {
    "name": "T _DES_decrypt3",
    "type": "CPP"
  },
  {
    "name": "T _DES_ncbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ede3_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ecb3_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_options",
    "type": "CPP"
  },
  {
    "name": "T _DES_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_crypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_fcrypt",
    "type": "CPP"
  },
  {
    "name": "T _fcrypt_body",
    "type": "CPP"
  },
  {
    "name": "T _DES_ede3_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_ofb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_pcbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DES_quad_cksum",
    "type": "CPP"
  },
  {
    "name": "T _DES_random_key",
    "type": "CPP"
  },
  {
    "name": "T _DES_set_odd_parity",
    "type": "CPP"
  },
  {
    "name": "T _DES_check_key_parity",
    "type": "CPP"
  },
  {
    "name": "T _DES_is_weak_key",
    "type": "CPP"
  },
  {
    "name": "T _DES_set_key",
    "type": "CPP"
  },
  {
    "name": "T _DES_set_key_unchecked",
    "type": "CPP"
  },
  {
    "name": "T _DES_set_key_checked",
    "type": "CPP"
  },
  {
    "name": "T _DES_key_sched",
    "type": "CPP"
  },
  {
    "name": "T _DES_string_to_key",
    "type": "CPP"
  },
  {
    "name": "T _DES_string_to_2keys",
    "type": "CPP"
  },
  {
    "name": "T _DES_xcbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _DHparams_dup",
    "type": "CPP"
  },
  {
    "name": "t _int_dh_param_copy",
    "type": "CPP"
  },
  {
    "name": "T _DHparams_print",
    "type": "CPP"
  },
  {
    "name": "t _do_dh_print",
    "type": "CPP"
  },
  {
    "name": "t _dh_pub_decode",
    "type": "CPP"
  },
  {
    "name": "t _dh_pub_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_pub_cmp",
    "type": "CPP"
  },
  {
    "name": "t _dh_public_print",
    "type": "CPP"
  },
  {
    "name": "t _dh_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _dh_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_private_print",
    "type": "CPP"
  },
  {
    "name": "t _int_dh_size",
    "type": "CPP"
  },
  {
    "name": "t _dh_bits",
    "type": "CPP"
  },
  {
    "name": "t _dh_security_bits",
    "type": "CPP"
  },
  {
    "name": "t _dh_param_decode",
    "type": "CPP"
  },
  {
    "name": "t _dh_param_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_missing_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dh_copy_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dh_cmp_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dh_param_print",
    "type": "CPP"
  },
  {
    "name": "t _int_dh_free",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_public_check",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_param_check",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_dirty_cnt",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_copy",
    "type": "CPP"
  },
  {
    "name": "t _dhx_pkey_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _dhx_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _d2i_dhp",
    "type": "CPP"
  },
  {
    "name": "t _i2d_dhp",
    "type": "CPP"
  },
  {
    "name": "t _dh_pkey_import_from_type",
    "type": "CPP"
  },
  {
    "name": "T _DHparams_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _d2i_int_dhx",
    "type": "CPP"
  },
  {
    "name": "T _i2d_int_dhx",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DHxparams",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DHxparams",
    "type": "CPP"
  },
  {
    "name": "t _dh_cb",
    "type": "CPP"
  },
  {
    "name": "t _DHvparams_it",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_params_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_key_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_params_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_key_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_is_foreign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_key_from_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _DH_check_params_ex",
    "type": "CPP"
  },
  {
    "name": "T _DH_check_params",
    "type": "CPP"
  },
  {
    "name": "T _DH_check_ex",
    "type": "CPP"
  },
  {
    "name": "T _DH_check",
    "type": "CPP"
  },
  {
    "name": "T _DH_check_pub_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _DH_check_pub_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_check_pub_key_partial",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_check_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_check_pairwise",
    "type": "CPP"
  },
  {
    "name": "T _DH_generate_parameters",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_DH_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_generate_ffc_parameters",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_get_named_group_uid_from_size",
    "type": "CPP"
  },
  {
    "name": "T _DH_generate_parameters_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_new_by_nid_ex",
    "type": "CPP"
  },
  {
    "name": "T _DH_new_by_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_cache_named_group",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_is_named_safe_prime_group",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_kdf_X9_42_asn1",
    "type": "CPP"
  },
  {
    "name": "T _DH_KDF_X9_42",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_compute_key_padded",
    "type": "CPP"
  },
  {
    "name": "T _DH_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_default_method",
    "type": "CPP"
  },
  {
    "name": "T _DH_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _DH_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_generate_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_buf2key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_key2buf",
    "type": "CPP"
  },
  {
    "name": "t _generate_key",
    "type": "CPP"
  },
  {
    "name": "t _dh_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "t _dh_init",
    "type": "CPP"
  },
  {
    "name": "t _dh_finish",
    "type": "CPP"
  },
  {
    "name": "T _DH_set_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_get_method",
    "type": "CPP"
  },
  {
    "name": "T _DH_new",
    "type": "CPP"
  },
  {
    "name": "t _dh_new_intern",
    "type": "CPP"
  },
  {
    "name": "T _DH_new_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _DH_free",
    "type": "CPP"
  },
  {
    "name": "T _DH_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _DH_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _DH_bits",
    "type": "CPP"
  },
  {
    "name": "T _DH_size",
    "type": "CPP"
  },
  {
    "name": "T _DH_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _DH_set0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_length",
    "type": "CPP"
  },
  {
    "name": "T _DH_set_length",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_set0_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_p",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_q",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_g",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_pub_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _DH_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _DH_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _DH_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_get0_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_get0_nid",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_dup",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set1_name",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_get_generate_params",
    "type": "CPP"
  },
  {
    "name": "T _DH_meth_set_generate_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_pkey_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dhx_pkey_method",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_init",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_copy",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_paramgen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_keygen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_derive",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dh_ctrl_str",
    "type": "CPP"
  },
  {
    "name": "T _DHparams_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_1024_160",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_2048_224",
    "type": "CPP"
  },
  {
    "name": "T _DH_get_2048_256",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pub_decode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pub_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pub_cmp",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pub_print",
    "type": "CPP"
  },
  {
    "name": "t _dsa_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_priv_print",
    "type": "CPP"
  },
  {
    "name": "t _int_dsa_size",
    "type": "CPP"
  },
  {
    "name": "t _dsa_bits",
    "type": "CPP"
  },
  {
    "name": "t _dsa_security_bits",
    "type": "CPP"
  },
  {
    "name": "t _dsa_param_decode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_param_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_missing_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dsa_copy_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dsa_cmp_parameters",
    "type": "CPP"
  },
  {
    "name": "t _dsa_param_print",
    "type": "CPP"
  },
  {
    "name": "t _dsa_sig_print",
    "type": "CPP"
  },
  {
    "name": "t _int_dsa_free",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pkey_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _old_dsa_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _old_dsa_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pkey_dirty_cnt",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pkey_copy",
    "type": "CPP"
  },
  {
    "name": "t _do_dsa_print",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _DSAparams_dup",
    "type": "CPP"
  },
  {
    "name": "t _dsa_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_key_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_is_foreign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_key_from_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_pub_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_pub_key_partial",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_pairwise",
    "type": "CPP"
  },
  {
    "name": "T _DSA_generate_parameters",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_DSA_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_generate_ffc_parameters",
    "type": "CPP"
  },
  {
    "name": "T _DSA_generate_parameters_ex",
    "type": "CPP"
  },
  {
    "name": "T _DSA_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_generate_public_key",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _DSA_dup_DH",
    "type": "CPP"
  },
  {
    "name": "T _DSA_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSA_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set_method",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get_method",
    "type": "CPP"
  },
  {
    "name": "T _DSA_new_method",
    "type": "CPP"
  },
  {
    "name": "t _dsa_new_intern",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_new",
    "type": "CPP"
  },
  {
    "name": "T _DSA_new",
    "type": "CPP"
  },
  {
    "name": "T _DSA_free",
    "type": "CPP"
  },
  {
    "name": "T _DSA_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_p",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_q",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_g",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_pub_key",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_priv_key",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get0_key",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set0_key",
    "type": "CPP"
  },
  {
    "name": "T _DSA_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _DSA_bits",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_get0_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_ffc_params_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_dup",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set1_name",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_sign",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_sign",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_paramgen",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_paramgen",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_get_keygen",
    "type": "CPP"
  },
  {
    "name": "T _DSA_meth_set_keygen",
    "type": "CPP"
  },
  {
    "name": "T _DSA_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _DSA_get_default_method",
    "type": "CPP"
  },
  {
    "name": "T _DSA_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_do_sign_int",
    "type": "CPP"
  },
  {
    "name": "t _dsa_sign_setup",
    "type": "CPP"
  },
  {
    "name": "t _dsa_do_sign",
    "type": "CPP"
  },
  {
    "name": "t _dsa_sign_setup_no_digest",
    "type": "CPP"
  },
  {
    "name": "t _dsa_do_verify",
    "type": "CPP"
  },
  {
    "name": "t _dsa_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_finish",
    "type": "CPP"
  },
  {
    "name": "t _dsa_mod_inverse_fermat",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_pkey_method",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_init",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_copy",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_paramgen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_keygen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_sign",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_verify",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _pkey_dsa_ctrl_str",
    "type": "CPP"
  },
  {
    "name": "T _DSA_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _DSA_print",
    "type": "CPP"
  },
  {
    "name": "T _DSAparams_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _DSAparams_print",
    "type": "CPP"
  },
  {
    "name": "T _DSA_do_sign",
    "type": "CPP"
  },
  {
    "name": "T _DSA_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _DSA_SIG_new",
    "type": "CPP"
  },
  {
    "name": "T _DSA_SIG_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSA_SIG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSA_SIG",
    "type": "CPP"
  },
  {
    "name": "T _DSA_size",
    "type": "CPP"
  },
  {
    "name": "T _DSA_SIG_get0",
    "type": "CPP"
  },
  {
    "name": "T _DSA_SIG_set0",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_sign_int",
    "type": "CPP"
  },
  {
    "name": "T _DSA_sign",
    "type": "CPP"
  },
  {
    "name": "T _DSA_verify",
    "type": "CPP"
  },
  {
    "name": "T _DSA_do_verify",
    "type": "CPP"
  },
  {
    "name": "T _DSO_METHOD_openssl",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_load",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_unload",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_bind_func",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_name_converter",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_merger",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_pathbyaddr",
    "type": "CPP"
  },
  {
    "name": "t _dlfcn_globallookup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_DSO_strings",
    "type": "CPP"
  },
  {
    "name": "T _DSO_new",
    "type": "CPP"
  },
  {
    "name": "t _DSO_new_method",
    "type": "CPP"
  },
  {
    "name": "T _DSO_free",
    "type": "CPP"
  },
  {
    "name": "T _DSO_flags",
    "type": "CPP"
  },
  {
    "name": "T _DSO_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _DSO_load",
    "type": "CPP"
  },
  {
    "name": "T _DSO_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _DSO_set_filename",
    "type": "CPP"
  },
  {
    "name": "T _DSO_bind_func",
    "type": "CPP"
  },
  {
    "name": "T _DSO_get_filename",
    "type": "CPP"
  },
  {
    "name": "T _DSO_merge",
    "type": "CPP"
  },
  {
    "name": "T _DSO_convert_filename",
    "type": "CPP"
  },
  {
    "name": "T _DSO_pathbyaddr",
    "type": "CPP"
  },
  {
    "name": "T _DSO_dsobyaddr",
    "type": "CPP"
  },
  {
    "name": "T _DSO_global_lookup",
    "type": "CPP"
  },
  {
    "name": "T _gf_mul",
    "type": "CPP"
  },
  {
    "name": "T _gf_mulw_unsigned",
    "type": "CPP"
  },
  {
    "name": "T _gf_sqr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_double",
    "type": "CPP"
  },
  {
    "name": "t _point_double_internal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_eq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_valid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_precomputed_scalarmul",
    "type": "CPP"
  },
  {
    "name": "t _add_niels_to_pt",
    "type": "CPP"
  },
  {
    "name": "t _niels_to_pt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_mul_by_ratio_and_encode_like_eddsa",
    "type": "CPP"
  },
  {
    "name": "t _gf_invert",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_decode_like_eddsa_and_mul_by_ratio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x448_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_point_mul_by_ratio_and_encode_like_x448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x448_derive_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_base_double_scalarmul_non_secret",
    "type": "CPP"
  },
  {
    "name": "t _recode_wnaf",
    "type": "CPP"
  },
  {
    "name": "t _pniels_to_pt",
    "type": "CPP"
  },
  {
    "name": "t _sub_niels_from_pt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x448_public_from_private",
    "type": "CPP"
  },
  {
    "name": "t _pt_to_pniels",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_convert_private_key_to_x448",
    "type": "CPP"
  },
  {
    "name": "t _oneshot_hash",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_derive_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_sign",
    "type": "CPP"
  },
  {
    "name": "t _hash_init_with_dom",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_sign_prehash",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_c448_ed448_verify_prehash",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448_sign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448ph_sign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448ph_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448_public_from_private",
    "type": "CPP"
  },
  {
    "name": "T _gf_serialize",
    "type": "CPP"
  },
  {
    "name": "T _gf_strong_reduce",
    "type": "CPP"
  },
  {
    "name": "T _gf_hibit",
    "type": "CPP"
  },
  {
    "name": "T _gf_add",
    "type": "CPP"
  },
  {
    "name": "T _gf_lobit",
    "type": "CPP"
  },
  {
    "name": "T _gf_deserialize",
    "type": "CPP"
  },
  {
    "name": "T _gf_sub",
    "type": "CPP"
  },
  {
    "name": "T _gf_eq",
    "type": "CPP"
  },
  {
    "name": "T _gf_isr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_mul",
    "type": "CPP"
  },
  {
    "name": "t _sc_montmul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_sub",
    "type": "CPP"
  },
  {
    "name": "t _sc_subx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_destroy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_decode_long",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_encode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_curve448_scalar_halve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed25519_sign",
    "type": "CPP"
  },
  {
    "name": "t _x25519_sc_reduce",
    "type": "CPP"
  },
  {
    "name": "t _ge_scalarmult_base",
    "type": "CPP"
  },
  {
    "name": "t _ge_p3_tobytes",
    "type": "CPP"
  },
  {
    "name": "t _sc_muladd",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed25519_verify",
    "type": "CPP"
  },
  {
    "name": "t _ge_double_scalarmult_vartime",
    "type": "CPP"
  },
  {
    "name": "t _ge_tobytes",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed25519_public_from_private",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x25519",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x25519_public_from_private",
    "type": "CPP"
  },
  {
    "name": "t _fe_invert",
    "type": "CPP"
  },
  {
    "name": "t _fe_mul",
    "type": "CPP"
  },
  {
    "name": "t _fe_tobytes",
    "type": "CPP"
  },
  {
    "name": "t _table_select",
    "type": "CPP"
  },
  {
    "name": "t _ge_madd",
    "type": "CPP"
  },
  {
    "name": "t _ge_p1p1_to_p3",
    "type": "CPP"
  },
  {
    "name": "t _ge_p1p1_to_p2",
    "type": "CPP"
  },
  {
    "name": "t _ge_p2_dbl",
    "type": "CPP"
  },
  {
    "name": "t _cmov",
    "type": "CPP"
  },
  {
    "name": "t _fe_sq",
    "type": "CPP"
  },
  {
    "name": "t _slide",
    "type": "CPP"
  },
  {
    "name": "t _ge_p3_to_cached",
    "type": "CPP"
  },
  {
    "name": "t _ge_add",
    "type": "CPP"
  },
  {
    "name": "t _fe51_mul",
    "type": "CPP"
  },
  {
    "name": "t _fe51_sq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_set_compressed_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point2oct",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_oct2point",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_clear_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_get_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_get_degree",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_group_check_discriminant",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_clear_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_set_to_infinity",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_set_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_point_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_dbl",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_invert",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_is_at_infinity",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_is_on_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_points_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_field_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_field_sqr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GF2m_simple_field_div",
    "type": "CPP"
  },
  {
    "name": "T _EC_GF2m_simple_method",
    "type": "CPP"
  },
  {
    "name": "t _ec_GF2m_simple_points_mul",
    "type": "CPP"
  },
  {
    "name": "t _ec_GF2m_simple_field_inv",
    "type": "CPP"
  },
  {
    "name": "t _ec_GF2m_simple_ladder_pre",
    "type": "CPP"
  },
  {
    "name": "t _ec_GF2m_simple_ladder_step",
    "type": "CPP"
  },
  {
    "name": "t _ec_GF2m_simple_ladder_post",
    "type": "CPP"
  },
  {
    "name": "t _eckey_pub_decode",
    "type": "CPP"
  },
  {
    "name": "t _eckey_pub_encode",
    "type": "CPP"
  },
  {
    "name": "t _eckey_pub_cmp",
    "type": "CPP"
  },
  {
    "name": "t _eckey_pub_print",
    "type": "CPP"
  },
  {
    "name": "t _eckey_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _eckey_priv_print",
    "type": "CPP"
  },
  {
    "name": "t _int_ec_size",
    "type": "CPP"
  },
  {
    "name": "t _ec_bits",
    "type": "CPP"
  },
  {
    "name": "t _ec_security_bits",
    "type": "CPP"
  },
  {
    "name": "t _eckey_param_decode",
    "type": "CPP"
  },
  {
    "name": "t _eckey_param_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_missing_parameters",
    "type": "CPP"
  },
  {
    "name": "t _ec_copy_parameters",
    "type": "CPP"
  },
  {
    "name": "t _ec_cmp_parameters",
    "type": "CPP"
  },
  {
    "name": "t _eckey_param_print",
    "type": "CPP"
  },
  {
    "name": "t _int_ec_free",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _old_ec_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _old_ec_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_check",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_public_check",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_param_check",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_dirty_cnt",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _ec_pkey_copy",
    "type": "CPP"
  },
  {
    "name": "t _eckey_priv_decode_ex",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_print",
    "type": "CPP"
  },
  {
    "name": "t _do_EC_KEY_print",
    "type": "CPP"
  },
  {
    "name": "T _ECParameters_print",
    "type": "CPP"
  },
  {
    "name": "t _eckey_param2type",
    "type": "CPP"
  },
  {
    "name": "T _X9_62_PENTANOMIAL_new",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_PENTANOMIAL_it",
    "type": "CPP"
  },
  {
    "name": "T _X9_62_PENTANOMIAL_free",
    "type": "CPP"
  },
  {
    "name": "T _X9_62_CHARACTERISTIC_TWO_new",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_CHARACTERISTIC_TWO_it",
    "type": "CPP"
  },
  {
    "name": "T _X9_62_CHARACTERISTIC_TWO_free",
    "type": "CPP"
  },
  {
    "name": "T _ECPARAMETERS_it",
    "type": "CPP"
  },
  {
    "name": "T _ECPARAMETERS_new",
    "type": "CPP"
  },
  {
    "name": "T _ECPARAMETERS_free",
    "type": "CPP"
  },
  {
    "name": "T _ECPKPARAMETERS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECPKPARAMETERS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECPKPARAMETERS",
    "type": "CPP"
  },
  {
    "name": "T _ECPKPARAMETERS_new",
    "type": "CPP"
  },
  {
    "name": "T _ECPKPARAMETERS_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EC_PRIVATEKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EC_PRIVATEKEY",
    "type": "CPP"
  },
  {
    "name": "T _EC_PRIVATEKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _EC_PRIVATEKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_ecparameters",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_ecpkparameters",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_from_ecparameters",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_from_ecpkparameters",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECParameters",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECParameters",
    "type": "CPP"
  },
  {
    "name": "T _o2i_ECPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _i2o_ECPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_new",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECDSA_SIG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECDSA_SIG",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_get0",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_get0_r",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_get0_s",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_SIG_set0",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_size",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_CHARACTERISTIC_TWO_adb",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_FIELDID_it",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_CURVE_it",
    "type": "CPP"
  },
  {
    "name": "t _X9_62_FIELDID_adb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_encoding_name2id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_check_group_type_id2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_set_check_group_type_from_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_pt_format_name2id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_pt_format_id2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_set_ecdh_cofactor_mode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_otherparams_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_is_foreign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_encoding_param2id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_pt_format_param2id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_algor_is_sm2",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_param_from_x509_algor",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_from_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_check_named_curve",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_check",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_by_curve_name_ex",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_by_curve_name",
    "type": "CPP"
  },
  {
    "name": "T _EC_get_builtin_curves",
    "type": "CPP"
  },
  {
    "name": "T _EC_curve_nid2nist",
    "type": "CPP"
  },
  {
    "name": "T _EC_curve_nist2nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_curve_nid_from_params",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_curve_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_curve_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_point2bn",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_bn2point",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_EC_strings",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_new",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_new_by_curve_name_ex",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_new_by_curve_name",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_copy",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_gen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_simple_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_simple_generate_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_check_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_public_check_quick",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_public_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_private_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_pairwise_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_simple_check_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_public_key_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_get_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_get0_propq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get0_group",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_group",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get0_private_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_private_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get0_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_enc_flags",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_enc_flags",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_conv_form",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_conv_form",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_asn1_flag",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_decoded_from_explicit_params",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_key2buf",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_oct2key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_priv2oct",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_simple_priv2oct",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_oct2priv",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_simple_oct2priv",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_priv2buf",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_can_sign",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_default_method",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_method",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_key_new_method_int",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_new_method",
    "type": "CPP"
  },
  {
    "name": "T _ECDH_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_new",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_set_init",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_set_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_set_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_set_sign",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_get_init",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_get_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_get_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_get_sign",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_METHOD_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new",
    "type": "CPP"
  },
  {
    "name": "T _EC_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_copy",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_new",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_copy",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_method_of",
    "type": "CPP"
  },
  {
    "name": "T _EC_METHOD_get_field_type",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_generator",
    "type": "CPP"
  },
  {
    "name": "t _ec_guess_cofactor",
    "type": "CPP"
  },
  {
    "name": "t _ec_precompute_mont_data",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get0_generator",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_mont_data",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_order",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get0_order",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_order_bits",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_cofactor",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get0_cofactor",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_curve_name",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_curve_name",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get0_field",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_field_type",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_asn1_flag",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_asn1_flag",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_point_conversion_form",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_point_conversion_form",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_seed",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get0_seed",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_seed_len",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_curve",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_curve_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_curve_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_set_curve_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_curve_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_degree",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_check_discriminant",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_cmp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_cmp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_method_of",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_to_infinity",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_Jprojective_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_get_Jprojective_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_is_on_curve",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_affine_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_affine_coordinates_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_is_at_infinity",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_get_affine_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_get_affine_coordinates_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_add",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_dbl",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_invert",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINTs_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINTs_mul",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_mul",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_simple_order_bits",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_do_inverse_ord",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_point_blind_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_basis_type",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_trinomial_basis",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_get_pentanomial_basis",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_group_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EC_GROUP_new_from_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_group_explicit_to_named",
    "type": "CPP"
  },
  {
    "name": "T _EC_ec_pre_comp_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_ec_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_scalar_mul_ladder",
    "type": "CPP"
  },
  {
    "name": "t _ec_point_ladder_pre",
    "type": "CPP"
  },
  {
    "name": "t _ec_point_ladder_step",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_wNAF_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_wNAF_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_wNAF_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_compressed_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_compressed_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_set_compressed_coordinates_GF2m",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_point2oct",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_oct2point",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_point2buf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_pkey_method",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_init",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_copy",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_paramgen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_keygen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_sign",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_verify",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_kdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_ctrl_str",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ec_derive",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_point2hex",
    "type": "CPP"
  },
  {
    "name": "T _EC_POINT_hex2point",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdh_kdf_X9_63",
    "type": "CPP"
  },
  {
    "name": "T _ECDH_KDF_X9_62",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdh_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdh_simple_compute_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_sign_sig",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_verify_sig",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_sign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_simple_sign_setup",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_simple_sign_sig",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecdsa_simple_verify_sig",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_do_sign",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_do_sign_ex",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_sign",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_sign_ex",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_sign_setup",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_do_verify",
    "type": "CPP"
  },
  {
    "name": "T _ECDSA_verify",
    "type": "CPP"
  },
  {
    "name": "T _ECPKParameters_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _ECPKParameters_print",
    "type": "CPP"
  },
  {
    "name": "T _EC_KEY_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _ECParameters_print_fp",
    "type": "CPP"
  },
  {
    "name": "t _print_bin",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_mont_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_group_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_group_clear_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_group_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_sqr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_inv",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_encode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_mont_field_set_to_one",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_nist_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nist_group_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nist_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nist_field_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nist_field_sqr",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_nistp224_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_point_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_points_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp224_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp224_pre_comp_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp224_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "t _BN_to_felem",
    "type": "CPP"
  },
  {
    "name": "t _felem_inv",
    "type": "CPP"
  },
  {
    "name": "t _felem_square",
    "type": "CPP"
  },
  {
    "name": "t _felem_reduce",
    "type": "CPP"
  },
  {
    "name": "t _felem_mul",
    "type": "CPP"
  },
  {
    "name": "t _felem_contract",
    "type": "CPP"
  },
  {
    "name": "t _felem_to_BN",
    "type": "CPP"
  },
  {
    "name": "t _felem_assign",
    "type": "CPP"
  },
  {
    "name": "t _point_add",
    "type": "CPP"
  },
  {
    "name": "t _point_double",
    "type": "CPP"
  },
  {
    "name": "t _batch_mul",
    "type": "CPP"
  },
  {
    "name": "t _felem_is_zero",
    "type": "CPP"
  },
  {
    "name": "t _felem_one",
    "type": "CPP"
  },
  {
    "name": "t _felem_is_zero_int",
    "type": "CPP"
  },
  {
    "name": "t _felem_square_reduce",
    "type": "CPP"
  },
  {
    "name": "t _felem_mul_reduce",
    "type": "CPP"
  },
  {
    "name": "t _select_point",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_nistp256_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_point_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_points_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp256_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp256_pre_comp_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp256_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "t _BN_to_felem",
    "type": "CPP"
  },
  {
    "name": "t _felem_inv",
    "type": "CPP"
  },
  {
    "name": "t _felem_mul",
    "type": "CPP"
  },
  {
    "name": "t _felem_contract",
    "type": "CPP"
  },
  {
    "name": "t _felem_shrink",
    "type": "CPP"
  },
  {
    "name": "t _point_add_small",
    "type": "CPP"
  },
  {
    "name": "t _point_double_small",
    "type": "CPP"
  },
  {
    "name": "t _batch_mul",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_square",
    "type": "CPP"
  },
  {
    "name": "t _felem_reduce_",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_mul",
    "type": "CPP"
  },
  {
    "name": "t _point_add",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_is_zero",
    "type": "CPP"
  },
  {
    "name": "t _point_double",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_one",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_is_zero_int",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_assign",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_square_contract",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_mul_contract",
    "type": "CPP"
  },
  {
    "name": "t _smallfelem_inv_contract",
    "type": "CPP"
  },
  {
    "name": "t _select_point",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_nistp521_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_point_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_points_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp521_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp521_pre_comp_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistp521_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "t _BN_to_felem",
    "type": "CPP"
  },
  {
    "name": "t _felem_inv",
    "type": "CPP"
  },
  {
    "name": "t _felem_square_ref",
    "type": "CPP"
  },
  {
    "name": "t _felem_reduce",
    "type": "CPP"
  },
  {
    "name": "t _felem_mul_ref",
    "type": "CPP"
  },
  {
    "name": "t _felem_contract",
    "type": "CPP"
  },
  {
    "name": "t _felem_to_BN",
    "type": "CPP"
  },
  {
    "name": "t _point_add",
    "type": "CPP"
  },
  {
    "name": "t _point_double",
    "type": "CPP"
  },
  {
    "name": "t _batch_mul",
    "type": "CPP"
  },
  {
    "name": "t _felem_assign",
    "type": "CPP"
  },
  {
    "name": "t _felem_is_zero",
    "type": "CPP"
  },
  {
    "name": "t _felem_diff_128_64",
    "type": "CPP"
  },
  {
    "name": "t _felem_diff64",
    "type": "CPP"
  },
  {
    "name": "t _felem_one",
    "type": "CPP"
  },
  {
    "name": "t _felem_is_zero_int",
    "type": "CPP"
  },
  {
    "name": "t _felem_square_reduce",
    "type": "CPP"
  },
  {
    "name": "t _felem_mul_reduce",
    "type": "CPP"
  },
  {
    "name": "t _select_point",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp_points_make_affine_internal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_nistp_recode_scalar_bits",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_precomputed",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_to_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_from_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_mul_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_sqr_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_add",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_div_by_2",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_mul_by_2",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_mul_by_3",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_sub",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_neg",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_mul_mont",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_sqr_mont",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_add",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_sub_from",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_sub_morf",
    "type": "CPP"
  },
  {
    "name": "t __ecp_nistz256_div_by_2",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_point_double",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_point_add",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_point_add_affine",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_ord_mul_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_ord_sqr_mont",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_scatter_w5",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_gather_w5",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_scatter_w7",
    "type": "CPP"
  },
  {
    "name": "T _ecp_nistz256_gather_w7",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistz256_pre_comp_dup",
    "type": "CPP"
  },
  {
    "name": "T _EC_nistz256_pre_comp_free",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_nistz256_method",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_get_affine",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_points_mul",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_mult_precompute",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_window_have_precompute_mult",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_inv_mod_ord",
    "type": "CPP"
  },
  {
    "name": "t _ecp_nistz256_is_affine_G",
    "type": "CPP"
  },
  {
    "name": "t _copy_conditional",
    "type": "CPP"
  },
  {
    "name": "t _is_one",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_set_compressed_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point2oct",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_oct2point",
    "type": "CPP"
  },
  {
    "name": "T _EC_GFp_simple_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_clear_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_set_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_get_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_get_degree",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_group_check_discriminant",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_clear_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_set_to_infinity",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_set_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_point_get_affine_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_dbl",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_invert",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_is_at_infinity",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_is_on_curve",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_points_make_affine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_field_mul",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_field_sqr",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_field_inv",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_blind_coordinates",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_ladder_pre",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_ladder_step",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_ladder_post",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_set_Jprojective_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_GFp_simple_get_Jprojective_coordinates_GFp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_public_from_private",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_op",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_from_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx_key_allocate_privkey",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pub_decode",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pub_encode",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pub_cmp",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pub_print",
    "type": "CPP"
  },
  {
    "name": "t _ecx_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _ecx_priv_print",
    "type": "CPP"
  },
  {
    "name": "t _ecx_size",
    "type": "CPP"
  },
  {
    "name": "t _ecx_bits",
    "type": "CPP"
  },
  {
    "name": "t _ecx_security_bits",
    "type": "CPP"
  },
  {
    "name": "t _ecx_cmp_parameters",
    "type": "CPP"
  },
  {
    "name": "t _ecx_free",
    "type": "CPP"
  },
  {
    "name": "t _ecx_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _ecx_set_priv_key",
    "type": "CPP"
  },
  {
    "name": "t _ecx_set_pub_key",
    "type": "CPP"
  },
  {
    "name": "t _ecx_get_priv_key",
    "type": "CPP"
  },
  {
    "name": "t _ecx_get_pub_key",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pkey_dirty_cnt",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _x25519_import_from",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pkey_copy",
    "type": "CPP"
  },
  {
    "name": "t _ecx_priv_decode_ex",
    "type": "CPP"
  },
  {
    "name": "t _x448_import_from",
    "type": "CPP"
  },
  {
    "name": "t _ecd_size25519",
    "type": "CPP"
  },
  {
    "name": "t _ecd_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _ecd_item_verify",
    "type": "CPP"
  },
  {
    "name": "t _ecd_item_sign25519",
    "type": "CPP"
  },
  {
    "name": "t _ecd_sig_info_set25519",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_import_from",
    "type": "CPP"
  },
  {
    "name": "t _ecd_size448",
    "type": "CPP"
  },
  {
    "name": "t _ecd_item_sign448",
    "type": "CPP"
  },
  {
    "name": "t _ecd_sig_info_set448",
    "type": "CPP"
  },
  {
    "name": "t _ed448_import_from",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx25519_pkey_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ecx448_pkey_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed25519_pkey_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ed448_pkey_method",
    "type": "CPP"
  },
  {
    "name": "t _ecx_key_print",
    "type": "CPP"
  },
  {
    "name": "t _ecx_generic_import_from",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecx_keygen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecx_derive25519",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecx_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _validate_ecx_derive",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecx_derive448",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecd_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecd_digestsign25519",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecd_digestverify25519",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecd_digestsign448",
    "type": "CPP"
  },
  {
    "name": "t _pkey_ecd_digestverify448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_OSSL_DECODER_strings",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_from_bio",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_get_num_decoders",
    "type": "CPP"
  },
  {
    "name": "t _decoder_process",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_from_fp",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_from_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_selection",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_input_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_input_structure",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_instance_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_instance_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_ctx_add_decoder_inst",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_add_decoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_add_extra",
    "type": "CPP"
  },
  {
    "name": "t _collect_all_decoders",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_INSTANCE_get_input_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_construct",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_construct_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_get_construct",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_get_construct_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_export",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_INSTANCE_get_decoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_INSTANCE_get_decoder_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_INSTANCE_get_input_structure",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_fetch",
    "type": "CPP"
  },
  {
    "name": "t _inner_ossl_decoder_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_store_cache_flush",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_store_remove_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_get0_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_parsed_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_get_number",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_is_a",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_fast_is_a",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _do_one",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_get_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_free",
    "type": "CPP"
  },
  {
    "name": "t _get_tmp_decoder_store",
    "type": "CPP"
  },
  {
    "name": "t _reserve_decoder_store",
    "type": "CPP"
  },
  {
    "name": "t _unreserve_decoder_store",
    "type": "CPP"
  },
  {
    "name": "t _get_decoder_from_store",
    "type": "CPP"
  },
  {
    "name": "t _put_decoder_in_store",
    "type": "CPP"
  },
  {
    "name": "t _construct_decoder",
    "type": "CPP"
  },
  {
    "name": "t _destruct_decoder",
    "type": "CPP"
  },
  {
    "name": "t _up_ref_decoder",
    "type": "CPP"
  },
  {
    "name": "t _free_decoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_passphrase",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_passphrase_ui",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_pem_password_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_set_passphrase_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decoder_ctx_setup_for_pkey",
    "type": "CPP"
  },
  {
    "name": "t _collect_keymgmt",
    "type": "CPP"
  },
  {
    "name": "t _collect_decoder",
    "type": "CPP"
  },
  {
    "name": "t _decoder_construct_pkey",
    "type": "CPP"
  },
  {
    "name": "t _decoder_clean_pkey_construct_arg",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_DECODER_CTX_new_for_pkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_OSSL_ENCODER_strings",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_to_bio",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_get_num_encoders",
    "type": "CPP"
  },
  {
    "name": "t _encoder_process",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_to_fp",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_to_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_selection",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_output_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_output_structure",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encoder_instance_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_add_encoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_add_extra",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_construct",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_construct_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_INSTANCE_get_encoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_INSTANCE_get_encoder_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_INSTANCE_get_output_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_INSTANCE_get_output_structure",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_fetch",
    "type": "CPP"
  },
  {
    "name": "t _inner_ossl_encoder_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encoder_store_cache_flush",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encoder_store_remove_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_get0_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encoder_parsed_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encoder_get_number",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_is_a",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _do_one",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_get_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_free",
    "type": "CPP"
  },
  {
    "name": "t _get_tmp_encoder_store",
    "type": "CPP"
  },
  {
    "name": "t _reserve_encoder_store",
    "type": "CPP"
  },
  {
    "name": "t _unreserve_encoder_store",
    "type": "CPP"
  },
  {
    "name": "t _get_encoder_from_store",
    "type": "CPP"
  },
  {
    "name": "t _put_encoder_in_store",
    "type": "CPP"
  },
  {
    "name": "t _construct_encoder",
    "type": "CPP"
  },
  {
    "name": "t _destruct_encoder",
    "type": "CPP"
  },
  {
    "name": "t _up_ref_encoder",
    "type": "CPP"
  },
  {
    "name": "t _free_encoder",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_cipher",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_passphrase",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_passphrase_ui",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_pem_password_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_set_passphrase_cb",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ENCODER_CTX_new_for_pkey",
    "type": "CPP"
  },
  {
    "name": "t _collect_name",
    "type": "CPP"
  },
  {
    "name": "t _collect_encoder",
    "type": "CPP"
  },
  {
    "name": "t _encoder_construct_pkey",
    "type": "CPP"
  },
  {
    "name": "t _encoder_destruct_pkey",
    "type": "CPP"
  },
  {
    "name": "t _encoder_import_cb",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_load_builtin_engines",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_add_conf_module",
    "type": "CPP"
  },
  {
    "name": "t _int_engine_module_init",
    "type": "CPP"
  },
  {
    "name": "t _int_engine_module_finish",
    "type": "CPP"
  },
  {
    "name": "t _int_engine_init",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_cmd_is_executable",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_ctrl_cmd",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_ctrl_cmd_string",
    "type": "CPP"
  },
  {
    "name": "T _engine_load_dynamic_int",
    "type": "CPP"
  },
  {
    "name": "t _dynamic_init",
    "type": "CPP"
  },
  {
    "name": "t _dynamic_finish",
    "type": "CPP"
  },
  {
    "name": "t _dynamic_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _dynamic_data_ctx_free_func",
    "type": "CPP"
  },
  {
    "name": "t _int_free_str",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_ENGINE_strings",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_string",
    "type": "CPP"
  },
  {
    "name": "t _int_def_cb",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_complete",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_complete",
    "type": "CPP"
  },
  {
    "name": "T _engine_unlocked_init",
    "type": "CPP"
  },
  {
    "name": "T _engine_unlocked_finish",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_init",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_finish",
    "type": "CPP"
  },
  {
    "name": "T _do_engine_lock_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_new",
    "type": "CPP"
  },
  {
    "name": "T _engine_set_all_null",
    "type": "CPP"
  },
  {
    "name": "T _engine_free_util",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_free",
    "type": "CPP"
  },
  {
    "name": "T _engine_cleanup_add_first",
    "type": "CPP"
  },
  {
    "name": "t _int_cleanup_item",
    "type": "CPP"
  },
  {
    "name": "T _engine_cleanup_add_last",
    "type": "CPP"
  },
  {
    "name": "T _engine_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "t _engine_cleanup_cb_free",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_id",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_name",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_destroy_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_init_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_finish_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_ctrl_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_cmd_defns",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_id",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_name",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_destroy_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_init_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_finish_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_ctrl_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_cmd_defns",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_static_state",
    "type": "CPP"
  },
  {
    "name": "T _engine_add_dynamic_id",
    "type": "CPP"
  },
  {
    "name": "T _engine_remove_dynamic_id",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_first",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_last",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_next",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_prev",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_add",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_remove",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_by_id",
    "type": "CPP"
  },
  {
    "name": "t _engine_cpy",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _engine_list_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _engine_load_openssl_int",
    "type": "CPP"
  },
  {
    "name": "t _openssl_destroy",
    "type": "CPP"
  },
  {
    "name": "t _openssl_ciphers",
    "type": "CPP"
  },
  {
    "name": "t _openssl_digests",
    "type": "CPP"
  },
  {
    "name": "t _openssl_load_privkey",
    "type": "CPP"
  },
  {
    "name": "t _test_r4_cipher",
    "type": "CPP"
  },
  {
    "name": "t _test_r4_40_cipher",
    "type": "CPP"
  },
  {
    "name": "t _test_rc4_init_key",
    "type": "CPP"
  },
  {
    "name": "t _test_rc4_cipher",
    "type": "CPP"
  },
  {
    "name": "t _test_sha_md",
    "type": "CPP"
  },
  {
    "name": "t _test_sha1_init",
    "type": "CPP"
  },
  {
    "name": "t _test_sha1_update",
    "type": "CPP"
  },
  {
    "name": "t _test_sha1_final",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_load_privkey_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_load_pubkey_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_load_ssl_client_cert_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_load_privkey_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_load_pubkey_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_ssl_client_cert_function",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_load_private_key",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_load_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_load_ssl_client_cert",
    "type": "CPP"
  },
  {
    "name": "T _engine_load_rdrand_int",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_table_flags",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_table_flags",
    "type": "CPP"
  },
  {
    "name": "T _engine_table_register",
    "type": "CPP"
  },
  {
    "name": "T _engine_table_unregister",
    "type": "CPP"
  },
  {
    "name": "t _int_unregister_cb",
    "type": "CPP"
  },
  {
    "name": "T _engine_table_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _int_cleanup_cb_doall",
    "type": "CPP"
  },
  {
    "name": "T _ossl_engine_table_select",
    "type": "CPP"
  },
  {
    "name": "T _engine_table_doall",
    "type": "CPP"
  },
  {
    "name": "t _int_dall",
    "type": "CPP"
  },
  {
    "name": "t _engine_pile_hash",
    "type": "CPP"
  },
  {
    "name": "t _engine_pile_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_asn1_meth_engine",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_asn1_meth",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_pkey_asn1_meths",
    "type": "CPP"
  },
  {
    "name": "T _engine_pkey_asn1_meths_free",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_asn1_meth_str",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_pkey_asn1_find_str",
    "type": "CPP"
  },
  {
    "name": "t _look_str_cb",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_ciphers",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_cipher_engine",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_DH",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_default_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_DH",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_digests",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_digest_engine",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_digest",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_digests",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_DSA",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_default_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_EC",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_default_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_EC",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_meth_engine",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_meth",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_pkey_meths",
    "type": "CPP"
  },
  {
    "name": "T _engine_pkey_meths_free",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_RAND",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_default_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_RAND",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_unregister_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_RSA",
    "type": "CPP"
  },
  {
    "name": "t _engine_unregister_all_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_register_all_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_default_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_default_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_get_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ENGINE_set_RSA",
    "type": "CPP"
  },
  {
    "name": "T _err_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_ERR_strings",
    "type": "CPP"
  },
  {
    "name": "t _do_err_strings_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _err_load_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_strings_const",
    "type": "CPP"
  },
  {
    "name": "T _ERR_unload_strings",
    "type": "CPP"
  },
  {
    "name": "T _err_free_strings_int",
    "type": "CPP"
  },
  {
    "name": "T _ERR_clear_error",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_get_state_int",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_error",
    "type": "CPP"
  },
  {
    "name": "t _get_error_values",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_error_all",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_error_line",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_error_line_data",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error_line",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error_func",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error_data",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error_all",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_error_line_data",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error_line",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error_func",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error_data",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error_all",
    "type": "CPP"
  },
  {
    "name": "T _ERR_peek_last_error_line_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_string_int",
    "type": "CPP"
  },
  {
    "name": "T _ERR_lib_error_string",
    "type": "CPP"
  },
  {
    "name": "T _ERR_reason_error_string",
    "type": "CPP"
  },
  {
    "name": "T _ERR_error_string_n",
    "type": "CPP"
  },
  {
    "name": "T _ERR_error_string",
    "type": "CPP"
  },
  {
    "name": "t _int_err_get_item",
    "type": "CPP"
  },
  {
    "name": "T _ERR_func_error_string",
    "type": "CPP"
  },
  {
    "name": "T _ERR_remove_thread_state",
    "type": "CPP"
  },
  {
    "name": "T _ERR_remove_state",
    "type": "CPP"
  },
  {
    "name": "t _err_do_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _err_delete_thread_state",
    "type": "CPP"
  },
  {
    "name": "t _ERR_STATE_free",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_state",
    "type": "CPP"
  },
  {
    "name": "T _err_shelve_state",
    "type": "CPP"
  },
  {
    "name": "T _err_unshelve_state",
    "type": "CPP"
  },
  {
    "name": "T _ERR_get_next_error_library",
    "type": "CPP"
  },
  {
    "name": "T _ERR_set_error_data",
    "type": "CPP"
  },
  {
    "name": "t _err_set_error_data_int",
    "type": "CPP"
  },
  {
    "name": "T _ERR_add_error_data",
    "type": "CPP"
  },
  {
    "name": "T _ERR_add_error_vdata",
    "type": "CPP"
  },
  {
    "name": "T _ERR_set_mark",
    "type": "CPP"
  },
  {
    "name": "T _ERR_pop_to_mark",
    "type": "CPP"
  },
  {
    "name": "T _ERR_clear_last_mark",
    "type": "CPP"
  },
  {
    "name": "T _err_clear_last_constant_time",
    "type": "CPP"
  },
  {
    "name": "t _err_string_data_hash",
    "type": "CPP"
  },
  {
    "name": "t _err_string_data_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_crypto_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_ASN1_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_ASYNC_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_BIO_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_BN_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_BUF_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_CMS_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_COMP_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_CONF_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_CRYPTO_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_CT_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_DH_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_DSA_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_EC_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_ENGINE_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_ERR_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_EVP_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_OBJ_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_OCSP_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_PEM_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_PKCS12_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_PKCS7_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_RAND_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_RSA_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_OSSL_STORE_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_TS_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_UI_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_X509_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_X509V3_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_new",
    "type": "CPP"
  },
  {
    "name": "T _ERR_set_debug",
    "type": "CPP"
  },
  {
    "name": "T _ERR_set_error",
    "type": "CPP"
  },
  {
    "name": "T _ERR_vset_error",
    "type": "CPP"
  },
  {
    "name": "T _ERR_print_errors_cb",
    "type": "CPP"
  },
  {
    "name": "T _ERR_add_error_txt",
    "type": "CPP"
  },
  {
    "name": "T _ERR_add_error_mem_bio",
    "type": "CPP"
  },
  {
    "name": "T _ERR_print_errors",
    "type": "CPP"
  },
  {
    "name": "t _print_bio",
    "type": "CPP"
  },
  {
    "name": "T _ERR_print_errors_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ESS_ISSUER_SERIAL",
    "type": "CPP"
  },
  {
    "name": "t _ESS_ISSUER_SERIAL_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ESS_ISSUER_SERIAL",
    "type": "CPP"
  },
  {
    "name": "T _ESS_ISSUER_SERIAL_new",
    "type": "CPP"
  },
  {
    "name": "T _ESS_ISSUER_SERIAL_free",
    "type": "CPP"
  },
  {
    "name": "T _ESS_ISSUER_SERIAL_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ESS_CERT_ID",
    "type": "CPP"
  },
  {
    "name": "t _ESS_CERT_ID_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ESS_CERT_ID",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_new",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_free",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_dup",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ESS_SIGNING_CERT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ESS_SIGNING_CERT",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_new",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_free",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ESS_CERT_ID_V2",
    "type": "CPP"
  },
  {
    "name": "t _ESS_CERT_ID_V2_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ESS_CERT_ID_V2",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_V2_new",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_V2_free",
    "type": "CPP"
  },
  {
    "name": "T _ESS_CERT_ID_V2_dup",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_V2_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ESS_SIGNING_CERT_V2",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ESS_SIGNING_CERT_V2",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_V2_new",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_V2_free",
    "type": "CPP"
  },
  {
    "name": "T _ESS_SIGNING_CERT_V2_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_ESS_strings",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ESS_signing_cert_new_init",
    "type": "CPP"
  },
  {
    "name": "t _ESS_CERT_ID_new_init",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ESS_signing_cert_v2_new_init",
    "type": "CPP"
  },
  {
    "name": "t _ESS_CERT_ID_V2_new_init",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_ESS_check_signing_certs",
    "type": "CPP"
  },
  {
    "name": "t _find",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encrypt_init",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_asym_cipher_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encrypt_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decrypt_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decrypt_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_asym_cipher_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _evp_asym_cipher_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_is_a",
    "type": "CPP"
  },
  {
    "name": "T _evp_asym_cipher_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ASYM_CIPHER_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_base64",
    "type": "CPP"
  },
  {
    "name": "t _b64_write",
    "type": "CPP"
  },
  {
    "name": "t _b64_read",
    "type": "CPP"
  },
  {
    "name": "t _b64_puts",
    "type": "CPP"
  },
  {
    "name": "t _b64_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _b64_new",
    "type": "CPP"
  },
  {
    "name": "t _b64_free",
    "type": "CPP"
  },
  {
    "name": "t _b64_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_cipher",
    "type": "CPP"
  },
  {
    "name": "T _BIO_set_cipher",
    "type": "CPP"
  },
  {
    "name": "t _enc_write",
    "type": "CPP"
  },
  {
    "name": "t _enc_read",
    "type": "CPP"
  },
  {
    "name": "t _enc_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _enc_new",
    "type": "CPP"
  },
  {
    "name": "t _enc_free",
    "type": "CPP"
  },
  {
    "name": "t _enc_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_md",
    "type": "CPP"
  },
  {
    "name": "t _md_write",
    "type": "CPP"
  },
  {
    "name": "t _md_read",
    "type": "CPP"
  },
  {
    "name": "t _md_gets",
    "type": "CPP"
  },
  {
    "name": "t _md_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _md_new",
    "type": "CPP"
  },
  {
    "name": "t _md_free",
    "type": "CPP"
  },
  {
    "name": "t _md_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_reliable",
    "type": "CPP"
  },
  {
    "name": "t _ok_write",
    "type": "CPP"
  },
  {
    "name": "t _ok_read",
    "type": "CPP"
  },
  {
    "name": "t _ok_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _ok_new",
    "type": "CPP"
  },
  {
    "name": "t _ok_free",
    "type": "CPP"
  },
  {
    "name": "t _ok_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _block_out",
    "type": "CPP"
  },
  {
    "name": "T _openssl_add_all_ciphers_int",
    "type": "CPP"
  },
  {
    "name": "T _openssl_add_all_digests_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_iv_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_impl_ctx_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_do_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_set_asn1_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_get_asn1_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_do_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_set_asn1_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_get_asn1_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_meth_get_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_ctrl_to_param",
    "type": "CPP"
  },
  {
    "name": "t _default_fixup_args",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_ctrl_str_to_param",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_set_params_to_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_setget_params_to_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_get_params_to_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_get_params_to_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _default_check",
    "type": "CPP"
  },
  {
    "name": "t _lookup_translation",
    "type": "CPP"
  },
  {
    "name": "t _fix_distid_len",
    "type": "CPP"
  },
  {
    "name": "t _fix_dh_kdf_type",
    "type": "CPP"
  },
  {
    "name": "t _fix_md",
    "type": "CPP"
  },
  {
    "name": "t _fix_oid",
    "type": "CPP"
  },
  {
    "name": "t _fix_dh_paramgen_type",
    "type": "CPP"
  },
  {
    "name": "t _fix_dh_nid5114",
    "type": "CPP"
  },
  {
    "name": "t _fix_dh_nid",
    "type": "CPP"
  },
  {
    "name": "t _fix_ec_param_enc",
    "type": "CPP"
  },
  {
    "name": "t _fix_ec_paramgen_curve_nid",
    "type": "CPP"
  },
  {
    "name": "t _fix_ecdh_cofactor",
    "type": "CPP"
  },
  {
    "name": "t _fix_ec_kdf_type",
    "type": "CPP"
  },
  {
    "name": "t _fix_rsa_padding_mode",
    "type": "CPP"
  },
  {
    "name": "t _fix_rsa_pss_saltlen",
    "type": "CPP"
  },
  {
    "name": "t _fix_hkdf_mode",
    "type": "CPP"
  },
  {
    "name": "t _fix_cipher",
    "type": "CPP"
  },
  {
    "name": "t _fix_group_ecx",
    "type": "CPP"
  },
  {
    "name": "t _fix_kdf_type",
    "type": "CPP"
  },
  {
    "name": "t _fix_cipher_md",
    "type": "CPP"
  },
  {
    "name": "t _get_md_name",
    "type": "CPP"
  },
  {
    "name": "t _get_md_by_name",
    "type": "CPP"
  },
  {
    "name": "t _get_cipher_name",
    "type": "CPP"
  },
  {
    "name": "t _get_cipher_by_name",
    "type": "CPP"
  },
  {
    "name": "t _get_payload_group_name",
    "type": "CPP"
  },
  {
    "name": "t _get_payload_private_key",
    "type": "CPP"
  },
  {
    "name": "t _get_payload_public_key",
    "type": "CPP"
  },
  {
    "name": "t _get_dh_dsa_payload_p",
    "type": "CPP"
  },
  {
    "name": "t _get_dh_dsa_payload_g",
    "type": "CPP"
  },
  {
    "name": "t _get_dh_dsa_payload_q",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_n",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_d",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f1",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f2",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f3",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f4",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f5",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f6",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f7",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f8",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f9",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_f10",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e1",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e2",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e3",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e4",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e5",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e6",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e7",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e8",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e9",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_e10",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c1",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c2",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c3",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c4",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c5",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c6",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c7",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c8",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_c9",
    "type": "CPP"
  },
  {
    "name": "t _get_ec_decoded_from_explicit_params",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_factor",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_exponent",
    "type": "CPP"
  },
  {
    "name": "t _get_rsa_payload_coefficient",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_gindex",
    "type": "CPP"
  },
  {
    "name": "t _dh_paramgen_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_seed",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_prime_len",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_subprime_len",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_paramgen_generator",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_rfc5114",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dhx_rfc5114",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_nid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_pad",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_kdf_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_dh_kdf_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set0_dh_kdf_oid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_dh_kdf_oid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_kdf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_dh_kdf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dh_kdf_outlen",
    "type": "CPP"
  },
  {
    "name": "t _dh_param_derive_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_dh_kdf_outlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set0_dh_kdf_ukm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_dh_kdf_ukm",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_gen_type_id2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_gen_type_name2id",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_ctx_clear_digest",
    "type": "CPP"
  },
  {
    "name": "t _cleanup_old_md_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_reset",
    "type": "CPP"
  },
  {
    "name": "t _evp_md_ctx_reset_ex",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_ctx_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_ctx_free_algctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestInit_ex2",
    "type": "CPP"
  },
  {
    "name": "t _evp_md_init_internal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestFinalXOF",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_copy_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_Digest",
    "type": "CPP"
  },
  {
    "name": "T _EVP_Q_digest",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_fetch",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_new",
    "type": "CPP"
  },
  {
    "name": "t _evp_md_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "t _evp_md_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _evp_md_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _set_legacy_nid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_type",
    "type": "CPP"
  },
  {
    "name": "t _dsa_paramgen_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_gindex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_seed",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_q_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_md_props",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_dsa_paramgen_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_xts",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_xts",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_ccm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_ccm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_ccm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_wrap",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_wrap",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_wrap",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_wrap_pad",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_wrap_pad",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_wrap_pad",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_ocb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_ocb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_ocb",
    "type": "CPP"
  },
  {
    "name": "t _aes_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_cfb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ctr_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _aes_ccm_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_ccm_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ccm_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cbc_hmac_sha1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cbc_hmac_sha1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cbc_hmac_sha256",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cbc_hmac_sha256",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_gcm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_128_ccm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_192_ccm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aria_256_ccm",
    "type": "CPP"
  },
  {
    "name": "t _aria_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb128_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb128_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb128_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_ctr_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _aria_ccm_init_key",
    "type": "CPP"
  },
  {
    "name": "t _aria_ccm_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aria_ccm_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_bf_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_bf_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_bf_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_bf_ecb",
    "type": "CPP"
  },
  {
    "name": "t _bf_init_key",
    "type": "CPP"
  },
  {
    "name": "t _bf_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _bf_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _bf_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _bf_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_128_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_192_ctr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_camellia_256_ctr",
    "type": "CPP"
  },
  {
    "name": "t _camellia_init_key",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cfb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _camellia_ctr_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_cast5_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_cast5_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_cast5_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_cast5_ecb",
    "type": "CPP"
  },
  {
    "name": "t _cast_init_key",
    "type": "CPP"
  },
  {
    "name": "t _cast5_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _cast5_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _cast5_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _cast5_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_chacha20",
    "type": "CPP"
  },
  {
    "name": "T _EVP_chacha20_poly1305",
    "type": "CPP"
  },
  {
    "name": "t _chacha_init_key",
    "type": "CPP"
  },
  {
    "name": "t _chacha_cipher",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_init_key",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_cipher",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_cfb8",
    "type": "CPP"
  },
  {
    "name": "t _des_init_key",
    "type": "CPP"
  },
  {
    "name": "t _des_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _des_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_wrap",
    "type": "CPP"
  },
  {
    "name": "t _des_ede_init_key",
    "type": "CPP"
  },
  {
    "name": "t _des_ede_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des3_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _des_ede_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ede_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ede_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ede3_init_key",
    "type": "CPP"
  },
  {
    "name": "t _des_ede3_cfb1_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ede3_cfb8_cipher",
    "type": "CPP"
  },
  {
    "name": "t _des_ede3_wrap_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_idea_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_idea_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_idea_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_idea_ecb",
    "type": "CPP"
  },
  {
    "name": "t _idea_init_key",
    "type": "CPP"
  },
  {
    "name": "t _idea_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _idea_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _idea_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _idea_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_enc_null",
    "type": "CPP"
  },
  {
    "name": "t _null_init_key",
    "type": "CPP"
  },
  {
    "name": "t _null_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_bf_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede3_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_des_ede_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_idea_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_cast5_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_128_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_192_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_aes_256_cfb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_cfb64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_64_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc2_40_cbc",
    "type": "CPP"
  },
  {
    "name": "t _rc2_init_key",
    "type": "CPP"
  },
  {
    "name": "t _rc2_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _rc2_set_asn1_type_and_iv",
    "type": "CPP"
  },
  {
    "name": "t _rc2_get_asn1_type_and_iv",
    "type": "CPP"
  },
  {
    "name": "t _rc2_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _rc2_cfb64_cipher",
    "type": "CPP"
  },
  {
    "name": "t _rc2_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _rc2_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc4",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc4_40",
    "type": "CPP"
  },
  {
    "name": "t _rc4_init_key",
    "type": "CPP"
  },
  {
    "name": "t _rc4_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_rc4_hmac_md5",
    "type": "CPP"
  },
  {
    "name": "t _rc4_hmac_md5_init_key",
    "type": "CPP"
  },
  {
    "name": "t _rc4_hmac_md5_cipher",
    "type": "CPP"
  },
  {
    "name": "t _rc4_hmac_md5_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_seed_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_seed_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_seed_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_seed_ecb",
    "type": "CPP"
  },
  {
    "name": "t _seed_init_key",
    "type": "CPP"
  },
  {
    "name": "t _seed_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _seed_cfb128_cipher",
    "type": "CPP"
  },
  {
    "name": "t _seed_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _seed_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm4_cbc",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm4_ecb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm4_ofb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm4_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm4_ctr",
    "type": "CPP"
  },
  {
    "name": "t _sm4_init_key",
    "type": "CPP"
  },
  {
    "name": "t _sm4_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "t _sm4_ecb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _sm4_ofb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _sm4_cfb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _sm4_ctr_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_desx_cbc",
    "type": "CPP"
  },
  {
    "name": "t _desx_cbc_init_key",
    "type": "CPP"
  },
  {
    "name": "t _desx_cbc_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ecdh_cofactor_mode",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_ecdh_cofactor_mode",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ecdh_kdf_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_ecdh_kdf_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ecdh_kdf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_ecdh_kdf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ecdh_kdf_outlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_ecdh_kdf_outlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set0_ecdh_kdf_ukm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_ecdh_kdf_ukm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ec_paramgen_curve_nid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_ec_param_enc",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_EC_curve_nid2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_curve_name2nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_curve_nist2nid_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_curve_nid2nist_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ENCODE_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ENCODE_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ENCODE_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ENCODE_CTX_num",
    "type": "CPP"
  },
  {
    "name": "T _evp_encode_ctx_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncodeInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncodeUpdate",
    "type": "CPP"
  },
  {
    "name": "t _evp_encodeblock_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncodeFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncodeBlock",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecodeInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecodeUpdate",
    "type": "CPP"
  },
  {
    "name": "t _evp_decodeblock_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecodeBlock",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecodeFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_add_alg_module",
    "type": "CPP"
  },
  {
    "name": "t _alg_module_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_reset",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherInit_ex2",
    "type": "CPP"
  },
  {
    "name": "t _evp_cipher_init_internal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CipherFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_EncryptInit_ex2",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DecryptInit_ex2",
    "type": "CPP"
  },
  {
    "name": "T _ossl_is_partially_overlapping",
    "type": "CPP"
  },
  {
    "name": "t _evp_EncryptDecryptUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_key_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_padding",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_rand_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_cipher_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "t _evp_cipher_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _evp_cipher_free",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_free_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _set_legacy_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_EVP_strings",
    "type": "CPP"
  },
  {
    "name": "T _evp_generic_fetch",
    "type": "CPP"
  },
  {
    "name": "t _inner_evp_generic_fetch",
    "type": "CPP"
  },
  {
    "name": "T _evp_generic_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "T _evp_method_store_cache_flush",
    "type": "CPP"
  },
  {
    "name": "T _evp_method_store_remove_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _evp_set_default_properties_int",
    "type": "CPP"
  },
  {
    "name": "t _evp_set_parsed_default_properties",
    "type": "CPP"
  },
  {
    "name": "T _EVP_set_default_properties",
    "type": "CPP"
  },
  {
    "name": "T _EVP_default_properties_is_fips_enabled",
    "type": "CPP"
  },
  {
    "name": "T _evp_default_properties_enable_fips_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_default_properties_enable_fips",
    "type": "CPP"
  },
  {
    "name": "T _evp_get_global_properties_str",
    "type": "CPP"
  },
  {
    "name": "T _evp_generic_do_all",
    "type": "CPP"
  },
  {
    "name": "t _filter_on_operation_id",
    "type": "CPP"
  },
  {
    "name": "T _evp_is_a",
    "type": "CPP"
  },
  {
    "name": "T _evp_names_do_all",
    "type": "CPP"
  },
  {
    "name": "t _get_tmp_evp_method_store",
    "type": "CPP"
  },
  {
    "name": "t _reserve_evp_method_store",
    "type": "CPP"
  },
  {
    "name": "t _unreserve_evp_method_store",
    "type": "CPP"
  },
  {
    "name": "t _get_evp_method_from_store",
    "type": "CPP"
  },
  {
    "name": "t _put_evp_method_in_store",
    "type": "CPP"
  },
  {
    "name": "t _construct_evp_method",
    "type": "CPP"
  },
  {
    "name": "t _destruct_evp_method",
    "type": "CPP"
  },
  {
    "name": "T _EVP_set_pw_prompt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_get_pw_prompt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_read_pw_string",
    "type": "CPP"
  },
  {
    "name": "T _EVP_read_pw_string_min",
    "type": "CPP"
  },
  {
    "name": "T _EVP_BytesToKey",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_param_to_asn1",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_param_to_asn1_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_asn1_to_param",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_asn1_to_param_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_asn1_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_iv_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_set_asn1_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_original_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_mode",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_is_a",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_set_asn1_aead_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_get_asn1_aead_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_nid",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_cache_constants",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_block_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_block_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_impl_ctx_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_Cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get0_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get1_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_is_encrypting",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_app_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_app_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_cipher_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_cipher_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_iv_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_tag_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_iv_noconst",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_updated_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_original_iv",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_buf_noconst",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_num",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_num",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get_key_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_key_length",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_get_nid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _evp_cipher_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_pkey_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_block_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_dup",
    "type": "CPP"
  },
  {
    "name": "T _evp_md_free_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_input_blocksize",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_result_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_app_datasize",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_update",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_input_blocksize",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_result_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_app_datasize",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_update",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_meth_get_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_get0_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_get1_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_get_pkey_ctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_set_pkey_ctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_get0_md_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_update_fn",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_CTX_set_update_fn",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_CTX_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_group_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_group_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_Q_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_CipherInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_find_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_CipherInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_alg_add_type",
    "type": "CPP"
  },
  {
    "name": "t _pbe_cmp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_alg_add",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_find",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _free_evp_pbe_ctl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_get",
    "type": "CPP"
  },
  {
    "name": "t _pbe2_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkcs82pkey_legacy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKCS82PKEY_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKCS82PKEY",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY2PKCS8",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_attr_count",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_delete_attr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_add1_attr",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_type_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_enable_locking",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_rand_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "t _evp_rand_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _evp_rand_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_free",
    "type": "CPP"
  },
  {
    "name": "T _evp_rand_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_get0_rand",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_instantiate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_generate",
    "type": "CPP"
  },
  {
    "name": "t _evp_rand_generate_locked",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_reseed",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get_strength",
    "type": "CPP"
  },
  {
    "name": "t _evp_rand_strength_locked",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_nonce",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_get_state",
    "type": "CPP"
  },
  {
    "name": "T _EVP_RAND_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "T _evp_rand_can_seed",
    "type": "CPP"
  },
  {
    "name": "T _evp_rand_get_seed",
    "type": "CPP"
  },
  {
    "name": "T _evp_rand_clear_seed",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_ciph_getparams",
    "type": "CPP"
  },
  {
    "name": "t _geterr",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_ciph_ctx_getparams",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_ciph_ctx_setparams",
    "type": "CPP"
  },
  {
    "name": "t _seterr",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_md_getparams",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_md_ctx_getparams",
    "type": "CPP"
  },
  {
    "name": "T _evp_do_md_ctx_setparams",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_keyexch_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _evp_keyexch_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_derive_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_derive_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_derive_set_peer_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_derive_set_peer",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_derive",
    "type": "CPP"
  },
  {
    "name": "T _evp_keyexch_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYEXCH_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_dup",
    "type": "CPP"
  },
  {
    "name": "T _evp_kdf_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_kdf",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_reset",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_get_kdf_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_derive",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_kdf_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "t _evp_kdf_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _evp_kdf_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KDF_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encapsulate_init",
    "type": "CPP"
  },
  {
    "name": "t _evp_kem_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encapsulate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decapsulate_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decapsulate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_kem_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _evp_kem_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_is_a",
    "type": "CPP"
  },
  {
    "name": "T _evp_kem_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEM_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_try_import",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_assign_pkey",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_cache_keyinfo",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_make_pkey",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_export",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_export_to_provider",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_find_operation_cache",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_clear_operation_cache",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_cache_keydata",
    "type": "CPP"
  },
  {
    "name": "t _op_cache_free",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_has",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_match",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_copy",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_gen",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_get_deflt_digest_name",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_util_query_operation_name",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "t _keymgmt_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_fetch",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_newdata",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_freedata",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_gen_init",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_gen_set_template",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_gen",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_has_load",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_load",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_KEYMGMT_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_has",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_validate",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_match",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_import",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_import_types",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_export",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_export_types",
    "type": "CPP"
  },
  {
    "name": "T _evp_keymgmt_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_blake2b512",
    "type": "CPP"
  },
  {
    "name": "T _EVP_blake2s256",
    "type": "CPP"
  },
  {
    "name": "t _blake2b_int_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2b_int_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2b_int_final",
    "type": "CPP"
  },
  {
    "name": "t _blake2s_int_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2s_int_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2s_int_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_md4",
    "type": "CPP"
  },
  {
    "name": "t _md4_init",
    "type": "CPP"
  },
  {
    "name": "t _md4_update",
    "type": "CPP"
  },
  {
    "name": "t _md4_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_md5",
    "type": "CPP"
  },
  {
    "name": "t _md5_init",
    "type": "CPP"
  },
  {
    "name": "t _md5_update",
    "type": "CPP"
  },
  {
    "name": "t _md5_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_md5_sha1",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_int_init",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_int_update",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_int_final",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_int_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_mdc2",
    "type": "CPP"
  },
  {
    "name": "t _mdc2_init",
    "type": "CPP"
  },
  {
    "name": "t _mdc2_update",
    "type": "CPP"
  },
  {
    "name": "t _mdc2_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_ripemd160",
    "type": "CPP"
  },
  {
    "name": "t _ripe_init",
    "type": "CPP"
  },
  {
    "name": "t _ripe_update",
    "type": "CPP"
  },
  {
    "name": "t _ripe_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha1",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha224",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha256",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha512_224",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha512_256",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha384",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha512",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha3_224",
    "type": "CPP"
  },
  {
    "name": "t _sha3_int_init",
    "type": "CPP"
  },
  {
    "name": "t _sha3_int_update",
    "type": "CPP"
  },
  {
    "name": "t _sha3_int_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha3_256",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha3_384",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sha3_512",
    "type": "CPP"
  },
  {
    "name": "T _EVP_shake128",
    "type": "CPP"
  },
  {
    "name": "t _shake_init",
    "type": "CPP"
  },
  {
    "name": "t _shake_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_shake256",
    "type": "CPP"
  },
  {
    "name": "t _sha1_init",
    "type": "CPP"
  },
  {
    "name": "t _sha1_update",
    "type": "CPP"
  },
  {
    "name": "t _sha1_final",
    "type": "CPP"
  },
  {
    "name": "t _sha1_int_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _sha224_init",
    "type": "CPP"
  },
  {
    "name": "t _sha224_update",
    "type": "CPP"
  },
  {
    "name": "t _sha224_final",
    "type": "CPP"
  },
  {
    "name": "t _sha256_init",
    "type": "CPP"
  },
  {
    "name": "t _sha256_update",
    "type": "CPP"
  },
  {
    "name": "t _sha256_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_int_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_int_update",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_int_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_int_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_int_update",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_int_final",
    "type": "CPP"
  },
  {
    "name": "t _sha384_init",
    "type": "CPP"
  },
  {
    "name": "t _sha384_update",
    "type": "CPP"
  },
  {
    "name": "t _sha384_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_update",
    "type": "CPP"
  },
  {
    "name": "t _sha512_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_whirlpool",
    "type": "CPP"
  },
  {
    "name": "t _wp_init",
    "type": "CPP"
  },
  {
    "name": "t _wp_update",
    "type": "CPP"
  },
  {
    "name": "t _wp_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_md_null",
    "type": "CPP"
  },
  {
    "name": "t _init",
    "type": "CPP"
  },
  {
    "name": "t _update",
    "type": "CPP"
  },
  {
    "name": "t _final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestSignInit_ex",
    "type": "CPP"
  },
  {
    "name": "t _do_sigver_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestSignInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestVerifyInit_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestVerifyInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestSignUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestVerifyUpdate",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestSignFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestSign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestVerifyFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_DigestVerify",
    "type": "CPP"
  },
  {
    "name": "t _update",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_get0_mac",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_get_mac_size",
    "type": "CPP"
  },
  {
    "name": "t _get_size_t_ctx_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_get_block_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_update",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_final",
    "type": "CPP"
  },
  {
    "name": "t _evp_mac_final",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_finalXOF",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_mac_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_Q_mac",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_mac_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "t _evp_mac_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _evp_mac_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MAC_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_add_cipher",
    "type": "CPP"
  },
  {
    "name": "T _EVP_add_digest",
    "type": "CPP"
  },
  {
    "name": "T _EVP_get_cipherbyname",
    "type": "CPP"
  },
  {
    "name": "T _evp_get_cipherbyname_ex",
    "type": "CPP"
  },
  {
    "name": "t _cipher_from_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_get_digestbyname",
    "type": "CPP"
  },
  {
    "name": "T _evp_get_digestbyname_ex",
    "type": "CPP"
  },
  {
    "name": "t _digest_from_name",
    "type": "CPP"
  },
  {
    "name": "T _evp_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_do_all",
    "type": "CPP"
  },
  {
    "name": "t _do_all_cipher_fn",
    "type": "CPP"
  },
  {
    "name": "T _EVP_CIPHER_do_all_sorted",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_do_all",
    "type": "CPP"
  },
  {
    "name": "t _do_all_md_fn",
    "type": "CPP"
  },
  {
    "name": "T _EVP_MD_do_all_sorted",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_PBE_add",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_PBE_keyivgen_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_PBE_keyivgen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs5_pbkdf2_hmac_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_PBKDF2_HMAC",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_PBKDF2_HMAC_SHA1",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_PBE_keyivgen_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_PBE_keyivgen",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_PBKDF2_keyivgen_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS5_v2_PBKDF2_keyivgen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_decrypt_old",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_encrypt_old",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_RSA",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_get0_RSA_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_RSA",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get1_RSA",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_EC_KEY",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_get0_EC_KEY_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_EC_KEY",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get1_EC_KEY",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_save_parameters",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_copy_parameters",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_copy_downgraded",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_type_by_keymgmt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_missing_parameters",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_parameters_eq",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_export_to_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_cmp_parameters",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_cmp_any",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_cmp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_eq",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_raw_private_key_ex",
    "type": "CPP"
  },
  {
    "name": "t _new_raw_key_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_raw_private_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_raw_public_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_raw_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_raw_private_key",
    "type": "CPP"
  },
  {
    "name": "t _get_raw_key_details",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_raw_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_CMAC_key",
    "type": "CPP"
  },
  {
    "name": "t _pkey_set_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_type_str",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_engine",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_assign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_type",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_hmac",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_get_legacy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_poly1305",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_siphash",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_DSA",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_get0_DSA_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_DSA",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get1_DSA",
    "type": "CPP"
  },
  {
    "name": "T _ossl_evp_pkey_get1_X25519",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_get1_ECX_KEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_evp_pkey_get1_X448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_evp_pkey_get1_ED25519",
    "type": "CPP"
  },
  {
    "name": "T _ossl_evp_pkey_get1_ED448",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_DH",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_get0_DH_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_DH",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get1_DH",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_id",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_base_id",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_name2type",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_type2name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_type_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_can_sign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_public",
    "type": "CPP"
  },
  {
    "name": "t _print_pkey",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_private",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_public_fp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_private_fp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_print_params_fp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_default_digest_nid",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_asn1_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_default_digest_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_group_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_utf8_string_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_digestsign_supports_digest",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set1_encoded_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_octet_string_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get1_encoded_public_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_octet_string_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new",
    "type": "CPP"
  },
  {
    "name": "t _find_ameth",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_dup",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_free_legacy",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_free_it",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_size",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_bn_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_int_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_size_t_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_int_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_size_t_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_bn_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_set_utf8_string_param",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_ec_point_conv_form",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_get_field_type",
    "type": "CPP"
  },
  {
    "name": "t _print_reset_indent",
    "type": "CPP"
  },
  {
    "name": "t _mdname2nid",
    "type": "CPP"
  },
  {
    "name": "T _EVP_OpenInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_OpenFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SealInit",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SealFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SignFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SignFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_VerifyFinal_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_VerifyFinal",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_scrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PBE_scrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_public_check",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_public_check_combined",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_public_check_quick",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_param_check",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_param_check_combined",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_param_check_quick",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_private_check",
    "type": "CPP"
  },
  {
    "name": "t _try_provided_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_pairwise_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_paramgen_init",
    "type": "CPP"
  },
  {
    "name": "t _gen_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_keygen_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_generate",
    "type": "CPP"
  },
  {
    "name": "t _ossl_callback_to_pkey_gencb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_paramgen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_cb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_cb",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_set_cb_translate",
    "type": "CPP"
  },
  {
    "name": "t _trans_cb",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_keygen_info",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_new_mac_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_fromdata_init",
    "type": "CPP"
  },
  {
    "name": "t _fromdata_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_fromdata_settable",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_todata",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_export",
    "type": "CPP"
  },
  {
    "name": "t _ossl_pkey_todata_cb",
    "type": "CPP"
  },
  {
    "name": "t _pkey_fake_import",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_find",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_meth_find_added_by_application",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_state",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_new_from_name",
    "type": "CPP"
  },
  {
    "name": "t _int_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_new_from_pkey",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_free_old_ops",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get0_info",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_new_id",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_dup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_add0",
    "type": "CPP"
  },
  {
    "name": "t _pmeth_cmp",
    "type": "CPP"
  },
  {
    "name": "T _evp_app_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_remove",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_count",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get0",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_is_a",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_settable_params",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_set_params_strict",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_get_params_strict",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_signature_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_signature_md",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_set_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_tls1_prf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_tls1_prf_secret",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_set1_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_add1_tls1_prf_seed",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_hkdf_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_hkdf_salt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_hkdf_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_add1_hkdf_info",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_hkdf_mode",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_pbe_pass",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_scrypt_salt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_scrypt_N",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_set_uint64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_scrypt_r",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_scrypt_p",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_scrypt_maxmem_bytes",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_mac_key",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_kem_op",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_set1_id_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_id",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_get1_id_prov",
    "type": "CPP"
  },
  {
    "name": "t _get1_id_data",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_get1_id_len_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get1_id",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get1_id_len",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_store_cached_data",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_ctrl_int",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_ctrl_uint64",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_ctrl_str",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_ctx_ctrl_str_int",
    "type": "CPP"
  },
  {
    "name": "T _evp_pkey_ctx_use_cached_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_propq",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_str2ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_hex2ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_operation",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set0_keygen_info",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_pkey",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_peerkey",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_app_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_app_data",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_paramgen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_sign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_verify_recover",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_signctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_verifyctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_derive",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_digestsign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_digestverify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_public_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_param_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_set_digest_custom",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_copy",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_paramgen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_keygen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_sign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_verify_recover",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_signctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_verifyctx",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_derive",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_digestsign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_digestverify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_public_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_param_check",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_meth_get_digest_custom",
    "type": "CPP"
  },
  {
    "name": "t _pmeth_func_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _help_get_legacy_alg_type_from_keymgmt",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_free",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_fetch",
    "type": "CPP"
  },
  {
    "name": "t _evp_signature_from_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _evp_signature_fetch_from_prov",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_is_a",
    "type": "CPP"
  },
  {
    "name": "T _evp_signature_get_number",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_names_do_all",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_SIGNATURE_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_signature_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_sign_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_sign",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify_recover_init",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify_recover_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_verify_recover",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_name_to_dh_named_group",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_uid_to_dh_named_group",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_numbers_to_dh_named_group",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_named_group_get_uid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_named_group_get_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_named_group_get_keylength",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_named_group_get_q",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_named_group_set",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_generate_private_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_validate_public_key_partial",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_validate_public_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_validate_private_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_get0_pqg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set0_j",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_seed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_gindex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_pcounter",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_h",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_enable_flags",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_set_digest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_set_validate_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_get_validate_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_copy",
    "type": "CPP"
  },
  {
    "name": "t _ffc_bn_cpy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_print",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_4_gen_verify",
    "type": "CPP"
  },
  {
    "name": "t _generate_q_fips186_4",
    "type": "CPP"
  },
  {
    "name": "t _generate_p",
    "type": "CPP"
  },
  {
    "name": "t _generate_canonical_g",
    "type": "CPP"
  },
  {
    "name": "t _generate_unverifiable_g",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_2_gen_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_4_generate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_2_generate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_validate_unverifiable_g",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_4_validate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_FIPS186_2_validate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_simple_validate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ffc_params_full_validate",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_Init_ex",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_Init",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_reset",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_Update",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_Final",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_size",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_free",
    "type": "CPP"
  },
  {
    "name": "t _hmac_ctx_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _hmac_ctx_alloc_mds",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_copy",
    "type": "CPP"
  },
  {
    "name": "T _HMAC",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _HMAC_CTX_get_md",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_get0_mem_bio",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_get_resp_len",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_set_max_response_length",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_set_request_line",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_add1_header",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_set_expected",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_set1_req",
    "type": "CPP"
  },
  {
    "name": "t _set1_content",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_nbio",
    "type": "CPP"
  },
  {
    "name": "t _check_set_resp_len",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_nbio_d2i",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_REQ_CTX_exchange",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_is_alive",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_open",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_set1_request",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_exchange",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_get",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_close",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_transfer",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_proxy_connect",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_HTTP_strings",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_parse_url",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_parse_url",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_HTTP_adapt_proxy",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_options",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _IDEA_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_KDF_strings",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_stats",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_stats_bio",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_node_stats",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_node_stats_bio",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_node_usage_stats",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_node_usage_stats_bio",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_new",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_strhash",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_free",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_flush",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_insert",
    "type": "CPP"
  },
  {
    "name": "t _getrn",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_delete",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_retrieve",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_doall",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_doall_arg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lh_strcasehash",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_num_items",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_get_down_load",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_set_down_load",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_LH_error",
    "type": "CPP"
  },
  {
    "name": "T __armv7_neon_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv7_tick",
    "type": "CPP"
  },
  {
    "name": "T __armv8_aes_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sha1_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sha256_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_pmull_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sm4_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sha512_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_eor3_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sve_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sve2_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_cpuid_probe",
    "type": "CPP"
  },
  {
    "name": "T __armv8_sm3_probe",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_cleanse",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_memcmp",
    "type": "CPP"
  },
  {
    "name": "T __armv8_rng_probe",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_rndr_asm",
    "type": "CPP"
  },
  {
    "name": "t .rndr_done",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_rndrrs_asm",
    "type": "CPP"
  },
  {
    "name": "t .rndrrs_done",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_rdtsc",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_rndr_bytes",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_rndrrs_bytes",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_cpuid_setup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encode_der_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encode_der_integer",
    "type": "CPP"
  },
  {
    "name": "T _ossl_encode_der_dsa_sig",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decode_der_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decode_der_integer",
    "type": "CPP"
  },
  {
    "name": "T _ossl_decode_der_dsa_sig",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bsearch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_write_lock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_get_concrete",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_read_lock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_unlock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_is_child",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_default_deinit",
    "type": "CPP"
  },
  {
    "name": "t _context_deinit",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_new",
    "type": "CPP"
  },
  {
    "name": "t _context_init",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_new_from_dispatch",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_new_child",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_load_config",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_is_default",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_get0_global_default",
    "type": "CPP"
  },
  {
    "name": "t _default_context_do_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_LIB_CTX_set0_default",
    "type": "CPP"
  },
  {
    "name": "t _get_default_context",
    "type": "CPP"
  },
  {
    "name": "T _ossl_release_default_drbg_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_is_global_default",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_get_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_get_ex_data_global",
    "type": "CPP"
  },
  {
    "name": "T _ossl_lib_ctx_get_descriptor",
    "type": "CPP"
  },
  {
    "name": "t _context_deinit_objs",
    "type": "CPP"
  },
  {
    "name": "T _ossl_algorithm_do_all",
    "type": "CPP"
  },
  {
    "name": "t _algorithm_do_this",
    "type": "CPP"
  },
  {
    "name": "T _ossl_algorithm_get1_first_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_construct",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_construct_precondition",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_construct_reserve_store",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_construct_this",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_construct_unreserve_store",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_construct_postcondition",
    "type": "CPP"
  },
  {
    "name": "T _ossl_stored_namemap_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_stored_namemap_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_empty",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_doall_names",
    "type": "CPP"
  },
  {
    "name": "t _do_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_name2num",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_stored",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_name2num_n",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_num2name",
    "type": "CPP"
  },
  {
    "name": "t _do_num2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_add_name",
    "type": "CPP"
  },
  {
    "name": "t _namemap_add_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_namemap_add_names",
    "type": "CPP"
  },
  {
    "name": "t _get_legacy_cipher_names",
    "type": "CPP"
  },
  {
    "name": "t _get_legacy_md_names",
    "type": "CPP"
  },
  {
    "name": "t _namenum_hash",
    "type": "CPP"
  },
  {
    "name": "t _namenum_cmp",
    "type": "CPP"
  },
  {
    "name": "t _namenum_free",
    "type": "CPP"
  },
  {
    "name": "t _get_legacy_evp_names",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_CRYPTO_strings",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_showfatal",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_isservice",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_die",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ctype_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_isdigit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_isupper",
    "type": "CPP"
  },
  {
    "name": "T _ossl_islower",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tolower",
    "type": "CPP"
  },
  {
    "name": "T _ossl_toupper",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ascii_isdigit",
    "type": "CPP"
  },
  {
    "name": "T _OpenSSL_version_num",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_version_major",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_version_minor",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_version_patch",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_version_pre_release",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_version_build_metadata",
    "type": "CPP"
  },
  {
    "name": "T _OpenSSL_version",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_precompiled",
    "type": "CPP"
  },
  {
    "name": "t _int_end_context",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_boolean",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_octet_string_uint32",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_uint32",
    "type": "CPP"
  },
  {
    "name": "t _int_der_w_integer",
    "type": "CPP"
  },
  {
    "name": "t _int_put_bytes_uint32",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_bn",
    "type": "CPP"
  },
  {
    "name": "t _int_put_bytes_bn",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_null",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_begin_sequence",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_end_sequence",
    "type": "CPP"
  },
  {
    "name": "T _ossl_do_ex_data_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_cleanup_all_ex_data_int",
    "type": "CPP"
  },
  {
    "name": "t _cleanup_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_free_ex_index_ex",
    "type": "CPP"
  },
  {
    "name": "t _get_and_lock",
    "type": "CPP"
  },
  {
    "name": "t _dummy_new",
    "type": "CPP"
  },
  {
    "name": "t _dummy_dup",
    "type": "CPP"
  },
  {
    "name": "t _dummy_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_free_ex_index",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_get_ex_new_index_ex",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_get_ex_new_index",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_new_ex_data_ex",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_new_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_dup_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_free_ex_data",
    "type": "CPP"
  },
  {
    "name": "t _ex_callback_compare",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_alloc_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_alloc_ex_data_intern",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crypto_ex_data_get_ossl_lib_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_safe_getenv",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_info",
    "type": "CPP"
  },
  {
    "name": "t _init_info_strings_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_init_crypto",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_base_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_register_atexit_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_register_atexit_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_load_crypto_nodelete_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_load_crypto_strings_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_load_crypto_strings_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_add_all_ciphers_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_add_all_ciphers_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_add_all_digests_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_add_all_digests_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_config_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_config_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_config_settings_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_async_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_engine_openssl_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_engine_rdrand_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_engine_dynamic_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_atexit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_init_thread",
    "type": "CPP"
  },
  {
    "name": "t _init_thread_destructor",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cleanup_thread",
    "type": "CPP"
  },
  {
    "name": "t _init_thread_deregister",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_thread_stop_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ctx_thread_stop",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_thread_stop",
    "type": "CPP"
  },
  {
    "name": "t _init_thread_stop",
    "type": "CPP"
  },
  {
    "name": "t _init_thread_remove_handlers",
    "type": "CPP"
  },
  {
    "name": "T _ossl_init_thread_start",
    "type": "CPP"
  },
  {
    "name": "T _ossl_init_thread_deregister",
    "type": "CPP"
  },
  {
    "name": "t _create_global_tevent_register_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_set_mem_functions",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_get_mem_functions",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_malloc",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_zalloc",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_realloc",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_clear_realloc",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_malloc_init",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_malloc_done",
    "type": "CPP"
  },
  {
    "name": "t _sh_done",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_malloc_initialized",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_malloc",
    "type": "CPP"
  },
  {
    "name": "t _sh_actual_size",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_zalloc",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_allocated",
    "type": "CPP"
  },
  {
    "name": "t _sh_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_clear_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_used",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_secure_actual_size",
    "type": "CPP"
  },
  {
    "name": "t _sh_setbit",
    "type": "CPP"
  },
  {
    "name": "t _sh_add_to_list",
    "type": "CPP"
  },
  {
    "name": "t _sh_testbit",
    "type": "CPP"
  },
  {
    "name": "t _sh_clearbit",
    "type": "CPP"
  },
  {
    "name": "t _sh_remove_from_list",
    "type": "CPP"
  },
  {
    "name": "t _sh_find_my_buddy",
    "type": "CPP"
  },
  {
    "name": "t _sh_getlist",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_DIR_read",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_DIR_end",
    "type": "CPP"
  },
  {
    "name": "T _openssl_fopen",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_init",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_strdup",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_strndup",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_strnlen",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_memdup",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_strlcat",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_hexchar2int",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_hexstr2buf_ex",
    "type": "CPP"
  },
  {
    "name": "t _hexstr2buf_sep",
    "type": "CPP"
  },
  {
    "name": "T _ossl_hexstr2buf_sep",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_hexstr2buf",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_buf2hexstr_ex",
    "type": "CPP"
  },
  {
    "name": "t _buf2hexstr_sep",
    "type": "CPP"
  },
  {
    "name": "T _ossl_buf2hexstr_sep",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_buf2hexstr",
    "type": "CPP"
  },
  {
    "name": "T _openssl_strerror_r",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_strcasecmp",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_strncasecmp",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_gmtime",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_gmtime_adj",
    "type": "CPP"
  },
  {
    "name": "t _julian_adj",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_gmtime_diff",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_allocate_bytes",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_reserve_bytes",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_allocate_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_start_sub_packet_len__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_close",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_curr",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_reserve_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_static_len",
    "type": "CPP"
  },
  {
    "name": "t _wpacket_intern_init_len",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_der",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_len",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_null",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_null_der",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_fill_lengths",
    "type": "CPP"
  },
  {
    "name": "t _wpacket_intern_close",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_finish",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_start_sub_packet",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_put_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_set_max_size",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_memset",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_memcpy",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_memcpy__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_total_written",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_length",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_is_null_buf",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_free",
    "type": "CPP"
  },
  {
    "name": "t _free_all_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_int",
    "type": "CPP"
  },
  {
    "name": "t _param_push_num",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_uint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_long",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_ulong",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_int32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_uint32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_int64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_uint64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_size_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_time_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_double",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_BN",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_BN_pad",
    "type": "CPP"
  },
  {
    "name": "t _param_push",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_utf8_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_utf8_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_push_octet_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_BLD_to_param",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_long",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_utf8_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_bn_pad",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_bn",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_build_set_multi_key_bn",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_locate",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_locate_const",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_modified",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_all_unmodified",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_int32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_int32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_uint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_uint32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_uint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_uint32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_uint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_long",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_int64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_long",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_int64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_long",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_ulong",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_uint64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_ulong",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_uint64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_ulong",
    "type": "CPP"
  },
  {
    "name": "t _general_get_int",
    "type": "CPP"
  },
  {
    "name": "t _general_set_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_int32",
    "type": "CPP"
  },
  {
    "name": "t _general_get_uint",
    "type": "CPP"
  },
  {
    "name": "t _general_set_uint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_uint32",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_int64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_uint64",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_size_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_size_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_size_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_time_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_time_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_time_t",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_BN",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_BN",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_BN",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_double",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_double",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_double",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_utf8_string",
    "type": "CPP"
  },
  {
    "name": "t _get_string_internal",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_utf8_string",
    "type": "CPP"
  },
  {
    "name": "t _set_string_internal",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_utf8_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_utf8_ptr",
    "type": "CPP"
  },
  {
    "name": "t _get_ptr_internal",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_octet_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_utf8_ptr",
    "type": "CPP"
  },
  {
    "name": "t _set_ptr_internal",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_set_octet_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_utf8_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_octet_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_construct_end",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_utf8_string_ptr",
    "type": "CPP"
  },
  {
    "name": "t _get_string_ptr_internal",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_get_octet_string_ptr",
    "type": "CPP"
  },
  {
    "name": "t _copy_integer",
    "type": "CPP"
  },
  {
    "name": "t _unsigned_from_signed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_bytes_to_blocks",
    "type": "CPP"
  },
  {
    "name": "T _ossl_param_set_secure_block",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_dup",
    "type": "CPP"
  },
  {
    "name": "t _ossl_param_dup",
    "type": "CPP"
  },
  {
    "name": "t _ossl_param_buf_alloc",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_merge",
    "type": "CPP"
  },
  {
    "name": "t _compare_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PARAM_allocate_from_text",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_clear_passphrase_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_clear_passphrase_cache",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_set_passphrase",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_set_pem_password_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_set_ossl_passphrase_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_set_ui_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_enable_passphrase_caching",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_disable_passphrase_caching",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_get_passphrase",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_pem_password",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_pvk_password",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_passphrase_callback_enc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pw_passphrase_callback_dec",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_try_load",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_load",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_unload",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_get_params",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_query_operation",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_unquery_operation",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_get0_provider_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_get0_dispatch",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_self_test",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_get_capabilities",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_add_builtin",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_do_all",
    "type": "CPP"
  },
  {
    "name": "T _ossl_child_prov_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_child_prov_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_init_as_child",
    "type": "CPP"
  },
  {
    "name": "t _provider_create_child_cb",
    "type": "CPP"
  },
  {
    "name": "t _provider_remove_child_cb",
    "type": "CPP"
  },
  {
    "name": "t _provider_global_props_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_deinit_child",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_up_ref_parent",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_free_parent",
    "type": "CPP"
  },
  {
    "name": "t _ossl_child_provider_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_conf_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_conf_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_add_conf_module",
    "type": "CPP"
  },
  {
    "name": "t _provider_conf_init",
    "type": "CPP"
  },
  {
    "name": "t _provider_conf_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_info_clear",
    "type": "CPP"
  },
  {
    "name": "t _infopair_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_store_free",
    "type": "CPP"
  },
  {
    "name": "t _provider_deactivate_free",
    "type": "CPP"
  },
  {
    "name": "t _ossl_provider_child_cb_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_store_new",
    "type": "CPP"
  },
  {
    "name": "t _ossl_provider_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_disable_fallback_loading",
    "type": "CPP"
  },
  {
    "name": "t _get_provider_store",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_info_add_to_store",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_find",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_new",
    "type": "CPP"
  },
  {
    "name": "t _provider_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_add_to_store",
    "type": "CPP"
  },
  {
    "name": "t _create_provider_children",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_deactivate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_teardown",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_set_module_path",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_add_parameter",
    "type": "CPP"
  },
  {
    "name": "t _infopair_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_info_add_parameter",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_set_default_search_path",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_activate",
    "type": "CPP"
  },
  {
    "name": "t _provider_activate",
    "type": "CPP"
  },
  {
    "name": "t _provider_deactivate",
    "type": "CPP"
  },
  {
    "name": "t _provider_remove_store_methods",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_doall_activated",
    "type": "CPP"
  },
  {
    "name": "t _provider_activate_fallbacks",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_PROVIDER_available",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_dso",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_module_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_module_path",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_prov_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_get0_dispatch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_self_test",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_get_capabilities",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_query_operation",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_unquery_operation",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_set_operation_bit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_test_operation_bit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_get_parent",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_is_child",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_set_child",
    "type": "CPP"
  },
  {
    "name": "T _ossl_provider_default_props_update",
    "type": "CPP"
  },
  {
    "name": "t _infopair_copy",
    "type": "CPP"
  },
  {
    "name": "t _core_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _core_get_params",
    "type": "CPP"
  },
  {
    "name": "t _core_get_libctx",
    "type": "CPP"
  },
  {
    "name": "t _core_thread_start",
    "type": "CPP"
  },
  {
    "name": "t _core_new_error",
    "type": "CPP"
  },
  {
    "name": "t _core_set_error_debug",
    "type": "CPP"
  },
  {
    "name": "t _core_vset_error",
    "type": "CPP"
  },
  {
    "name": "t _core_set_error_mark",
    "type": "CPP"
  },
  {
    "name": "t _core_clear_last_error_mark",
    "type": "CPP"
  },
  {
    "name": "t _core_pop_error_to_mark",
    "type": "CPP"
  },
  {
    "name": "t _core_self_test_get_callback",
    "type": "CPP"
  },
  {
    "name": "t _rand_get_entropy",
    "type": "CPP"
  },
  {
    "name": "t _rand_get_user_entropy",
    "type": "CPP"
  },
  {
    "name": "t _rand_cleanup_entropy",
    "type": "CPP"
  },
  {
    "name": "t _rand_cleanup_user_entropy",
    "type": "CPP"
  },
  {
    "name": "t _rand_get_nonce",
    "type": "CPP"
  },
  {
    "name": "t _rand_get_user_nonce",
    "type": "CPP"
  },
  {
    "name": "t _rand_cleanup_nonce",
    "type": "CPP"
  },
  {
    "name": "t _rand_cleanup_user_nonce",
    "type": "CPP"
  },
  {
    "name": "t _ossl_provider_register_child_cb",
    "type": "CPP"
  },
  {
    "name": "t _ossl_provider_deregister_child_cb",
    "type": "CPP"
  },
  {
    "name": "t _core_provider_get0_name",
    "type": "CPP"
  },
  {
    "name": "t _core_provider_get0_provider_ctx",
    "type": "CPP"
  },
  {
    "name": "t _core_provider_get0_dispatch",
    "type": "CPP"
  },
  {
    "name": "t _core_provider_up_ref_intern",
    "type": "CPP"
  },
  {
    "name": "t _core_provider_free_intern",
    "type": "CPP"
  },
  {
    "name": "t _core_obj_add_sigid",
    "type": "CPP"
  },
  {
    "name": "t _core_obj_create",
    "type": "CPP"
  },
  {
    "name": "T _ossl_punycode_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_a2ulabel",
    "type": "CPP"
  },
  {
    "name": "T _ossl_a2ucompare",
    "type": "CPP"
  },
  {
    "name": "T _ossl_self_test_set_callback_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_self_test_set_callback_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_set_callback",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_get_callback",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_new",
    "type": "CPP"
  },
  {
    "name": "t _self_test_setparams",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_onbegin",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_onend",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_SELF_TEST_oncorrupt_byte",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_free",
    "type": "CPP"
  },
  {
    "name": "t _sa_doall",
    "type": "CPP"
  },
  {
    "name": "t _sa_free_node",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_free_leaves",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_doall",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_doall_arg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_num",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sa_set",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_fork_prepare",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_fork_parent",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_fork_child",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_lock_new",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_read_lock",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_write_lock",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_unlock",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_lock_free",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_run_once",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_init_local",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_get_local",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_set_local",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_cleanup_local",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_get_current_id",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_THREAD_compare_id",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_atomic_add",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_atomic_or",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_atomic_load",
    "type": "CPP"
  },
  {
    "name": "T _openssl_init_fork_handlers",
    "type": "CPP"
  },
  {
    "name": "T _openssl_get_fork_id",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_get_category_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_get_category_num",
    "type": "CPP"
  },
  {
    "name": "T _ossl_trace_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_set_channel",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_set_callback",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_set_prefix",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_set_suffix",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_enabled",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_begin",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_trace_end",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_issetugid",
    "type": "CPP"
  },
  {
    "name": "T _MD4_Update",
    "type": "CPP"
  },
  {
    "name": "T _md4_block_data_order",
    "type": "CPP"
  },
  {
    "name": "T _MD4_Transform",
    "type": "CPP"
  },
  {
    "name": "T _MD4_Final",
    "type": "CPP"
  },
  {
    "name": "T _MD4_Init",
    "type": "CPP"
  },
  {
    "name": "T _MD4",
    "type": "CPP"
  },
  {
    "name": "T _ossl_md5_block_asm_data_order",
    "type": "CPP"
  },
  {
    "name": "t ossl_md5_blocks_loop",
    "type": "CPP"
  },
  {
    "name": "T _MD5_Update",
    "type": "CPP"
  },
  {
    "name": "T _MD5_Transform",
    "type": "CPP"
  },
  {
    "name": "T _MD5_Final",
    "type": "CPP"
  },
  {
    "name": "T _MD5_Init",
    "type": "CPP"
  },
  {
    "name": "T _MD5",
    "type": "CPP"
  },
  {
    "name": "T _ossl_md5_sha1_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_md5_sha1_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_md5_sha1_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_md5_sha1_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _MDC2",
    "type": "CPP"
  },
  {
    "name": "T _MDC2_Init",
    "type": "CPP"
  },
  {
    "name": "T _MDC2_Update",
    "type": "CPP"
  },
  {
    "name": "t _mdc2_body",
    "type": "CPP"
  },
  {
    "name": "T _MDC2_Final",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_enc_128_kernel",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_dec_128_kernel",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_enc_192_kernel",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_dec_192_kernel",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_enc_256_kernel",
    "type": "CPP"
  },
  {
    "name": "T _unroll8_eor3_aes_gcm_dec_256_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_enc_128_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_dec_128_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_enc_192_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_dec_192_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_enc_256_kernel",
    "type": "CPP"
  },
  {
    "name": "T _aes_gcm_dec_256_kernel",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cbc128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cbc128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_init",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_setiv",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_aad",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_encrypt_ccm64",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_decrypt_ccm64",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ccm128_tag",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cfb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cfb128_1_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cfb128_8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ctr128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ctr128_encrypt_ctr32",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cts128_encrypt_block",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_nistcts128_encrypt_block",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cts128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_nistcts128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cts128_decrypt_block",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_nistcts128_decrypt_block",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_cts128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_nistcts128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_init",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_setiv",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_aad",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_encrypt_ctr32",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_decrypt_ctr32",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_finish",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_tag",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_new",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_gcm128_release",
    "type": "CPP"
  },
  {
    "name": "t _gcm_init_4bit",
    "type": "CPP"
  },
  {
    "name": "t _gcm_gmult_4bit",
    "type": "CPP"
  },
  {
    "name": "t _gcm_ghash_4bit",
    "type": "CPP"
  },
  {
    "name": "T _gcm_init_v8",
    "type": "CPP"
  },
  {
    "name": "T _gcm_gmult_v8",
    "type": "CPP"
  },
  {
    "name": "T _gcm_ghash_v8",
    "type": "CPP"
  },
  {
    "name": "t gcm_ghash_v8_4x",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_new",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_init",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_copy_ctx",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_setiv",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_aad",
    "type": "CPP"
  },
  {
    "name": "t _ocb_lookup_l",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_finish",
    "type": "CPP"
  },
  {
    "name": "t _ocb_finish",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_tag",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ocb128_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_ofb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_copy_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_aad",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _siv128_do_s2v_p",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_finish",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_set_tag",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_get_tag",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_siv128_speed",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_128_wrap",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_128_unwrap",
    "type": "CPP"
  },
  {
    "name": "t _crypto_128_unwrap_raw",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_128_wrap_pad",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_128_unwrap_pad",
    "type": "CPP"
  },
  {
    "name": "T _CRYPTO_xts128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_init",
    "type": "CPP"
  },
  {
    "name": "t _o_names_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_new_index",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_get",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_add",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_remove",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_do_all",
    "type": "CPP"
  },
  {
    "name": "t _do_all_fn",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_do_all_sorted",
    "type": "CPP"
  },
  {
    "name": "t _do_all_sorted_fn",
    "type": "CPP"
  },
  {
    "name": "t _do_all_sorted_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_NAME_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _names_lh_free_doall",
    "type": "CPP"
  },
  {
    "name": "t _name_funcs_free",
    "type": "CPP"
  },
  {
    "name": "t _obj_name_hash",
    "type": "CPP"
  },
  {
    "name": "t _obj_name_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_obj_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "t _cleanup1_doall",
    "type": "CPP"
  },
  {
    "name": "t _cleanup2_doall",
    "type": "CPP"
  },
  {
    "name": "t _cleanup3_doall",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_new_nid",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_nid2obj",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_nid2sn",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_nid2ln",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_txt2obj",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_sn2nid",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_ln2nid",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_obj2txt",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_obj2nid",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_txt2nid",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_bsearch_",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_bsearch_ex_",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_create_objects",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_create",
    "type": "CPP"
  },
  {
    "name": "t _ossl_obj_obj2nid",
    "type": "CPP"
  },
  {
    "name": "t _ossl_obj_add_object",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_length",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_get0_data",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_add_object",
    "type": "CPP"
  },
  {
    "name": "t _obj_lock_initialise_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ln_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _sn_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _obj_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _added_obj_hash",
    "type": "CPP"
  },
  {
    "name": "t _added_obj_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_OBJ_strings",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_dup",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_find_sigid_algs",
    "type": "CPP"
  },
  {
    "name": "t _ossl_obj_find_sigid_algs",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_find_sigid_by_algs",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_add_sigid",
    "type": "CPP"
  },
  {
    "name": "t _sig_sk_cmp",
    "type": "CPP"
  },
  {
    "name": "t _sigx_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_sigid_free",
    "type": "CPP"
  },
  {
    "name": "t _sid_free",
    "type": "CPP"
  },
  {
    "name": "t _sig_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _sigx_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "t _o_sig_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SIGNATURE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_SIGNATURE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_SIGNATURE",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SIGNATURE_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SIGNATURE_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_CERTID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_CERTID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTID_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTID_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_ONEREQ",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_ONEREQ",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_REQINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_REQINFO",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_REQUEST",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_REQUEST",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPBYTES_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_RESPBYTES",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_RESPBYTES",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPBYTES_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPBYTES_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPONSE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_RESPONSE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_RESPONSE",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPONSE_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPONSE_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_RESPID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_RESPID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REVOKEDINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_REVOKEDINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_REVOKEDINFO",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REVOKEDINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REVOKEDINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTSTATUS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_CERTSTATUS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_CERTSTATUS",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTSTATUS_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTSTATUS_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_SINGLERESP",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_SINGLERESP",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPDATA_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_RESPDATA",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_RESPDATA",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPDATA_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPDATA_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_BASICRESP",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_BASICRESP",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CRLID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_CRLID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_CRLID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CRLID_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CRLID_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SERVICELOC_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OCSP_SERVICELOC",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OCSP_SERVICELOC",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SERVICELOC_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SERVICELOC_free",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_add0_id",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_set1_name",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_add1_cert",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_sign",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_response_status",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_response_get1_basic",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_tbs_sigalg",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_respdata",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_produced_at",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_certs",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_id",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get1_id",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_find",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_single_get0_status",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_find_status",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_check_validity",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get0_id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_OCSP_strings",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_get1_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_get1_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_ONEREQ_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_get1_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_BASICRESP_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_get1_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_SINGLERESP_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_add1_nonce",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_add1_nonce",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_add1_nonce",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_check_nonce",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_copy_nonce",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_crlID_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_accept_responses_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_archive_cutoff_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_url_svcloc_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_sendreq_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_sendreq_bio",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_cert_to_id",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_cert_id_new",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_id_issuer_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_id_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_CERTID_dup",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_response_status_str",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_cert_status_str",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_crl_reason_str",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_REQUEST_print",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_certid_print",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPONSE_print",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_onereq_count",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_onereq_get0",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_onereq_get0_id",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_id_get0_info",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_is_signed",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_response_create",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_add1_status",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_add1_cert",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_sign_ctx",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_set_by_key",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_set_by_name",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_sign",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_set_by_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_match_ex",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_RESPID_match",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_basic_verify",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_find_signer",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_verify",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_verify_signer",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_resp_get0_signer",
    "type": "CPP"
  },
  {
    "name": "T _OCSP_request_verify",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_find_signer_sk",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_match_issuerid",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ocsp_crlid",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ocsp_acutoff",
    "type": "CPP"
  },
  {
    "name": "t _i2r_object",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_nonce_new",
    "type": "CPP"
  },
  {
    "name": "t _ocsp_nonce_free",
    "type": "CPP"
  },
  {
    "name": "t _d2i_ocsp_nonce",
    "type": "CPP"
  },
  {
    "name": "t _i2d_ocsp_nonce",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ocsp_nonce",
    "type": "CPP"
  },
  {
    "name": "t _s2i_ocsp_nocheck",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ocsp_nocheck",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ocsp_serviceloc",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509_REQ_NEW",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509_REQ_NEW",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_NETSCAPE_CERT_SEQUENCE",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "t _pkey_get_rsa",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "t _pkey_get_dsa",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_DSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_DSAparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "t _pkey_get_eckey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_ECPKParameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_ECPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_DHxparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_DHxparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_DHparams",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PUBKEY_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PUBKEY_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_PEM_strings",
    "type": "CPP"
  },
  {
    "name": "T _PEM_X509_INFO_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_X509_INFO_read_bio_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_X509_INFO_read",
    "type": "CPP"
  },
  {
    "name": "T _PEM_X509_INFO_read_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_X509_INFO_write_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_def_callback",
    "type": "CPP"
  },
  {
    "name": "T _PEM_proc_type",
    "type": "CPP"
  },
  {
    "name": "T _PEM_dek_info",
    "type": "CPP"
  },
  {
    "name": "T _PEM_ASN1_read",
    "type": "CPP"
  },
  {
    "name": "T _PEM_bytes_read_bio",
    "type": "CPP"
  },
  {
    "name": "t _pem_bytes_read_bio_flags",
    "type": "CPP"
  },
  {
    "name": "T _PEM_bytes_read_bio_secmem",
    "type": "CPP"
  },
  {
    "name": "T _PEM_ASN1_write",
    "type": "CPP"
  },
  {
    "name": "T _PEM_ASN1_write_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_do_header",
    "type": "CPP"
  },
  {
    "name": "T _PEM_get_EVP_CIPHER_INFO",
    "type": "CPP"
  },
  {
    "name": "t _load_iv",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_ex",
    "type": "CPP"
  },
  {
    "name": "t _pem_malloc",
    "type": "CPP"
  },
  {
    "name": "t _pem_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pem_check_suffix",
    "type": "CPP"
  },
  {
    "name": "t _sanitize_line",
    "type": "CPP"
  },
  {
    "name": "T _PEM_ASN1_read_bio",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS8PrivateKey_nid",
    "type": "CPP"
  },
  {
    "name": "t _do_pk8pkey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS8PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKey_nid_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "t _do_pk8pkey_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKey_nid_fp",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PKCS8PrivateKey_nid",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PKCS8PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8PrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PKCS8",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PKCS8",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS8",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PKCS8",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PKCS8_PRIV_KEY_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PUBKEY_ex",
    "type": "CPP"
  },
  {
    "name": "t _pem_read_bio_key",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PUBKEY_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PrivateKey_traditional",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_Parameters_ex",
    "type": "CPP"
  },
  {
    "name": "t _no_password_cb",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_Parameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_Parameters",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PrivateKey_ex",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _PEM_SignInit",
    "type": "CPP"
  },
  {
    "name": "T _PEM_SignUpdate",
    "type": "CPP"
  },
  {
    "name": "T _PEM_SignFinal",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_X509",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_X509",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "T _ossl_do_blob_header",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blob_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_b2i",
    "type": "CPP"
  },
  {
    "name": "t _do_b2i_key",
    "type": "CPP"
  },
  {
    "name": "t _evp_pkey_new0_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_b2i_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_b2i_RSA_after_header",
    "type": "CPP"
  },
  {
    "name": "T _ossl_b2i_DSA_after_header",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PublicKey",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PublicKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2b_PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "t _do_i2b_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2b_PublicKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_do_PVK_header",
    "type": "CPP"
  },
  {
    "name": "T _b2i_DSA_PVK_bio_ex",
    "type": "CPP"
  },
  {
    "name": "t _do_PVK_key_bio",
    "type": "CPP"
  },
  {
    "name": "T _b2i_DSA_PVK_bio",
    "type": "CPP"
  },
  {
    "name": "T _b2i_RSA_PVK_bio_ex",
    "type": "CPP"
  },
  {
    "name": "T _b2i_RSA_PVK_bio",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PVK_bio_ex",
    "type": "CPP"
  },
  {
    "name": "T _b2i_PVK_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2b_PVK_bio_ex",
    "type": "CPP"
  },
  {
    "name": "T _i2b_PVK_bio",
    "type": "CPP"
  },
  {
    "name": "t _do_i2b",
    "type": "CPP"
  },
  {
    "name": "t _derive_pvk_key",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_item_pack_safebag",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pack_p7data",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_unpack_p7data",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pack_p7encdata_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pack_p7encdata",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_unpack_p7encdata",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_decrypt_skey_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_decrypt_skey",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pack_authsafes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_unpack_authsafes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_MAC_DATA_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12_MAC_DATA",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12_MAC_DATA",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_MAC_DATA_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_MAC_DATA_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_BAGS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12_BAGS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12_BAGS",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_BAGS_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_BAGS_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12_SAFEBAG",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12_SAFEBAG",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAGS_it",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_AUTHSAFES_it",
    "type": "CPP"
  },
  {
    "name": "t _PKCS12_BAGS_adb",
    "type": "CPP"
  },
  {
    "name": "t _PKCS12_SAFEBAG_adb",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_localkeyid",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_add_keyusage",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_friendlyname_asc",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_friendlyname_utf8",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_friendlyname_uni",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_CSPName_asc",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_get_attr_gen",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_get_friendlyname",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_attrs",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_PBE_add",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_PBE_keyivgen_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_PBE_keyivgen",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_create_ex",
    "type": "CPP"
  },
  {
    "name": "t _pkcs12_add_cert_bag",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_cert",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_safe_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_key_ex",
    "type": "CPP"
  },
  {
    "name": "t _copy_bag_attr",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_safe",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_safes_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_create",
    "type": "CPP"
  },
  {
    "name": "t _pkcs12_add_bag",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_key",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_secret",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_add_safes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pbe_crypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_pbe_crypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_item_decrypt_d2i_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_item_decrypt_d2i",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_item_i2d_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_item_i2d_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_init_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_init",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_asc_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_uni_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_asc",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_utf8_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_utf8",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_key_gen_uni",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_parse",
    "type": "CPP"
  },
  {
    "name": "t _parse_bags",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_mac_present",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_get0_mac",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_gen_mac",
    "type": "CPP"
  },
  {
    "name": "t _pkcs12_gen_mac",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_verify_mac",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_set_mac",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_setup_mac",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_newpass",
    "type": "CPP"
  },
  {
    "name": "t _alg_get",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_decrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_set0_pbe_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_set0_pbe",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_attr",
    "type": "CPP"
  },
  {
    "name": "T _PKCS8_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_p8inf",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get_nid",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_safes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_type",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get_bag_nid",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_bag_type",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get0_bag_obj",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get1_cert",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_get1_crl",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create_cert",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create_crl",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create_secret",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create0_p8inf",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create0_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create_pkcs8_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS12_SAFEBAG_create_pkcs8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_asc2uni",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_uni2asc",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_utf82uni",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_uni2utf8",
    "type": "CPP"
  },
  {
    "name": "t _bmp_to_utf8",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS12_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS12_fp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_PKCS12_strings",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_free",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_NDEF",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_dup",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNED_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_SIGNED",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_SIGNED",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNED_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNED_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_SIGNER_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_SIGNER_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ISSUER_AND_SERIAL_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_ISSUER_AND_SERIAL",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_ISSUER_AND_SERIAL",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ISSUER_AND_SERIAL_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ISSUER_AND_SERIAL_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENVELOPE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_ENVELOPE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_ENVELOPE",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENVELOPE_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENVELOPE_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_RECIP_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_RECIP_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_RECIP_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_RECIP_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_RECIP_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENC_CONTENT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_ENC_CONTENT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_ENC_CONTENT",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENC_CONTENT_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENC_CONTENT_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGN_ENVELOPE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_SIGN_ENVELOPE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_SIGN_ENVELOPE",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGN_ENVELOPE_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGN_ENVELOPE_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENCRYPT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_ENCRYPT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_ENCRYPT",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENCRYPT_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ENCRYPT_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_DIGEST_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_DIGEST",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_DIGEST",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_DIGEST_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_DIGEST_free",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ATTR_SIGN_it",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ATTR_VERIFY_it",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_print_ctx",
    "type": "CPP"
  },
  {
    "name": "t _PKCS7_adb",
    "type": "CPP"
  },
  {
    "name": "t _pk7_cb",
    "type": "CPP"
  },
  {
    "name": "t _si_cb",
    "type": "CPP"
  },
  {
    "name": "t _ri_cb",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_attrib_smimecap",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_smimecap",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_simple_smimecap",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_attrib_content_type",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add0_attrib_signing_time",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add1_attrib_digest",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_type_is_other",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_octet_string",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_dataInit",
    "type": "CPP"
  },
  {
    "name": "t _pkcs7_bio_add_digest",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_dataDecode",
    "type": "CPP"
  },
  {
    "name": "t _pkcs7_decrypt_rinfo",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_dataFinal",
    "type": "CPP"
  },
  {
    "name": "t _PKCS7_find_digest",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_sign",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_dataVerify",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_signatureVerify",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_digest_from_attributes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_issuer_and_serial",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_signed_attribute",
    "type": "CPP"
  },
  {
    "name": "t _get_attribute",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_attribute",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_signed_attributes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_signed_attribute",
    "type": "CPP"
  },
  {
    "name": "t _add_attribute",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_attribute",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_content_new",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_type",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_content",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set0_type_other",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_signer",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_get0_ctx",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_certificate",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_crl",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_set",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_signature",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_resolve_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_ctx_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_ctx_get0_propq",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get_signer_info",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_set1_propq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pkcs7_ctx_propagate",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_digest",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_SIGNER_INFO_get0_algs",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_RECIP_INFO_get0_alg",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_recipient",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_RECIP_INFO_set",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_add_recipient_info",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_cert_from_signer_info",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_set_cipher",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_stream",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_bio_stream",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_PKCS7_stream",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_write_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_PKCS7_ex",
    "type": "CPP"
  },
  {
    "name": "T _SMIME_read_PKCS7",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_sign_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_sign_add_signer",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_final",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_sign",
    "type": "CPP"
  },
  {
    "name": "t _add_cipher_smcap",
    "type": "CPP"
  },
  {
    "name": "t _add_digest_smcap",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_verify",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_get0_signers",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_encrypt_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_PKCS7_strings",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_init",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_blocks",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_emit",
    "type": "CPP"
  },
  {
    "name": "t poly1305_mult",
    "type": "CPP"
  },
  {
    "name": "t poly1305_splat",
    "type": "CPP"
  },
  {
    "name": "t poly1305_blocks_neon",
    "type": "CPP"
  },
  {
    "name": "t poly1305_emit_neon",
    "type": "CPP"
  },
  {
    "name": "T _Poly1305_ctx_size",
    "type": "CPP"
  },
  {
    "name": "T _Poly1305_Init",
    "type": "CPP"
  },
  {
    "name": "T _Poly1305_Update",
    "type": "CPP"
  },
  {
    "name": "T _Poly1305_Final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_defns_free",
    "type": "CPP"
  },
  {
    "name": "t _property_defn_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_defns_new",
    "type": "CPP"
  },
  {
    "name": "t _property_defn_hash",
    "type": "CPP"
  },
  {
    "name": "t _property_defn_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prop_defn_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prop_defn_set",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ctx_global_properties_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ctx_global_properties_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ctx_global_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_global_properties_no_mirrored",
    "type": "CPP"
  },
  {
    "name": "T _ossl_global_properties_stop_mirroring",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_free",
    "type": "CPP"
  },
  {
    "name": "t _alg_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_lock_store",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_unlock_store",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_add",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_cache_flush",
    "type": "CPP"
  },
  {
    "name": "t _query_hash",
    "type": "CPP"
  },
  {
    "name": "t _query_cmp",
    "type": "CPP"
  },
  {
    "name": "t _impl_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_remove",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_remove_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _alg_cleanup_by_provider",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_do_all",
    "type": "CPP"
  },
  {
    "name": "t _alg_do_each",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_cache_flush_all",
    "type": "CPP"
  },
  {
    "name": "t _impl_cache_flush_alg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_cache_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_method_store_cache_set",
    "type": "CPP"
  },
  {
    "name": "t _impl_cache_free",
    "type": "CPP"
  },
  {
    "name": "t _ossl_method_cache_flush_alg",
    "type": "CPP"
  },
  {
    "name": "t _impl_cache_flush_one_alg",
    "type": "CPP"
  },
  {
    "name": "t _impl_cache_flush_cache",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_PROP_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_parse_property",
    "type": "CPP"
  },
  {
    "name": "t _pd_compare",
    "type": "CPP"
  },
  {
    "name": "t _parse_name",
    "type": "CPP"
  },
  {
    "name": "t _parse_value",
    "type": "CPP"
  },
  {
    "name": "t _stack_to_property_list",
    "type": "CPP"
  },
  {
    "name": "t _pd_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_parse_query",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_match_count",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_merge",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_parse_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_list_to_string",
    "type": "CPP"
  },
  {
    "name": "t _put_str",
    "type": "CPP"
  },
  {
    "name": "t _parse_number",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_find_property",
    "type": "CPP"
  },
  {
    "name": "t _property_idx_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_get_type",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_get_string_value",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_get_number_value",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_has_optional",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_string_data_free",
    "type": "CPP"
  },
  {
    "name": "t _property_table_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_string_data_new",
    "type": "CPP"
  },
  {
    "name": "t _property_hash",
    "type": "CPP"
  },
  {
    "name": "t _property_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_name",
    "type": "CPP"
  },
  {
    "name": "t _ossl_property_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_name_str",
    "type": "CPP"
  },
  {
    "name": "t _ossl_property_str",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_value",
    "type": "CPP"
  },
  {
    "name": "T _ossl_property_value_str",
    "type": "CPP"
  },
  {
    "name": "t _property_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_get_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_get_user_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_cleanup_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_cleanup_user_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_get_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_get_user_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_cleanup_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_cleanup_user_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_RAND_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set_rand_method",
    "type": "CPP"
  },
  {
    "name": "T _RAND_keep_random_devices_open",
    "type": "CPP"
  },
  {
    "name": "t _do_rand_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _RAND_poll",
    "type": "CPP"
  },
  {
    "name": "T _RAND_get_rand_method",
    "type": "CPP"
  },
  {
    "name": "T _RAND_seed",
    "type": "CPP"
  },
  {
    "name": "t _rand_set_rand_method_internal",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set_rand_engine",
    "type": "CPP"
  },
  {
    "name": "T _RAND_get0_primary",
    "type": "CPP"
  },
  {
    "name": "T _RAND_add",
    "type": "CPP"
  },
  {
    "name": "T _RAND_pseudo_bytes",
    "type": "CPP"
  },
  {
    "name": "T _RAND_status",
    "type": "CPP"
  },
  {
    "name": "T _RAND_priv_bytes_ex",
    "type": "CPP"
  },
  {
    "name": "T _RAND_get0_private",
    "type": "CPP"
  },
  {
    "name": "T _RAND_priv_bytes",
    "type": "CPP"
  },
  {
    "name": "T _RAND_bytes_ex",
    "type": "CPP"
  },
  {
    "name": "T _RAND_get0_public",
    "type": "CPP"
  },
  {
    "name": "T _RAND_bytes",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_get0_seed_noncreating",
    "type": "CPP"
  },
  {
    "name": "t _rand_new_seed",
    "type": "CPP"
  },
  {
    "name": "t _rand_new_drbg",
    "type": "CPP"
  },
  {
    "name": "t _rand_delete_thread_state",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set0_public",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set0_private",
    "type": "CPP"
  },
  {
    "name": "T _ossl_random_add_conf_module",
    "type": "CPP"
  },
  {
    "name": "t _random_conf_init",
    "type": "CPP"
  },
  {
    "name": "t _random_conf_deinit",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set_DRBG_type",
    "type": "CPP"
  },
  {
    "name": "t _random_set_string",
    "type": "CPP"
  },
  {
    "name": "T _RAND_set_seed_source_type",
    "type": "CPP"
  },
  {
    "name": "t _drbg_seed",
    "type": "CPP"
  },
  {
    "name": "t _drbg_bytes",
    "type": "CPP"
  },
  {
    "name": "t _drbg_add",
    "type": "CPP"
  },
  {
    "name": "t _drbg_status",
    "type": "CPP"
  },
  {
    "name": "T _RAND_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_attach",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_buffer",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_detach",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_reattach",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_entropy_available",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_entropy_needed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_bytes_needed",
    "type": "CPP"
  },
  {
    "name": "t _rand_pool_grow",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_bytes_remaining",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_add",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_add_begin",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_add_end",
    "type": "CPP"
  },
  {
    "name": "T _RAND_load_file",
    "type": "CPP"
  },
  {
    "name": "T _RAND_write_file",
    "type": "CPP"
  },
  {
    "name": "T _RAND_file_name",
    "type": "CPP"
  },
  {
    "name": "T _RC2_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC2_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC2_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC2_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC2_set_key",
    "type": "CPP"
  },
  {
    "name": "T _RC2_cfb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC2_ofb64_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RC4",
    "type": "CPP"
  },
  {
    "name": "T _RC4_options",
    "type": "CPP"
  },
  {
    "name": "T _RC4_set_key",
    "type": "CPP"
  },
  {
    "name": "T _RIPEMD160_Update",
    "type": "CPP"
  },
  {
    "name": "T _ripemd160_block_data_order",
    "type": "CPP"
  },
  {
    "name": "T _RIPEMD160_Transform",
    "type": "CPP"
  },
  {
    "name": "T _RIPEMD160_Final",
    "type": "CPP"
  },
  {
    "name": "T _RIPEMD160_Init",
    "type": "CPP"
  },
  {
    "name": "T _RIPEMD160",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_create",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_ctx_to_pss_string",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_to_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_get_param",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pub_decode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pub_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pub_cmp",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pub_print",
    "type": "CPP"
  },
  {
    "name": "t _rsa_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_priv_print",
    "type": "CPP"
  },
  {
    "name": "t _int_rsa_size",
    "type": "CPP"
  },
  {
    "name": "t _rsa_bits",
    "type": "CPP"
  },
  {
    "name": "t _rsa_security_bits",
    "type": "CPP"
  },
  {
    "name": "t _rsa_sig_print",
    "type": "CPP"
  },
  {
    "name": "t _int_rsa_free",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _old_rsa_priv_decode",
    "type": "CPP"
  },
  {
    "name": "t _old_rsa_priv_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_item_verify",
    "type": "CPP"
  },
  {
    "name": "t _rsa_item_sign",
    "type": "CPP"
  },
  {
    "name": "t _rsa_sig_info_set",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_check",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_dirty_cnt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pkey_copy",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pss_pkey_export_to",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pss_pkey_import_from",
    "type": "CPP"
  },
  {
    "name": "t _rsa_param_encode",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_print",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pss_param_print",
    "type": "CPP"
  },
  {
    "name": "t _rsa_int_export_to",
    "type": "CPP"
  },
  {
    "name": "t _rsa_int_import_from",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PRIME_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _RSAPrivateKey_it",
    "type": "CPP"
  },
  {
    "name": "T _RSAPublicKey_it",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PSS_PARAMS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSA_PSS_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSA_PSS_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PSS_PARAMS_new",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PSS_PARAMS_free",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PSS_PARAMS_dup",
    "type": "CPP"
  },
  {
    "name": "T _RSA_OAEP_PARAMS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSA_OAEP_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSA_OAEP_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _RSA_OAEP_PARAMS_new",
    "type": "CPP"
  },
  {
    "name": "T _RSA_OAEP_PARAMS_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPublicKey",
    "type": "CPP"
  },
  {
    "name": "T _RSAPublicKey_dup",
    "type": "CPP"
  },
  {
    "name": "T _RSAPrivateKey_dup",
    "type": "CPP"
  },
  {
    "name": "t _rsa_cb",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pss_cb",
    "type": "CPP"
  },
  {
    "name": "t _rsa_oaep_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_fromdata",
    "type": "CPP"
  },
  {
    "name": "t _collect_numbers",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_todata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_fromdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_is_foreign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_get_param_unverified",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_param_decode",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_key_from_pkcs8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_validate_public",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_validate_private",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_validate_pairwise",
    "type": "CPP"
  },
  {
    "name": "t _rsa_validate_keypair_multiprime",
    "type": "CPP"
  },
  {
    "name": "T _RSA_check_key",
    "type": "CPP"
  },
  {
    "name": "T _RSA_check_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _RSA_bits",
    "type": "CPP"
  },
  {
    "name": "T _RSA_size",
    "type": "CPP"
  },
  {
    "name": "T _RSA_public_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RSA_private_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _RSA_private_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _RSA_public_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _RSA_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_blinding_off",
    "type": "CPP"
  },
  {
    "name": "T _RSA_blinding_on",
    "type": "CPP"
  },
  {
    "name": "T _RSA_setup_blinding",
    "type": "CPP"
  },
  {
    "name": "T _RSA_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_RSA_strings",
    "type": "CPP"
  },
  {
    "name": "T _RSA_generate_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _RSA_generate_multi_prime_key",
    "type": "CPP"
  },
  {
    "name": "T _RSA_new",
    "type": "CPP"
  },
  {
    "name": "t _rsa_new_intern",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get_method",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set_method",
    "type": "CPP"
  },
  {
    "name": "T _RSA_new_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_new_with_ctx",
    "type": "CPP"
  },
  {
    "name": "T _RSA_free",
    "type": "CPP"
  },
  {
    "name": "T _RSA_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ifc_ffc_compute_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _RSA_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set0_key",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set0_factors",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set0_crt_params",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set0_multi_prime_params",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_key",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_factors",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get_multi_prime_extra_count",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_multi_prime_factors",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_crt_params",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_multi_prime_crt_params",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_n",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_e",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_d",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_p",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_q",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_dmp1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_dmq1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_iqmp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_pss_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_set0_pss_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_get0_pss_params_30",
    "type": "CPP"
  },
  {
    "name": "T _RSA_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_test_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get_version",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _RSA_pkey_ctx_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_set0_all_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_get0_all_params",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_padding",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_padding",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_keygen_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_keygen_md_name",
    "type": "CPP"
  },
  {
    "name": "t _int_set_rsa_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_oaep_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_oaep_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_oaep_md_name",
    "type": "CPP"
  },
  {
    "name": "t _int_get_rsa_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_oaep_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_mgf1_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_mgf1_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_mgf1_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_keygen_mgf1_md_name",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_mgf1_md",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set0_rsa_oaep_label",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get0_rsa_oaep_label",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_saltlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_get_rsa_pss_saltlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_pss_keygen_saltlen",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_keygen_bits",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_keygen_pubexp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set1_rsa_keygen_pubexp",
    "type": "CPP"
  },
  {
    "name": "T _EVP_PKEY_CTX_set_rsa_keygen_primes",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_dup",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set1_name",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set0_app_data",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_pub_enc",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_pub_enc",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_pub_dec",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_pub_dec",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_priv_enc",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_priv_enc",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_priv_dec",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_priv_dec",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_bn_mod_exp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_sign",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_sign",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_keygen",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_keygen",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_get_multi_prime_keygen",
    "type": "CPP"
  },
  {
    "name": "T _RSA_meth_set_multi_prime_keygen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_multip_info_free_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_multip_info_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_multip_info_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_multip_calc_product",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_multip_cap",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_none",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_none",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_OAEP",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_padding_add_PKCS1_OAEP_mgf1_ex",
    "type": "CPP"
  },
  {
    "name": "T _PKCS1_MGF1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_OAEP_mgf1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_PKCS1_OAEP",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_PKCS1_OAEP_mgf1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _RSA_get_default_method",
    "type": "CPP"
  },
  {
    "name": "T _RSA_PKCS1_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _RSA_null_method",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_public_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_public_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_private_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_private_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_mod_exp",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_ossl_finish",
    "type": "CPP"
  },
  {
    "name": "t _rsa_get_blinding",
    "type": "CPP"
  },
  {
    "name": "t _rsa_blinding_convert",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_type_1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_PKCS1_type_1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_padding_add_PKCS1_type_2_ex",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_type_2",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_PKCS1_type_2",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_padding_check_PKCS1_type_2_TLS",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pkey_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_pkey_method",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_init",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_copy",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_keygen",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_sign",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_verify",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_verifyrecover",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _pkey_rsa_ctrl_str",
    "type": "CPP"
  },
  {
    "name": "t _setup_tbuf",
    "type": "CPP"
  },
  {
    "name": "t _check_padding_md",
    "type": "CPP"
  },
  {
    "name": "t _pkey_pss_init",
    "type": "CPP"
  },
  {
    "name": "T _RSA_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _RSA_print",
    "type": "CPP"
  },
  {
    "name": "T _RSA_verify_PKCS1_PSS",
    "type": "CPP"
  },
  {
    "name": "T _RSA_verify_PKCS1_PSS_mgf1",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_PSS",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_PKCS1_PSS_mgf1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_defaults",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_is_unrestricted",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_hashalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_maskgenalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_maskgenhashalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_saltlen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_set_trailerfield",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_hashalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_maskgenalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_maskgenhashalg",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_saltlen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_pss_params_30_trailerfield",
    "type": "CPP"
  },
  {
    "name": "T _RSA_sign_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "T _RSA_verify_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_oaeppss_md2nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_oaeppss_nid2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_mgf_nid2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_digestinfo_encoding",
    "type": "CPP"
  },
  {
    "name": "T _RSA_sign",
    "type": "CPP"
  },
  {
    "name": "t _encode_pkcs1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_verify",
    "type": "CPP"
  },
  {
    "name": "T _RSA_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_crt_components",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_prime_factor_range",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_prime_factor",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_private_exponent",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_get_lcm",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_public_exponent",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_pminusq_diff",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_check_public",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_check_private",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_check_keypair",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_fips186_4_gen_prob_primes",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_validate_strength",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_derive_params_from_pq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_generate_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_sp800_56b_pairwise_test",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_add_X931",
    "type": "CPP"
  },
  {
    "name": "T _RSA_padding_check_X931",
    "type": "CPP"
  },
  {
    "name": "T _RSA_X931_hash_id",
    "type": "CPP"
  },
  {
    "name": "T _RSA_X931_derive_ex",
    "type": "CPP"
  },
  {
    "name": "T _RSA_X931_generate_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _SEED_set_key",
    "type": "CPP"
  },
  {
    "name": "T _SEED_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _SEED_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _SEED_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _SEED_cfb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _SEED_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _SEED_ofb128_encrypt",
    "type": "CPP"
  },
  {
    "name": "t iotas",
    "type": "CPP"
  },
  {
    "name": "t KeccakF1600_int",
    "type": "CPP"
  },
  {
    "name": "t KeccakF1600",
    "type": "CPP"
  },
  {
    "name": "T _SHA3_absorb",
    "type": "CPP"
  },
  {
    "name": "T _SHA3_squeeze",
    "type": "CPP"
  },
  {
    "name": "t KeccakF1600_ce",
    "type": "CPP"
  },
  {
    "name": "t KeccakF1600_cext",
    "type": "CPP"
  },
  {
    "name": "T _SHA3_absorb_cext",
    "type": "CPP"
  },
  {
    "name": "T _SHA3_squeeze_cext",
    "type": "CPP"
  },
  {
    "name": "T _sha1_block_data_order",
    "type": "CPP"
  },
  {
    "name": "t sha1_block_armv8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha1",
    "type": "CPP"
  },
  {
    "name": "T _SHA1",
    "type": "CPP"
  },
  {
    "name": "T _SHA224",
    "type": "CPP"
  },
  {
    "name": "T _SHA256",
    "type": "CPP"
  },
  {
    "name": "T _SHA384",
    "type": "CPP"
  },
  {
    "name": "T _SHA512",
    "type": "CPP"
  },
  {
    "name": "T _SHA1_Update",
    "type": "CPP"
  },
  {
    "name": "T _SHA1_Transform",
    "type": "CPP"
  },
  {
    "name": "T _SHA1_Final",
    "type": "CPP"
  },
  {
    "name": "T _SHA1_Init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha1_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _sha256_block_data_order",
    "type": "CPP"
  },
  {
    "name": "t sha256_block_armv8",
    "type": "CPP"
  },
  {
    "name": "t _sha256_block_neon",
    "type": "CPP"
  },
  {
    "name": "T _SHA224_Init",
    "type": "CPP"
  },
  {
    "name": "T _SHA256_Init",
    "type": "CPP"
  },
  {
    "name": "T _SHA224_Update",
    "type": "CPP"
  },
  {
    "name": "T _SHA256_Update",
    "type": "CPP"
  },
  {
    "name": "T _SHA224_Final",
    "type": "CPP"
  },
  {
    "name": "T _SHA256_Final",
    "type": "CPP"
  },
  {
    "name": "T _SHA256_Transform",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha3_reset",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha3_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_keccak_kmac_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha3_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sha3_final",
    "type": "CPP"
  },
  {
    "name": "T _sha512_block_data_order",
    "type": "CPP"
  },
  {
    "name": "t sha512_block_armv8",
    "type": "CPP"
  },
  {
    "name": "T _sha512_224_init",
    "type": "CPP"
  },
  {
    "name": "T _sha512_256_init",
    "type": "CPP"
  },
  {
    "name": "T _SHA384_Init",
    "type": "CPP"
  },
  {
    "name": "T _SHA512_Init",
    "type": "CPP"
  },
  {
    "name": "T _SHA512_Final",
    "type": "CPP"
  },
  {
    "name": "T _SHA384_Final",
    "type": "CPP"
  },
  {
    "name": "T _SHA512_Update",
    "type": "CPP"
  },
  {
    "name": "T _SHA384_Update",
    "type": "CPP"
  },
  {
    "name": "T _SHA512_Transform",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_ctx_size",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_hash_size",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_set_hash_size",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_Init",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_Update",
    "type": "CPP"
  },
  {
    "name": "T _SipHash_Final",
    "type": "CPP"
  },
  {
    "name": "T _SM2_Ciphertext_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SM2_Ciphertext",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SM2_Ciphertext",
    "type": "CPP"
  },
  {
    "name": "T _SM2_Ciphertext_new",
    "type": "CPP"
  },
  {
    "name": "T _SM2_Ciphertext_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_plaintext_size",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_ciphertext_size",
    "type": "CPP"
  },
  {
    "name": "t _ec_field_size",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_SM2_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_key_private_check",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_compute_z_digest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_do_sign",
    "type": "CPP"
  },
  {
    "name": "t _sm2_compute_msg_hash",
    "type": "CPP"
  },
  {
    "name": "t _sm2_sig_gen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_do_verify",
    "type": "CPP"
  },
  {
    "name": "t _sm2_sig_verify",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_internal_sign",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm2_internal_verify",
    "type": "CPP"
  },
  {
    "name": "T _EVP_sm3",
    "type": "CPP"
  },
  {
    "name": "t _sm3_int_init",
    "type": "CPP"
  },
  {
    "name": "t _sm3_int_update",
    "type": "CPP"
  },
  {
    "name": "t _sm3_int_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_hwsm3_block_data_order",
    "type": "CPP"
  },
  {
    "name": "t .Tj",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm3_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm3_block_data_order",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm3_transform",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm3_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm3_init",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _sm4_v8_ctr32_encrypt_blocks",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm4_set_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm4_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_sm4_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _vpsm4_consts",
    "type": "CPP"
  },
  {
    "name": "t _vpsm4_set_key",
    "type": "CPP"
  },
  {
    "name": "t _vpsm4_enc_4blks",
    "type": "CPP"
  },
  {
    "name": "t _vpsm4_enc_8blks",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_set_encrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_set_decrypt_key",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_ecb_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_cbc_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _vpsm4_ctr32_encrypt_blocks",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_u_ex",
    "type": "CPP"
  },
  {
    "name": "t _srp_Calc_xy",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_u",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_server_key",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_B_ex",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_B",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_x_ex",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_x",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_A",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_client_key_ex",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_client_key",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Verify_B_mod_N",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Verify_A_mod_N",
    "type": "CPP"
  },
  {
    "name": "T _SRP_check_known_gN_param",
    "type": "CPP"
  },
  {
    "name": "T _SRP_get_default_gN",
    "type": "CPP"
  },
  {
    "name": "T _SRP_user_pwd_free",
    "type": "CPP"
  },
  {
    "name": "T _SRP_user_pwd_new",
    "type": "CPP"
  },
  {
    "name": "T _SRP_user_pwd_set_gN",
    "type": "CPP"
  },
  {
    "name": "T _SRP_user_pwd_set1_ids",
    "type": "CPP"
  },
  {
    "name": "T _SRP_user_pwd_set0_sv",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_new",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_free",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_init",
    "type": "CPP"
  },
  {
    "name": "t _SRP_gN_place_bn",
    "type": "CPP"
  },
  {
    "name": "t _SRP_get_gN_by_id",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_add0_user",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_get_by_user",
    "type": "CPP"
  },
  {
    "name": "t _find_user",
    "type": "CPP"
  },
  {
    "name": "T _SRP_VBASE_get1_by_user",
    "type": "CPP"
  },
  {
    "name": "T _SRP_create_verifier_ex",
    "type": "CPP"
  },
  {
    "name": "t _t_fromb64",
    "type": "CPP"
  },
  {
    "name": "T _SRP_create_verifier_BN_ex",
    "type": "CPP"
  },
  {
    "name": "t _t_tob64",
    "type": "CPP"
  },
  {
    "name": "T _SRP_create_verifier",
    "type": "CPP"
  },
  {
    "name": "T _SRP_create_verifier_BN",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_set_cmp_func",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_dup",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_free",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_deep_copy",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_new_null",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_new_reserve",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_new",
    "type": "CPP"
  },
  {
    "name": "t _sk_reserve",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_reserve",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_insert",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_delete_ptr",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_delete",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_find",
    "type": "CPP"
  },
  {
    "name": "t _internal_find",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_find_ex",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_find_all",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_push",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_unshift",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_shift",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_pop",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_zero",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_pop_free",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_num",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_value",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_set",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_sort",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_sk_is_sorted",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_OSSL_STORE_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_cleanup_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_open_ex",
    "type": "CPP"
  },
  {
    "name": "t _loader_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ossl_store_close_it",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_open",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_vctrl",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_expect",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_find",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_load",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_eof",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_error",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_close",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_NAME",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_set0_NAME_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_CERT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_new_CRL",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_data",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_NAME",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_NAME",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_NAME_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_NAME_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_PARAMS",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_PKEY",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_CERT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_CERT",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get0_CRL",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_get1_CRL",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_supports_search",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_by_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_by_issuer_serial",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_by_key_fingerprint",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_by_alias",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get_type",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get0_serial",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get0_bytes",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get0_string",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_SEARCH_get0_digest",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_attach",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_free",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_fetch",
    "type": "CPP"
  },
  {
    "name": "t _inner_loader_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_loader_store_cache_flush",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_loader_store_remove_all_provided",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_get0_provider",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_get0_properties",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_loader_get_number",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_get0_description",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_is_a",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_do_all_provided",
    "type": "CPP"
  },
  {
    "name": "t _do_one",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_names_do_all",
    "type": "CPP"
  },
  {
    "name": "t _get_tmp_loader_store",
    "type": "CPP"
  },
  {
    "name": "t _reserve_loader_store",
    "type": "CPP"
  },
  {
    "name": "t _unreserve_loader_store",
    "type": "CPP"
  },
  {
    "name": "t _get_loader_from_store",
    "type": "CPP"
  },
  {
    "name": "t _put_loader_in_store",
    "type": "CPP"
  },
  {
    "name": "t _construct_loader",
    "type": "CPP"
  },
  {
    "name": "t _destruct_loader",
    "type": "CPP"
  },
  {
    "name": "t _up_ref_loader",
    "type": "CPP"
  },
  {
    "name": "t _free_loader",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_new",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_get0_engine",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_get0_scheme",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_open",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_open_ex",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_attach",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_expect",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_find",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_load",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_eof",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_error",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_LOADER_set_close",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_register_loader_int",
    "type": "CPP"
  },
  {
    "name": "t _do_registry_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_register_loader",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_get0_loader_int",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_unregister_loader_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_unregister_loader",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_destroy_loaders_int",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_do_all_loaders",
    "type": "CPP"
  },
  {
    "name": "t _store_loader_hash",
    "type": "CPP"
  },
  {
    "name": "t _store_loader_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_store_handle_load_result",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_STORE_INFO_type_string",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_MSG_IMPRINT",
    "type": "CPP"
  },
  {
    "name": "t _TS_MSG_IMPRINT_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_MSG_IMPRINT",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_MSG_IMPRINT_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_MSG_IMPRINT_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_MSG_IMPRINT_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_MSG_IMPRINT_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_REQ",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_REQ",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_REQ_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_REQ_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_REQ_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_REQ_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_ACCURACY",
    "type": "CPP"
  },
  {
    "name": "t _TS_ACCURACY_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_ACCURACY",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_TST_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_TST_INFO",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_TST_INFO_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_TST_INFO_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_TST_INFO_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_TST_INFO_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_STATUS_INFO",
    "type": "CPP"
  },
  {
    "name": "t _TS_STATUS_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_STATUS_INFO",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_RESP",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_RESP",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_RESP_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_RESP_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_TS_RESP_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_TS_RESP_fp",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_to_TS_TST_INFO",
    "type": "CPP"
  },
  {
    "name": "t _ts_resp_cb",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_load_cert",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_load_certs",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_load_key",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_get_tsa_section",
    "type": "CPP"
  },
  {
    "name": "t _ts_CONF_lookup_fail",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_serial",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_crypto_device",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_default_engine",
    "type": "CPP"
  },
  {
    "name": "t _ts_CONF_invalid",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_signer_cert",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_certs",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_signer_key",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_signer_digest",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_def_policy",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_policies",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_digests",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_accuracy",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_clock_precision_digits",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_ordering",
    "type": "CPP"
  },
  {
    "name": "t _ts_CONF_add_flag",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_tsa_name",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_ess_cert_id_chain",
    "type": "CPP"
  },
  {
    "name": "T _TS_CONF_set_ess_cert_id_digest",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_TS_strings",
    "type": "CPP"
  },
  {
    "name": "T _TS_ASN1_INTEGER_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_OBJ_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_ext_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_X509_ALGOR_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_set_version",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_version",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_set_msg_imprint",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_msg_imprint",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_set_algo",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_get_algo",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_set_msg",
    "type": "CPP"
  },
  {
    "name": "T _TS_MSG_IMPRINT_get_msg",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_set_policy_id",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_policy_id",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_set_nonce",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_nonce",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_set_cert_req",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_cert_req",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_exts",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_ext_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_get_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_print_bio",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _def_serial_cb",
    "type": "CPP"
  },
  {
    "name": "t _def_time_cb",
    "type": "CPP"
  },
  {
    "name": "t _def_extension_cb",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_signer_cert",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_signer_key",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_signer_digest",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_def_policy",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_certs",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_add_policy",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_add_md",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_accuracy",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_add_flags",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_serial_cb",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_time_cb",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_extension_cb",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_status_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_status_info_cond",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_add_failure_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_get_request",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_get_tst_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_clock_precision_digits",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_create_response",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_CTX_set_ess_cert_id_digest",
    "type": "CPP"
  },
  {
    "name": "t _ossl_ess_add1_signing_cert_v2",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_set_status_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_get_status_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_set_tst_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_get_token",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_get_tst_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_version",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_version",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_policy_id",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_policy_id",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_msg_imprint",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_msg_imprint",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_serial",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_serial",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_time",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_time",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_accuracy",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_accuracy",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_set_seconds",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_get_seconds",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_set_millis",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_get_millis",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_set_micros",
    "type": "CPP"
  },
  {
    "name": "T _TS_ACCURACY_get_micros",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_ordering",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ordering",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_nonce",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_nonce",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_set_tsa",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_tsa",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_exts",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_ext_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _TS_TST_INFO_get_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_set_status",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_get0_status",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_get0_text",
    "type": "CPP"
  },
  {
    "name": "T _TS_STATUS_INFO_get0_failure_info",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_verify_signature",
    "type": "CPP"
  },
  {
    "name": "t _ts_verify_cert",
    "type": "CPP"
  },
  {
    "name": "t _ts_check_signing_certs",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_verify_response",
    "type": "CPP"
  },
  {
    "name": "t _int_ts_RESP_verify_token",
    "type": "CPP"
  },
  {
    "name": "T _TS_RESP_verify_token",
    "type": "CPP"
  },
  {
    "name": "t _ts_check_imprints",
    "type": "CPP"
  },
  {
    "name": "t _ts_check_signer_name",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_add_flags",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_set_data",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_set_store",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_set_certs",
    "type": "CPP"
  },
  {
    "name": "T _TS_VERIFY_CTX_set_imprint",
    "type": "CPP"
  },
  {
    "name": "T _TS_REQ_to_TS_VERIFY_CTX",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_read",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_get_by_index",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_create_index",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_write",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_insert",
    "type": "CPP"
  },
  {
    "name": "T _TXT_DB_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_UI_strings",
    "type": "CPP"
  },
  {
    "name": "T _UI_new",
    "type": "CPP"
  },
  {
    "name": "T _UI_new_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_free",
    "type": "CPP"
  },
  {
    "name": "t _free_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_input_string",
    "type": "CPP"
  },
  {
    "name": "t _general_allocate_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_input_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_verify_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_verify_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_input_boolean",
    "type": "CPP"
  },
  {
    "name": "t _general_allocate_boolean",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_input_boolean",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_info_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_info_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_error_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_error_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_construct_prompt",
    "type": "CPP"
  },
  {
    "name": "T _UI_add_user_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_dup_user_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_user_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_result",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_result_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_result_length",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_result_string_length",
    "type": "CPP"
  },
  {
    "name": "T _UI_process",
    "type": "CPP"
  },
  {
    "name": "t _print_error",
    "type": "CPP"
  },
  {
    "name": "T _UI_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _UI_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_set_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_create_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_destroy_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_opener",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_writer",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_flusher",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_reader",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_closer",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_data_duplicator",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_prompt_constructor",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_opener",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_writer",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_flusher",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_reader",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_closer",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_prompt_constructor",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_data_duplicator",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_data_destructor",
    "type": "CPP"
  },
  {
    "name": "T _UI_method_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_string_type",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_input_flags",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_output_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_action_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_get0_test_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_result_minsize",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_result_maxsize",
    "type": "CPP"
  },
  {
    "name": "T _UI_set_result",
    "type": "CPP"
  },
  {
    "name": "T _UI_set_result_ex",
    "type": "CPP"
  },
  {
    "name": "t _general_allocate_prompt",
    "type": "CPP"
  },
  {
    "name": "T _UI_null",
    "type": "CPP"
  },
  {
    "name": "T _UI_OpenSSL",
    "type": "CPP"
  },
  {
    "name": "T _UI_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _UI_get_default_method",
    "type": "CPP"
  },
  {
    "name": "t _open_console",
    "type": "CPP"
  },
  {
    "name": "t _write_string",
    "type": "CPP"
  },
  {
    "name": "t _read_string",
    "type": "CPP"
  },
  {
    "name": "t _close_console",
    "type": "CPP"
  },
  {
    "name": "t _read_string_inner",
    "type": "CPP"
  },
  {
    "name": "t _recsig",
    "type": "CPP"
  },
  {
    "name": "T _UI_UTIL_read_pw_string",
    "type": "CPP"
  },
  {
    "name": "T _UI_UTIL_read_pw",
    "type": "CPP"
  },
  {
    "name": "T _UI_UTIL_wrap_read_pem_callback",
    "type": "CPP"
  },
  {
    "name": "t _ui_open",
    "type": "CPP"
  },
  {
    "name": "t _ui_read",
    "type": "CPP"
  },
  {
    "name": "t _ui_write",
    "type": "CPP"
  },
  {
    "name": "t _ui_close",
    "type": "CPP"
  },
  {
    "name": "t _ui_method_data_index_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ui_new_method_data",
    "type": "CPP"
  },
  {
    "name": "t _ui_dup_method_data",
    "type": "CPP"
  },
  {
    "name": "t _ui_free_method_data",
    "type": "CPP"
  },
  {
    "name": "T _whirlpool_block",
    "type": "CPP"
  },
  {
    "name": "T _WHIRLPOOL_Init",
    "type": "CPP"
  },
  {
    "name": "T _WHIRLPOOL_Update",
    "type": "CPP"
  },
  {
    "name": "T _WHIRLPOOL_BitUpdate",
    "type": "CPP"
  },
  {
    "name": "T _WHIRLPOOL_Final",
    "type": "CPP"
  },
  {
    "name": "T _WHIRLPOOL",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_hash_dir",
    "type": "CPP"
  },
  {
    "name": "t _new_dir",
    "type": "CPP"
  },
  {
    "name": "t _free_dir",
    "type": "CPP"
  },
  {
    "name": "t _dir_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _get_cert_by_subject",
    "type": "CPP"
  },
  {
    "name": "t _get_cert_by_subject_ex",
    "type": "CPP"
  },
  {
    "name": "t _by_dir_entry_free",
    "type": "CPP"
  },
  {
    "name": "t _by_dir_hash_free",
    "type": "CPP"
  },
  {
    "name": "t _add_cert_dir",
    "type": "CPP"
  },
  {
    "name": "t _by_dir_hash_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_file",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_cert_file_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_cert_file",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_crl_file",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_cert_crl_file_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_cert_crl_file",
    "type": "CPP"
  },
  {
    "name": "t _by_file_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _by_file_ctrl_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_store",
    "type": "CPP"
  },
  {
    "name": "t _by_store_free",
    "type": "CPP"
  },
  {
    "name": "t _by_store_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _by_store_subject",
    "type": "CPP"
  },
  {
    "name": "t _by_store_subject_ex",
    "type": "CPP"
  },
  {
    "name": "t _by_store_ctrl_ex",
    "type": "CPP"
  },
  {
    "name": "t _free_uri",
    "type": "CPP"
  },
  {
    "name": "t _cache_objects",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_cache_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_cache_set",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_cache_find_data",
    "type": "CPP"
  },
  {
    "name": "t _policy_data_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_data_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_data_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_tree_level_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_tree_get0_level",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_tree_get0_policies",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_tree_get0_user_policies",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_level_node_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_level_get0_node",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_node_get0_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_node_get0_qualifiers",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_node_get0_parent",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_cache_set_mapping",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_node_cmp_new",
    "type": "CPP"
  },
  {
    "name": "t _node_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_tree_find_sk",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_level_find_node",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_level_add_node",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_node_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_policy_node_match",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_tree_free",
    "type": "CPP"
  },
  {
    "name": "t _exnode_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_policy_check",
    "type": "CPP"
  },
  {
    "name": "t _tree_add_unmatched",
    "type": "CPP"
  },
  {
    "name": "t _tree_add_auth_node",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _X509_print_ex_fp",
    "type": "CPP"
  },
  {
    "name": "T _X509_print_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_signature_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_signature_dump",
    "type": "CPP"
  },
  {
    "name": "T _X509_aux_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_ocspid_print",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_print_ex_brief",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_print_verify_cb",
    "type": "CPP"
  },
  {
    "name": "t _print_certs",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressRange_it",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressOrRange_it",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressChoice_it",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressFamily_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_IPAddressRange",
    "type": "CPP"
  },
  {
    "name": "T _i2d_IPAddressRange",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressRange_new",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressRange_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_IPAddressOrRange",
    "type": "CPP"
  },
  {
    "name": "T _i2d_IPAddressOrRange",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressOrRange_new",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressOrRange_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_IPAddressChoice",
    "type": "CPP"
  },
  {
    "name": "T _i2d_IPAddressChoice",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressChoice_new",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressChoice_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_IPAddressFamily",
    "type": "CPP"
  },
  {
    "name": "T _i2d_IPAddressFamily",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressFamily_new",
    "type": "CPP"
  },
  {
    "name": "T _IPAddressFamily_free",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_get_afi",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_add_inherit",
    "type": "CPP"
  },
  {
    "name": "t _make_IPAddressFamily",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_add_prefix",
    "type": "CPP"
  },
  {
    "name": "t _make_prefix_or_range",
    "type": "CPP"
  },
  {
    "name": "t _make_addressPrefix",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_add_range",
    "type": "CPP"
  },
  {
    "name": "t _make_addressRange",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_get_range",
    "type": "CPP"
  },
  {
    "name": "t _extract_min_max",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_is_canonical",
    "type": "CPP"
  },
  {
    "name": "t _IPAddressFamily_cmp",
    "type": "CPP"
  },
  {
    "name": "t _range_should_be_prefix",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_canonize",
    "type": "CPP"
  },
  {
    "name": "t _IPAddrBlocks_it",
    "type": "CPP"
  },
  {
    "name": "t _v2i_IPAddrBlocks",
    "type": "CPP"
  },
  {
    "name": "t _i2r_IPAddrBlocks",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_inherits",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_subset",
    "type": "CPP"
  },
  {
    "name": "t _addr_contains",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_validate_path",
    "type": "CPP"
  },
  {
    "name": "t _addr_validate_path_internal",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_addr_validate_resource_set",
    "type": "CPP"
  },
  {
    "name": "t _v4IPAddressOrRange_cmp",
    "type": "CPP"
  },
  {
    "name": "t _v6IPAddressOrRange_cmp",
    "type": "CPP"
  },
  {
    "name": "t _IPAddressOrRange_cmp",
    "type": "CPP"
  },
  {
    "name": "t _addr_expand",
    "type": "CPP"
  },
  {
    "name": "t _i2r_address",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_it",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_it",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NAMING_AUTHORITY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NAMING_AUTHORITY",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_new",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PROFESSION_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PROFESSION_INFO",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ADMISSIONS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ADMISSIONS",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_new",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ADMISSION_SYNTAX",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ADMISSION_SYNTAX",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_new",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_free",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ADMISSION_SYNTAX",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_get0_authorityId",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_set0_authorityId",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_get0_authorityURL",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_set0_authorityURL",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_get0_authorityText",
    "type": "CPP"
  },
  {
    "name": "T _NAMING_AUTHORITY_set0_authorityText",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_get0_admissionAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_set0_admissionAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_get0_contentsOfAdmissions",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSION_SYNTAX_set0_contentsOfAdmissions",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_get0_admissionAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_set0_admissionAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_get0_namingAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_set0_namingAuthority",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_get0_professionInfos",
    "type": "CPP"
  },
  {
    "name": "T _ADMISSIONS_set0_professionInfos",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_get0_addProfessionInfo",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_set0_addProfessionInfo",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_get0_namingAuthority",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_set0_namingAuthority",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_get0_professionItems",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_set0_professionItems",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_get0_professionOIDs",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_set0_professionOIDs",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_get0_registrationNumber",
    "type": "CPP"
  },
  {
    "name": "T _PROFESSION_INFO_set0_registrationNumber",
    "type": "CPP"
  },
  {
    "name": "t _i2r_NAMING_AUTHORITY",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_KEYID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_AUTHORITY_KEYID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_AUTHORITY_KEYID",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_KEYID_new",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_KEYID_free",
    "type": "CPP"
  },
  {
    "name": "t _i2v_AUTHORITY_KEYID",
    "type": "CPP"
  },
  {
    "name": "t _v2i_AUTHORITY_KEYID",
    "type": "CPP"
  },
  {
    "name": "T _ASRange_it",
    "type": "CPP"
  },
  {
    "name": "T _ASIdOrRange_it",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifierChoice_it",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifiers_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASRange",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASRange",
    "type": "CPP"
  },
  {
    "name": "T _ASRange_new",
    "type": "CPP"
  },
  {
    "name": "T _ASRange_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASIdOrRange",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASIdOrRange",
    "type": "CPP"
  },
  {
    "name": "T _ASIdOrRange_new",
    "type": "CPP"
  },
  {
    "name": "T _ASIdOrRange_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASIdentifierChoice",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASIdentifierChoice",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifierChoice_new",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifierChoice_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ASIdentifiers",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ASIdentifiers",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifiers_new",
    "type": "CPP"
  },
  {
    "name": "T _ASIdentifiers_free",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_add_inherit",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_add_id_or_range",
    "type": "CPP"
  },
  {
    "name": "t _ASIdOrRange_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_is_canonical",
    "type": "CPP"
  },
  {
    "name": "t _ASIdentifierChoice_is_canonical",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_canonize",
    "type": "CPP"
  },
  {
    "name": "t _ASIdentifierChoice_canonize",
    "type": "CPP"
  },
  {
    "name": "t _v2i_ASIdentifiers",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ASIdentifiers",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_inherits",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_subset",
    "type": "CPP"
  },
  {
    "name": "t _asid_contains",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_validate_path",
    "type": "CPP"
  },
  {
    "name": "t _asid_validate_path_internal",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_asid_validate_resource_set",
    "type": "CPP"
  },
  {
    "name": "t _i2r_ASIdentifierChoice",
    "type": "CPP"
  },
  {
    "name": "T _BASIC_CONSTRAINTS_it",
    "type": "CPP"
  },
  {
    "name": "t _i2v_BASIC_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "t _v2i_BASIC_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "T _d2i_BASIC_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_BASIC_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "T _BASIC_CONSTRAINTS_new",
    "type": "CPP"
  },
  {
    "name": "T _BASIC_CONSTRAINTS_free",
    "type": "CPP"
  },
  {
    "name": "T _i2v_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _v2i_ASN1_BIT_STRING",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_nconf",
    "type": "CPP"
  },
  {
    "name": "t _X509V3_EXT_nconf_int",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_nconf_nid",
    "type": "CPP"
  },
  {
    "name": "t _v3_check_critical",
    "type": "CPP"
  },
  {
    "name": "t _v3_check_generic",
    "type": "CPP"
  },
  {
    "name": "t _v3_generic_extension",
    "type": "CPP"
  },
  {
    "name": "t _do_ext_nconf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_i2d",
    "type": "CPP"
  },
  {
    "name": "t _do_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add_nconf_sk",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add_nconf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_CRL_add_nconf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_REQ_add_nconf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_get_string",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_get_section",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_string_free",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_section_free",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_set_nconf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_set_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_set_issuer_pkey",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_conf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_conf_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_set_conf_lhash",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add_conf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_CRL_add_conf",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_REQ_add_conf",
    "type": "CPP"
  },
  {
    "name": "t _nconf_get_string",
    "type": "CPP"
  },
  {
    "name": "t _nconf_get_section",
    "type": "CPP"
  },
  {
    "name": "t _conf_lhash_get_string",
    "type": "CPP"
  },
  {
    "name": "t _conf_lhash_get_section",
    "type": "CPP"
  },
  {
    "name": "T _CERTIFICATEPOLICIES_it",
    "type": "CPP"
  },
  {
    "name": "t _i2r_certpol",
    "type": "CPP"
  },
  {
    "name": "t _r2i_certpol",
    "type": "CPP"
  },
  {
    "name": "T _d2i_CERTIFICATEPOLICIES",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CERTIFICATEPOLICIES",
    "type": "CPP"
  },
  {
    "name": "T _CERTIFICATEPOLICIES_new",
    "type": "CPP"
  },
  {
    "name": "T _CERTIFICATEPOLICIES_free",
    "type": "CPP"
  },
  {
    "name": "T _POLICYINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_POLICYINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_POLICYINFO",
    "type": "CPP"
  },
  {
    "name": "T _POLICYINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _POLICYINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _POLICYQUALINFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_POLICYQUALINFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_POLICYQUALINFO",
    "type": "CPP"
  },
  {
    "name": "T _POLICYQUALINFO_new",
    "type": "CPP"
  },
  {
    "name": "T _POLICYQUALINFO_free",
    "type": "CPP"
  },
  {
    "name": "T _USERNOTICE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_USERNOTICE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_USERNOTICE",
    "type": "CPP"
  },
  {
    "name": "T _USERNOTICE_new",
    "type": "CPP"
  },
  {
    "name": "T _USERNOTICE_free",
    "type": "CPP"
  },
  {
    "name": "T _NOTICEREF_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_NOTICEREF",
    "type": "CPP"
  },
  {
    "name": "T _i2d_NOTICEREF",
    "type": "CPP"
  },
  {
    "name": "T _NOTICEREF_new",
    "type": "CPP"
  },
  {
    "name": "T _NOTICEREF_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_POLICY_NODE_print",
    "type": "CPP"
  },
  {
    "name": "t _print_qualifiers",
    "type": "CPP"
  },
  {
    "name": "t _POLICYQUALINFO_adb",
    "type": "CPP"
  },
  {
    "name": "T _CRL_DIST_POINTS_it",
    "type": "CPP"
  },
  {
    "name": "t _v2i_crld",
    "type": "CPP"
  },
  {
    "name": "t _i2r_crldp",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_NAME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DIST_POINT_NAME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DIST_POINT_NAME",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_NAME_new",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_NAME_free",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DIST_POINT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DIST_POINT",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_new",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_CRL_DIST_POINTS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_CRL_DIST_POINTS",
    "type": "CPP"
  },
  {
    "name": "T _CRL_DIST_POINTS_new",
    "type": "CPP"
  },
  {
    "name": "T _CRL_DIST_POINTS_free",
    "type": "CPP"
  },
  {
    "name": "T _ISSUING_DIST_POINT_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ISSUING_DIST_POINT",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ISSUING_DIST_POINT",
    "type": "CPP"
  },
  {
    "name": "T _ISSUING_DIST_POINT_new",
    "type": "CPP"
  },
  {
    "name": "T _ISSUING_DIST_POINT_free",
    "type": "CPP"
  },
  {
    "name": "t _v2i_idp",
    "type": "CPP"
  },
  {
    "name": "t _i2r_idp",
    "type": "CPP"
  },
  {
    "name": "T _DIST_POINT_set_dpname",
    "type": "CPP"
  },
  {
    "name": "t _set_dist_point_name",
    "type": "CPP"
  },
  {
    "name": "t _set_reasons",
    "type": "CPP"
  },
  {
    "name": "t _gnames_from_sectname",
    "type": "CPP"
  },
  {
    "name": "t _dpn_cb",
    "type": "CPP"
  },
  {
    "name": "t _print_distpoint",
    "type": "CPP"
  },
  {
    "name": "t _print_reasons",
    "type": "CPP"
  },
  {
    "name": "t _print_gens",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_ENUMERATED_TABLE",
    "type": "CPP"
  },
  {
    "name": "T _EXTENDED_KEY_USAGE_it",
    "type": "CPP"
  },
  {
    "name": "t _i2v_EXTENDED_KEY_USAGE",
    "type": "CPP"
  },
  {
    "name": "t _v2i_EXTENDED_KEY_USAGE",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EXTENDED_KEY_USAGE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EXTENDED_KEY_USAGE",
    "type": "CPP"
  },
  {
    "name": "T _EXTENDED_KEY_USAGE_new",
    "type": "CPP"
  },
  {
    "name": "T _EXTENDED_KEY_USAGE_free",
    "type": "CPP"
  },
  {
    "name": "T _OTHERNAME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_OTHERNAME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_OTHERNAME",
    "type": "CPP"
  },
  {
    "name": "T _OTHERNAME_new",
    "type": "CPP"
  },
  {
    "name": "T _OTHERNAME_free",
    "type": "CPP"
  },
  {
    "name": "T _EDIPARTYNAME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EDIPARTYNAME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EDIPARTYNAME",
    "type": "CPP"
  },
  {
    "name": "T _EDIPARTYNAME_new",
    "type": "CPP"
  },
  {
    "name": "T _EDIPARTYNAME_free",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_GENERAL_NAME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_GENERAL_NAME",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_new",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_free",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAMES_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_GENERAL_NAMES",
    "type": "CPP"
  },
  {
    "name": "T _i2d_GENERAL_NAMES",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAMES_new",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAMES_free",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_dup",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_cmp",
    "type": "CPP"
  },
  {
    "name": "T _OTHERNAME_cmp",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_set0_value",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_get0_value",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_set0_othername",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_get0_otherName",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_IA5STRING",
    "type": "CPP"
  },
  {
    "name": "T _s2i_ASN1_IA5STRING",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_INFO_ACCESS_it",
    "type": "CPP"
  },
  {
    "name": "t _i2v_AUTHORITY_INFO_ACCESS",
    "type": "CPP"
  },
  {
    "name": "t _v2i_AUTHORITY_INFO_ACCESS",
    "type": "CPP"
  },
  {
    "name": "T _ACCESS_DESCRIPTION_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ACCESS_DESCRIPTION",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ACCESS_DESCRIPTION",
    "type": "CPP"
  },
  {
    "name": "T _ACCESS_DESCRIPTION_new",
    "type": "CPP"
  },
  {
    "name": "T _ACCESS_DESCRIPTION_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_AUTHORITY_INFO_ACCESS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_AUTHORITY_INFO_ACCESS",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_INFO_ACCESS_new",
    "type": "CPP"
  },
  {
    "name": "T _AUTHORITY_INFO_ACCESS_free",
    "type": "CPP"
  },
  {
    "name": "T _i2a_ACCESS_DESCRIPTION",
    "type": "CPP"
  },
  {
    "name": "t _s2i_asn1_int",
    "type": "CPP"
  },
  {
    "name": "T _ISSUER_SIGN_TOOL_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ISSUER_SIGN_TOOL",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ISSUER_SIGN_TOOL",
    "type": "CPP"
  },
  {
    "name": "T _ISSUER_SIGN_TOOL_new",
    "type": "CPP"
  },
  {
    "name": "T _ISSUER_SIGN_TOOL_free",
    "type": "CPP"
  },
  {
    "name": "t _v2i_issuer_sign_tool",
    "type": "CPP"
  },
  {
    "name": "t _i2r_issuer_sign_tool",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add",
    "type": "CPP"
  },
  {
    "name": "t _ext_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_get_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_get",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add_list",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_add_alias",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _ext_list_free",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_standard_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_d2i",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_get_d2i",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add1_i2d",
    "type": "CPP"
  },
  {
    "name": "t _ext_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _NAME_CONSTRAINTS_it",
    "type": "CPP"
  },
  {
    "name": "t _v2i_NAME_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "t _i2r_NAME_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_SUBTREE_it",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_SUBTREE_new",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_SUBTREE_free",
    "type": "CPP"
  },
  {
    "name": "T _NAME_CONSTRAINTS_new",
    "type": "CPP"
  },
  {
    "name": "T _NAME_CONSTRAINTS_free",
    "type": "CPP"
  },
  {
    "name": "T _NAME_CONSTRAINTS_check",
    "type": "CPP"
  },
  {
    "name": "t _nc_match",
    "type": "CPP"
  },
  {
    "name": "T _NAME_CONSTRAINTS_check_CN",
    "type": "CPP"
  },
  {
    "name": "t _do_i2r_name_constraints",
    "type": "CPP"
  },
  {
    "name": "t _nc_minmax_valid",
    "type": "CPP"
  },
  {
    "name": "t _nc_match_single",
    "type": "CPP"
  },
  {
    "name": "t _ia5ncasecmp",
    "type": "CPP"
  },
  {
    "name": "t _i2r_pci",
    "type": "CPP"
  },
  {
    "name": "t _r2i_pci",
    "type": "CPP"
  },
  {
    "name": "t _process_pci_value",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_POLICY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PROXY_POLICY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PROXY_POLICY",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_POLICY_new",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_POLICY_free",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_CERT_INFO_EXTENSION_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PROXY_CERT_INFO_EXTENSION",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PROXY_CERT_INFO_EXTENSION",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_CERT_INFO_EXTENSION_new",
    "type": "CPP"
  },
  {
    "name": "T _PROXY_CERT_INFO_EXTENSION_free",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_CONSTRAINTS_it",
    "type": "CPP"
  },
  {
    "name": "t _i2v_POLICY_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "t _v2i_POLICY_CONSTRAINTS",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_CONSTRAINTS_new",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_CONSTRAINTS_free",
    "type": "CPP"
  },
  {
    "name": "T _PKEY_USAGE_PERIOD_it",
    "type": "CPP"
  },
  {
    "name": "t _i2r_PKEY_USAGE_PERIOD",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKEY_USAGE_PERIOD",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKEY_USAGE_PERIOD",
    "type": "CPP"
  },
  {
    "name": "T _PKEY_USAGE_PERIOD_new",
    "type": "CPP"
  },
  {
    "name": "T _PKEY_USAGE_PERIOD_free",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_MAPPINGS_it",
    "type": "CPP"
  },
  {
    "name": "t _i2v_POLICY_MAPPINGS",
    "type": "CPP"
  },
  {
    "name": "t _v2i_POLICY_MAPPINGS",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_MAPPING_it",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_MAPPING_new",
    "type": "CPP"
  },
  {
    "name": "T _POLICY_MAPPING_free",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_val_prn",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_print",
    "type": "CPP"
  },
  {
    "name": "t _unknown_ext_print",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_extensions_print",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_EXT_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_purpose",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509v3_cache_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get_by_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get_by_sname",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_add",
    "type": "CPP"
  },
  {
    "name": "t _xp_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _xptable_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get0_sname",
    "type": "CPP"
  },
  {
    "name": "T _X509_PURPOSE_get_trust",
    "type": "CPP"
  },
  {
    "name": "T _X509_supported_extension",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_akid",
    "type": "CPP"
  },
  {
    "name": "t _check_sig_alg_match",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_proxy_flag",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_proxy_pathlen",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_ca",
    "type": "CPP"
  },
  {
    "name": "t _check_ca",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_issued",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_likely_issued",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_signing_allowed",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_extension_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_key_usage",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_extended_key_usage",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_subject_key_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_authority_key_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_authority_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_authority_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_pathlen",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_proxy_pathlen",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_ssl_client",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_ssl_server",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_ns_ssl_server",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_smime_sign",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_smime_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_crl_sign",
    "type": "CPP"
  },
  {
    "name": "t _no_check_purpose",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_ocsp_helper",
    "type": "CPP"
  },
  {
    "name": "t _check_purpose_timestamp_sign",
    "type": "CPP"
  },
  {
    "name": "t _purpose_smime",
    "type": "CPP"
  },
  {
    "name": "t _nid_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _i2v_GENERAL_NAMES",
    "type": "CPP"
  },
  {
    "name": "t _v2i_subject_alt",
    "type": "CPP"
  },
  {
    "name": "t _v2i_issuer_alt",
    "type": "CPP"
  },
  {
    "name": "T _i2v_GENERAL_NAME",
    "type": "CPP"
  },
  {
    "name": "T _GENERAL_NAME_print",
    "type": "CPP"
  },
  {
    "name": "T _v2i_GENERAL_NAMES",
    "type": "CPP"
  },
  {
    "name": "T _v2i_GENERAL_NAME",
    "type": "CPP"
  },
  {
    "name": "T _v2i_GENERAL_NAME_ex",
    "type": "CPP"
  },
  {
    "name": "T _a2i_GENERAL_NAME",
    "type": "CPP"
  },
  {
    "name": "t _copy_email",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "t _s2i_skey_id",
    "type": "CPP"
  },
  {
    "name": "T _s2i_ASN1_OCTET_STRING",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_pubkey_hash",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_it",
    "type": "CPP"
  },
  {
    "name": "t _sxnet_v2i",
    "type": "CPP"
  },
  {
    "name": "t _sxnet_i2r",
    "type": "CPP"
  },
  {
    "name": "T _SXNETID_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SXNETID",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SXNETID",
    "type": "CPP"
  },
  {
    "name": "T _SXNETID_new",
    "type": "CPP"
  },
  {
    "name": "T _SXNETID_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SXNET",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SXNET",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_new",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_free",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_add_id_asc",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_add_id_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_add_id_ulong",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_get_id_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_get_id_asc",
    "type": "CPP"
  },
  {
    "name": "T _SXNET_get_id_ulong",
    "type": "CPP"
  },
  {
    "name": "T _TLS_FEATURE_new",
    "type": "CPP"
  },
  {
    "name": "t _TLS_FEATURE_it",
    "type": "CPP"
  },
  {
    "name": "T _TLS_FEATURE_free",
    "type": "CPP"
  },
  {
    "name": "t _i2v_TLS_FEATURE",
    "type": "CPP"
  },
  {
    "name": "t _v2i_TLS_FEATURE",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_UTF8STRING",
    "type": "CPP"
  },
  {
    "name": "T _s2i_ASN1_UTF8STRING",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_value",
    "type": "CPP"
  },
  {
    "name": "t _x509v3_add_len_value",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_value_uchar",
    "type": "CPP"
  },
  {
    "name": "T _x509v3_add_len_value_uchar",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_conf_free",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_value_bool",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_value_bool_nf",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_ENUMERATED",
    "type": "CPP"
  },
  {
    "name": "t _bignum_to_string",
    "type": "CPP"
  },
  {
    "name": "T _i2s_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _s2i_ASN1_INTEGER",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_add_value_int",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_get_value_bool",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_get_value_int",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_parse_list",
    "type": "CPP"
  },
  {
    "name": "t _strip_spaces",
    "type": "CPP"
  },
  {
    "name": "T _ossl_v3_name_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_get1_email",
    "type": "CPP"
  },
  {
    "name": "t _get_email",
    "type": "CPP"
  },
  {
    "name": "T _X509_get1_ocsp",
    "type": "CPP"
  },
  {
    "name": "t _append_ia5",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get1_email",
    "type": "CPP"
  },
  {
    "name": "T _X509_email_free",
    "type": "CPP"
  },
  {
    "name": "t _str_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_host",
    "type": "CPP"
  },
  {
    "name": "t _do_x509_check",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_email",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_ip",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_ip_asc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_a2i_ipadd",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ipaddr_to_asc",
    "type": "CPP"
  },
  {
    "name": "T _a2i_IPADDRESS",
    "type": "CPP"
  },
  {
    "name": "T _a2i_IPADDRESS_NC",
    "type": "CPP"
  },
  {
    "name": "t _ipv4_from_asc",
    "type": "CPP"
  },
  {
    "name": "T _X509V3_NAME_from_section",
    "type": "CPP"
  },
  {
    "name": "t _sk_strcmp",
    "type": "CPP"
  },
  {
    "name": "t _equal_email",
    "type": "CPP"
  },
  {
    "name": "t _equal_nocase",
    "type": "CPP"
  },
  {
    "name": "t _equal_wildcard",
    "type": "CPP"
  },
  {
    "name": "t _equal_case",
    "type": "CPP"
  },
  {
    "name": "t _do_check_string",
    "type": "CPP"
  },
  {
    "name": "t _ipv6_cb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_X509V3_strings",
    "type": "CPP"
  },
  {
    "name": "T _X509at_get_attr_count",
    "type": "CPP"
  },
  {
    "name": "T _X509at_get_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509at_get_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509at_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509at_delete_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509at_add1_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509at_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_create_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509at_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_create_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509at_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_create_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _X509at_get0_data_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_get0_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509at_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_set1_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_set1_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_get0_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_get0_type",
    "type": "CPP"
  },
  {
    "name": "T _X509_issuer_and_serial_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_issuer_and_serial_hash",
    "type": "CPP"
  },
  {
    "name": "T _X509_issuer_name_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_subject_name_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_match",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_issuer_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_issuer_name_hash",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_hash_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_issuer_name_hash_old",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_hash_old",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_subject_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _X509_subject_name_hash",
    "type": "CPP"
  },
  {
    "name": "T _X509_subject_name_hash_old",
    "type": "CPP"
  },
  {
    "name": "T _X509_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_add_cert_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_add_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_add_certs",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_add_certs_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_find_by_issuer_and_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_find_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_private_key",
    "type": "CPP"
  },
  {
    "name": "T _X509_chain_check_suiteb",
    "type": "CPP"
  },
  {
    "name": "t _check_suite_b",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_check_suiteb",
    "type": "CPP"
  },
  {
    "name": "T _X509_chain_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_default_paths_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_default_paths",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_file_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_file",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_path",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_store_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_store",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_locations_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_load_locations",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_private_dir",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_cert_area",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_cert_dir",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_cert_file",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_cert_dir_env",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_default_cert_file_env",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_X509_strings",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _X509_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get_ext_d2i",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_add1_ext_i2d",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_lock",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_unlock",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_init",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_ctrl_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_by_subject_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_by_issuer_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_by_fingerprint",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_by_alias",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_set_method_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_get_method_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_get_store",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_new",
    "type": "CPP"
  },
  {
    "name": "t _x509_object_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_add_lookup",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_obj_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_retrieve_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_up_ref_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_add_cert",
    "type": "CPP"
  },
  {
    "name": "t _x509_store_add",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_add_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_get0_X509",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_get0_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_get_type",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_set1_X509",
    "type": "CPP"
  },
  {
    "name": "t _x509_object_free_internal",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_set1_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_idx_by_subject",
    "type": "CPP"
  },
  {
    "name": "t _x509_object_idx_cnt",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get0_objects",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get1_all_certs",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get1_certs",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get1_crls",
    "type": "CPP"
  },
  {
    "name": "T _X509_OBJECT_retrieve_match",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get1_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_purpose",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_trust",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set1_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get0_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_get_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_get_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_check_issued",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_check_issued",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_check_revocation",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_check_revocation",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_get_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_get_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_check_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_check_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_cert_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_cert_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_check_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_check_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_lookup_certs",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_lookup_certs",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_lookup_crls",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_lookup_crls",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_store",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_new_item",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_new_item",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_init",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_init",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_get_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_get_by_subject",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_get_by_issuer_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_get_by_issuer_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_get_by_fingerprint",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_get_by_fingerprint",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_set_get_by_alias",
    "type": "CPP"
  },
  {
    "name": "T _X509_LOOKUP_meth_get_get_by_alias",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_oneline",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_to_X509",
    "type": "CPP"
  },
  {
    "name": "T _X509_to_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get0_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_check_private_key",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_extension_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_extension_nids",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set_extension_nids",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add_extensions_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add1_attr_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_attr_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_delete_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add1_attr",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add1_attr_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_add1_attr_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_subject_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set0_signature",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set1_signature_algo",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get_signature_nid",
    "type": "CPP"
  },
  {
    "name": "T _i2d_re_X509_REQ_tbs",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_issuer_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_subject_name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_set1_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_set1_notBefore",
    "type": "CPP"
  },
  {
    "name": "T _X509_set1_notAfter",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _X509_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_notBefore",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_notAfter",
    "type": "CPP"
  },
  {
    "name": "T _X509_getm_notBefore",
    "type": "CPP"
  },
  {
    "name": "T _X509_getm_notAfter",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_signature_type",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_uids",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_tbs_sigalg",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_INFO_get",
    "type": "CPP"
  },
  {
    "name": "T _X509_SIG_INFO_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_signature_info",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_init_sig_info",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_set_default",
    "type": "CPP"
  },
  {
    "name": "T _X509_check_trust",
    "type": "CPP"
  },
  {
    "name": "t _obj_trust",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get_by_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_add",
    "type": "CPP"
  },
  {
    "name": "t _tr_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _trtable_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_TRUST_get_trust",
    "type": "CPP"
  },
  {
    "name": "t _trust_compat",
    "type": "CPP"
  },
  {
    "name": "t _trust_1oidany",
    "type": "CPP"
  },
  {
    "name": "t _trust_1oid",
    "type": "CPP"
  },
  {
    "name": "T _X509_verify_cert_error_string",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_get_ext_count",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_get_ext_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_get_ext_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_get_ext_by_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_get_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_delete_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509v3_add_ext",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_create_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_create_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_set_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_set_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_set_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_get_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_get_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_get_critical",
    "type": "CPP"
  },
  {
    "name": "T _X509_self_signed",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_verify_cert",
    "type": "CPP"
  },
  {
    "name": "t _check_key_level",
    "type": "CPP"
  },
  {
    "name": "t _verify_cb_cert",
    "type": "CPP"
  },
  {
    "name": "t _verify_chain",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_check_cert_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_cmp_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_cmp_current_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_time_adj",
    "type": "CPP"
  },
  {
    "name": "T _X509_cmp_timeframe",
    "type": "CPP"
  },
  {
    "name": "T _X509_gmtime_adj",
    "type": "CPP"
  },
  {
    "name": "T _X509_time_adj_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_pubkey_parameters",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_diff",
    "type": "CPP"
  },
  {
    "name": "t _crl_extension_match",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_error",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_error",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_error_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_error_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_current_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_current_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_chain",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get1_chain",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_current_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_current_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_parent_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_crls",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_purpose",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_purpose_inherit",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_trust",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_init",
    "type": "CPP"
  },
  {
    "name": "t _check_issued",
    "type": "CPP"
  },
  {
    "name": "t _null_callback",
    "type": "CPP"
  },
  {
    "name": "t _internal_verify",
    "type": "CPP"
  },
  {
    "name": "t _check_revocation",
    "type": "CPP"
  },
  {
    "name": "t _check_crl",
    "type": "CPP"
  },
  {
    "name": "t _cert_crl",
    "type": "CPP"
  },
  {
    "name": "t _check_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_default",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_trusted_stack",
    "type": "CPP"
  },
  {
    "name": "t _get_issuer_sk",
    "type": "CPP"
  },
  {
    "name": "t _lookup_certs_sk",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_untrusted",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_untrusted",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_verified_chain",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_get_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_check_issued",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_check_revocation",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_get_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_check_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_cert_crl",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_check_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_lookup_certs",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_lookup_crls",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_policy_tree",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_explicit_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get_num_untrusted",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_get0_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_STORE_CTX_set0_dane",
    "type": "CPP"
  },
  {
    "name": "T _X509_build_chain",
    "type": "CPP"
  },
  {
    "name": "t _build_chain",
    "type": "CPP"
  },
  {
    "name": "t _check_id",
    "type": "CPP"
  },
  {
    "name": "t _get_crl_sk",
    "type": "CPP"
  },
  {
    "name": "t _check_crl_time",
    "type": "CPP"
  },
  {
    "name": "t _find_issuer",
    "type": "CPP"
  },
  {
    "name": "t _dane_match",
    "type": "CPP"
  },
  {
    "name": "t _check_leaf_suiteb",
    "type": "CPP"
  },
  {
    "name": "t _check_trust",
    "type": "CPP"
  },
  {
    "name": "t _check_dane_issuer",
    "type": "CPP"
  },
  {
    "name": "t _check_dane_pkeys",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_free",
    "type": "CPP"
  },
  {
    "name": "t _str_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_inherit",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_policies",
    "type": "CPP"
  },
  {
    "name": "t _str_copy",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_email",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_ip",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_inh_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_inh_flags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_purpose",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_trust",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_auth_level",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_time",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_add0_policy",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get0_host",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_host",
    "type": "CPP"
  },
  {
    "name": "t _int_x509_param_set_hosts",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_add1_host",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set_hostflags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_hostflags",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get0_peername",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_move_peername",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get0_email",
    "type": "CPP"
  },
  {
    "name": "t _int_x509_param_set1",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get1_ip_asc",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_set1_ip_asc",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_depth",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_auth_level",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_add0_table",
    "type": "CPP"
  },
  {
    "name": "t _param_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_lookup",
    "type": "CPP"
  },
  {
    "name": "T _X509_VERIFY_PARAM_table_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _table_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set_issuer_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set1_lastUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set1_nextUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_sort",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_lastUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_nextUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_lastUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_nextUpdate",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_issuer",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_REVOKED",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_signature_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get0_revocationDate",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_set_revocationDate",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get0_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_set_serialNumber",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_get0_extensions",
    "type": "CPP"
  },
  {
    "name": "T _i2d_re_X509_CRL_tbs",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get_text_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get_text_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get_index_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_get_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get_entry",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_entry_count",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get_index_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_delete_entry",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_add_entry_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_create_by_OBJ",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_add_entry",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_add_entry_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_create_by_NID",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_add_entry_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_create_by_txt",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_set_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_set_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_get_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set_version",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set_subject_name",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_set_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_get_pubkey",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_b64_decode",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_b64_encode",
    "type": "CPP"
  },
  {
    "name": "T _X509_certificate_type",
    "type": "CPP"
  },
  {
    "name": "T _X509_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_verify_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_verify",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_sign",
    "type": "CPP"
  },
  {
    "name": "T _X509_sign_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_load_http",
    "type": "CPP"
  },
  {
    "name": "t _simple_get_asn1",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_sign",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_sign_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_sign",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_sign_ctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_load_http",
    "type": "CPP"
  },
  {
    "name": "T _NETSCAPE_SPKI_sign",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CRL_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CRL_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CRL_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CRL_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS7_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS7_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_REQ_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_REQ_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_REQ_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_REQ_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPublicKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSA_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPublicKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSA_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSAPublicKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSA_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSAPublicKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSA_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSAPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSAPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSA_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSA_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSAPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSAPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSA_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSA_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EC_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EC_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECPrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EC_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EC_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_ECPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_ECPrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _X509_pubkey_digest",
    "type": "CPP"
  },
  {
    "name": "T _X509_digest",
    "type": "CPP"
  },
  {
    "name": "T _X509_digest_sig",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_digest",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_digest",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_digest",
    "type": "CPP"
  },
  {
    "name": "T _PKCS7_ISSUER_AND_SERIAL_digest",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8_PRIV_KEY_INFO_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8_PRIV_KEY_INFO_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKeyInfo_fp",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey_ex_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey_ex_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PUBKEY_fp",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PKCS8_PRIV_KEY_INFO_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8_PRIV_KEY_INFO_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PKCS8PrivateKeyInfo_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PrivateKey_bio",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PUBKEY_bio",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_ATTRIBUTE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_ATTRIBUTE",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_ATTRIBUTE_create",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_it",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_REVOKED",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_REVOKED",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_REVOKED_dup",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CRL_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CRL_INFO",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CRL",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_crl_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_add0_revoked",
    "type": "CPP"
  },
  {
    "name": "t _X509_REVOKED_cmp",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_by_serial",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get0_by_cert",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set_default_method",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_METHOD_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_METHOD_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_set_meth_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_CRL_get_meth_data",
    "type": "CPP"
  },
  {
    "name": "t _crl_inf_cb",
    "type": "CPP"
  },
  {
    "name": "t _crl_cb",
    "type": "CPP"
  },
  {
    "name": "t _def_crl_lookup",
    "type": "CPP"
  },
  {
    "name": "t _def_crl_verify",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_it",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSIONS_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_EXTENSION",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_EXTENSION",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_free",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_EXTENSIONS",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_EXTENSIONS",
    "type": "CPP"
  },
  {
    "name": "T _X509_EXTENSION_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_NAME_ENTRY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_NAME_ENTRY",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_ENTRY_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_NAME",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_NAME",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_print",
    "type": "CPP"
  },
  {
    "name": "T _X509_NAME_get0_der",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_ex_new",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_ex_free",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_ex_d2i",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_ex_i2d",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_ex_print",
    "type": "CPP"
  },
  {
    "name": "t _x509_name_canon",
    "type": "CPP"
  },
  {
    "name": "t _local_sk_X509_NAME_ENTRY_free",
    "type": "CPP"
  },
  {
    "name": "t _local_sk_X509_NAME_ENTRY_pop_free",
    "type": "CPP"
  },
  {
    "name": "t _X509_NAME_ENTRIES_it",
    "type": "CPP"
  },
  {
    "name": "t _i2d_name_canon",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_X509_PUBKEY_INTERNAL",
    "type": "CPP"
  },
  {
    "name": "T _ossl_X509_PUBKEY_INTERNAL_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_dup",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_free",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_decode",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_set",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_get",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_PUBKEY_legacy",
    "type": "CPP"
  },
  {
    "name": "t _d2i_PUBKEY_int",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PUBKEY_ex",
    "type": "CPP"
  },
  {
    "name": "T _d2i_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _d2i_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_RSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_DH_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_DH_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_DHx_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_DHx_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _d2i_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_DSA_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _d2i_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _i2d_EC_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_ED25519_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_ED25519_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_ED448_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_ED448_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_X25519_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_X25519_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_d2i_X448_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _ossl_i2d_X448_PUBKEY",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_set0_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_get0_param",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_pubkey_bitstr",
    "type": "CPP"
  },
  {
    "name": "T _X509_PUBKEY_eq",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_PUBKEY_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_i2d",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_print",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_d2i_ex",
    "type": "CPP"
  },
  {
    "name": "t _x509_pubkey_ex_populate",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_INFO_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_REQ_INFO",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_REQ_INFO",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_INFO_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_INFO_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_REQ",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_dup",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_set0_distinguishing_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_get0_distinguishing_id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_req_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_REQ_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _rinf_cb",
    "type": "CPP"
  },
  {
    "name": "t _req_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_CINF_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CINF",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CINF",
    "type": "CPP"
  },
  {
    "name": "T _X509_CINF_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_CINF_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509",
    "type": "CPP"
  },
  {
    "name": "T _X509_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_dup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_x509_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _X509_new_ex",
    "type": "CPP"
  },
  {
    "name": "T _X509_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_AUX",
    "type": "CPP"
  },
  {
    "name": "t _i2d_x509_aux_internal",
    "type": "CPP"
  },
  {
    "name": "T _i2d_re_X509_tbs",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_signature",
    "type": "CPP"
  },
  {
    "name": "T _X509_get_signature_nid",
    "type": "CPP"
  },
  {
    "name": "T _X509_set0_distinguishing_id",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_distinguishing_id",
    "type": "CPP"
  },
  {
    "name": "t _x509_cb",
    "type": "CPP"
  },
  {
    "name": "T _X509_CERT_AUX_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_X509_CERT_AUX",
    "type": "CPP"
  },
  {
    "name": "T _i2d_X509_CERT_AUX",
    "type": "CPP"
  },
  {
    "name": "T _X509_CERT_AUX_new",
    "type": "CPP"
  },
  {
    "name": "T _X509_CERT_AUX_free",
    "type": "CPP"
  },
  {
    "name": "T _X509_trusted",
    "type": "CPP"
  },
  {
    "name": "T _X509_alias_set1",
    "type": "CPP"
  },
  {
    "name": "T _X509_keyid_set1",
    "type": "CPP"
  },
  {
    "name": "T _X509_alias_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_keyid_get0",
    "type": "CPP"
  },
  {
    "name": "T _X509_add1_trust_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_add1_reject_object",
    "type": "CPP"
  },
  {
    "name": "T _X509_trust_clear",
    "type": "CPP"
  },
  {
    "name": "T _X509_reject_clear",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_trust_objects",
    "type": "CPP"
  },
  {
    "name": "T _X509_get0_reject_objects",
    "type": "CPP"
  },
  {
    "name": "T _ossl_base_provider_init",
    "type": "CPP"
  },
  {
    "name": "t _base_teardown",
    "type": "CPP"
  },
  {
    "name": "t _base_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _base_get_params",
    "type": "CPP"
  },
  {
    "name": "t _base_query",
    "type": "CPP"
  },
  {
    "name": "T _ossl_default_provider_init",
    "type": "CPP"
  },
  {
    "name": "t _deflt_teardown",
    "type": "CPP"
  },
  {
    "name": "t _deflt_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _deflt_get_params",
    "type": "CPP"
  },
  {
    "name": "t _deflt_query",
    "type": "CPP"
  },
  {
    "name": "T _ossl_null_provider_init",
    "type": "CPP"
  },
  {
    "name": "t _null_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _null_get_params",
    "type": "CPP"
  },
  {
    "name": "t _null_query",
    "type": "CPP"
  },
  {
    "name": "T _ossl_set_error_state",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_is_running",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_MDWithRSAEncryption",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_SM2_with_MD",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_from_dispatch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_new_file",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_new_membuf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_gets",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_puts",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_vprintf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_bio_printf",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bio_prov_init_bio_method",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_write_ex",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_read_ex",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_puts",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_gets",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_new",
    "type": "CPP"
  },
  {
    "name": "t _bio_core_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_bio_new_from_core_bio",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_capabilities",
    "type": "CPP"
  },
  {
    "name": "T _ossl_digest_md_to_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_digest_get_approved_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_seeding_from_dispatch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cleanup_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cleanup_nonce",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_reset",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_load_from_params",
    "type": "CPP"
  },
  {
    "name": "t _load_common",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_engine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_reset",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_copy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_load_from_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_md",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_digest_engine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_set_macctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_macctx_load_from_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cache_exported_algorithms",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_memdup",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rsa_check_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ec_check_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dsa_check_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_dh_check_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_digest_get_approved_nid_with_sha1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_digest_is_allowed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_securitycheck_enabled",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tls1_prf_ems_check_enabled",
    "type": "CPP"
  },
  {
    "name": "T _ossl_digest_rsa_sign_get_md_nid",
    "type": "CPP"
  },
  {
    "name": "t _rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_encrypt_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_decrypt_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _rsa_freectx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm2_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2_asym_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _sm2_asym_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _sm2_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm2_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sm2_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_get_md",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_einit",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_dinit",
    "type": "CPP"
  },
  {
    "name": "t _aes_cts_256_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cbc_cts_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cts_192_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_cts_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_capable_aes_cbc_hmac_sha1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cbc_hmac_sha1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_capable_aes_cbc_hmac_sha256",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cbc_hmac_sha256",
    "type": "CPP"
  },
  {
    "name": "t _aes128ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_ccm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes192ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes256ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_aes_hw_ccm",
    "type": "CPP"
  },
  {
    "name": "t _ccm_generic_aes_initkey",
    "type": "CPP"
  },
  {
    "name": "t _aes128gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes192gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes256gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "T _armv8_aes_gcm_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _armv8_aes_gcm_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_aes_hw_gcm",
    "type": "CPP"
  },
  {
    "name": "t _armv8_aes_gcm_initkey",
    "type": "CPP"
  },
  {
    "name": "t _generic_aes_gcm_cipher_update",
    "type": "CPP"
  },
  {
    "name": "t _aes_gcm_initkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_ofb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_ctr",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aes_initkey",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aes_copyctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ocb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_einit",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_dinit",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_block_update",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_block_final",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_ocb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cipher_ocb_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cipher_ocb_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ocb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_ocb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ocb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_ocb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_ocb_init",
    "type": "CPP"
  },
  {
    "name": "t _update_iv",
    "type": "CPP"
  },
  {
    "name": "t _cipher_updateaad",
    "type": "CPP"
  },
  {
    "name": "t _aes_generic_ocb_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_ocb",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aes_ocb_generic_initkey",
    "type": "CPP"
  },
  {
    "name": "t _aes128siv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_freectx",
    "type": "CPP"
  },
  {
    "name": "t _siv_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _siv_einit",
    "type": "CPP"
  },
  {
    "name": "t _siv_dinit",
    "type": "CPP"
  },
  {
    "name": "t _siv_cipher",
    "type": "CPP"
  },
  {
    "name": "t _siv_stream_final",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_siv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes192siv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_siv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes256siv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_siv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _siv_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_siv",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_initkey",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_setspeed",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_settag",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _aes_siv_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256wrap_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_einit",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_dinit",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_final",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_wrap_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192wrap_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_wrap_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128wrap_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_wrap_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256wrappad_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_wrappad_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192wrappad_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_wrappad_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128wrappad_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_wrappad_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256wrapinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_wrapinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192wrapinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_wrapinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128wrapinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_wrapinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_256wrappadinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_wrappadinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_192wrappadinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_192_wrappadinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128wrappadinv_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_wrappadinv_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_wrap_init",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_xts_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_einit",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_dinit",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_stream_update",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_stream_final",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_cipher",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_256_xts_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_xts_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_128_xts_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aes_xts_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aes_xts",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aes_xts_generic_initkey",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aes_xts_copyctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aria_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria128ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_ccm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria192ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria256ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_aria_hw_ccm",
    "type": "CPP"
  },
  {
    "name": "t _ccm_aria_initkey",
    "type": "CPP"
  },
  {
    "name": "t _aria128gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _aria_128_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria192gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_192_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria256gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _aria_256_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_aria_hw_gcm",
    "type": "CPP"
  },
  {
    "name": "t _aria_gcm_initkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_ofb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_aria_ctr",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aria_initkey",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_aria_copyctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_freectx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_256_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_192_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _camellia_128_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_einit",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_dinit",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cts_256_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cbc_cts_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cts_192_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _camellia_cts_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_ofb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_camellia_ctr",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_camellia_initkey",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_camellia_copyctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_chacha20_initctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_chacha20_einit",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_chacha20_dinit",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_newctx",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_freectx",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_get_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_chacha20",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_initkey",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_cipher",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_initiv",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_newctx",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_freectx",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_einit",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_dinit",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_cipher",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_final",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_get_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_chacha20_poly1305",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_initkey",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_aead_cipher",
    "type": "CPP"
  },
  {
    "name": "t _chacha20_poly1305_initiv",
    "type": "CPP"
  },
  {
    "name": "t _chacha_poly1305_tls_init",
    "type": "CPP"
  },
  {
    "name": "t _chacha_poly1305_tls_iv_set_fixed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_cbc_cts_mode_id2name",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_cbc_cts_mode_name2id",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_cbc_cts_block_update",
    "type": "CPP"
  },
  {
    "name": "t _cts128_cs1_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _cts128_cs3_encrypt",
    "type": "CPP"
  },
  {
    "name": "t _cts128_cs1_decrypt",
    "type": "CPP"
  },
  {
    "name": "t _cts128_cs3_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_cbc_cts_block_final",
    "type": "CPP"
  },
  {
    "name": "t _null_newctx",
    "type": "CPP"
  },
  {
    "name": "t _null_freectx",
    "type": "CPP"
  },
  {
    "name": "t _null_einit",
    "type": "CPP"
  },
  {
    "name": "t _null_dinit",
    "type": "CPP"
  },
  {
    "name": "t _null_cipher",
    "type": "CPP"
  },
  {
    "name": "t _null_final",
    "type": "CPP"
  },
  {
    "name": "t _null_get_params",
    "type": "CPP"
  },
  {
    "name": "t _null_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _null_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _null_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _null_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ctr_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ctr_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ofb128_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ofb128_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_cfb128_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_cfb128_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm4128ccm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_ccm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_ccm_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_sm4_hw_ccm",
    "type": "CPP"
  },
  {
    "name": "t _ccm_sm4_initkey",
    "type": "CPP"
  },
  {
    "name": "t _sm4128gcm_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_gcm_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm4_128_gcm_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_sm4_hw_gcm",
    "type": "CPP"
  },
  {
    "name": "t _sm4_gcm_initkey",
    "type": "CPP"
  },
  {
    "name": "t _hw_gcm_cipher_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_sm4_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_sm4_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_sm4_ofb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_sm4_cfb128",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_sm4_ctr",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_sm4_initkey",
    "type": "CPP"
  },
  {
    "name": "t _cipher_hw_sm4_copyctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_newctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_dupctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_freectx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_einit",
    "type": "CPP"
  },
  {
    "name": "t _tdes_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_dinit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_tdes_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb8_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede3_cfb8_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_ecb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_ecb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_cbc_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_cbc_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_ofb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_ofb_get_params",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_cfb_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_ede2_cfb_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_ofb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_cfb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_cfb1",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_cfb8",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede2_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede2_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede2_ofb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede2_cfb",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cipher_hw_tdes_ofb",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cipher_hw_tdes_cfb",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cipher_hw_tdes_cfb1",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cipher_hw_tdes_cfb8",
    "type": "CPP"
  },
  {
    "name": "t _ossl_cipher_hw_tdes_ede2_initkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_hw_tdes_ede3_initkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_hw_tdes_copyctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_hw_tdes_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_hw_tdes_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_ecb",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_ede3_cbc",
    "type": "CPP"
  },
  {
    "name": "t _tdes_wrap_cipher",
    "type": "CPP"
  },
  {
    "name": "t _tdes_wrap_newctx",
    "type": "CPP"
  },
  {
    "name": "t _tdes_wrap_update",
    "type": "CPP"
  },
  {
    "name": "t _tdes_wrap_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_cipher_hw_tdes_wrap_cbc",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s256_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b512_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_freectx",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2s256_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_newctx",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_freectx",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_get_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2b512_internal_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_param_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_param_set_digest_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_param_set_key_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_param_set_personal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_param_set_salt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2b_init_param",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_init_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2b_compress",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2b_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_param_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_param_set_digest_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_param_set_key_length",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_param_set_personal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_param_set_salt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2s_init_param",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_init_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2s_compress",
    "type": "CPP"
  },
  {
    "name": "T _ossl_blake2s_final",
    "type": "CPP"
  },
  {
    "name": "t _md5_newctx",
    "type": "CPP"
  },
  {
    "name": "t _md5_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _md5_freectx",
    "type": "CPP"
  },
  {
    "name": "t _md5_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _md5_get_params",
    "type": "CPP"
  },
  {
    "name": "t _md5_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_freectx",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _md5_sha1_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_newctx",
    "type": "CPP"
  },
  {
    "name": "t _null_update",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_freectx",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_get_params",
    "type": "CPP"
  },
  {
    "name": "t _nullmd_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_newctx",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_freectx",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_get_params",
    "type": "CPP"
  },
  {
    "name": "t _ripemd160_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha1_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha1_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha1_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha1_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha1_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha1_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha1_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sha1_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sha224_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha224_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha224_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha224_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha224_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha224_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha256_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha256_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha256_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha256_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha384_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha384_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha384_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha384_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha384_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha384_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha512_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha512_224_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha512_256_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _sha3_224_newctx",
    "type": "CPP"
  },
  {
    "name": "t _keccak_update",
    "type": "CPP"
  },
  {
    "name": "t _keccak_final",
    "type": "CPP"
  },
  {
    "name": "t _keccak_freectx",
    "type": "CPP"
  },
  {
    "name": "t _keccak_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sha3_224_get_params",
    "type": "CPP"
  },
  {
    "name": "t _keccak_init",
    "type": "CPP"
  },
  {
    "name": "t _sha3_256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha3_256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha3_384_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha3_384_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sha3_512_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sha3_512_get_params",
    "type": "CPP"
  },
  {
    "name": "t _shake_128_newctx",
    "type": "CPP"
  },
  {
    "name": "t _shake_128_get_params",
    "type": "CPP"
  },
  {
    "name": "t _keccak_init_params",
    "type": "CPP"
  },
  {
    "name": "t _shake_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _shake_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _shake_256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _shake_256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _keccak_kmac_128_newctx",
    "type": "CPP"
  },
  {
    "name": "t _keccak_kmac_128_get_params",
    "type": "CPP"
  },
  {
    "name": "t _keccak_kmac_256_newctx",
    "type": "CPP"
  },
  {
    "name": "t _keccak_kmac_256_get_params",
    "type": "CPP"
  },
  {
    "name": "t _generic_sha3_absorb",
    "type": "CPP"
  },
  {
    "name": "t _generic_sha3_final",
    "type": "CPP"
  },
  {
    "name": "t _sm3_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm3_internal_final",
    "type": "CPP"
  },
  {
    "name": "t _sm3_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm3_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sm3_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm3_internal_init",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _der2key_freectx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dh_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _der2key_decode",
    "type": "CPP"
  },
  {
    "name": "t _der2key_export_object",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dh_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_params_der2dh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_params_der2dh_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _DH_der2dh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _DH_der2dh_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dhx_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dhx_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dhx_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dhx_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_params_der2dhx_newctx",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_params_der2dhx_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _DHX_der2dhx_newctx",
    "type": "CPP"
  },
  {
    "name": "t _DHX_der2dhx_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2dsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2dsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_der2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_der2dsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _DSA_der2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _DSA_der2dsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ec_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ec_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ec_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ec_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_no_pub_der2ec_newctx",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_no_pub_der2ec_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _EC_der2ec_newctx",
    "type": "CPP"
  },
  {
    "name": "t _EC_der2ec_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2x25519_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2x25519_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2x25519_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2x25519_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2x448_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2x448_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2x448_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2x448_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ed25519_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ed25519_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ed25519_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ed25519_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ed448_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2ed448_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ed448_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2ed448_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2sm2_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2sm2_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2sm2_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2sm2_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2rsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2rsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_keypair_der2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _type_specific_keypair_der2rsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _RSA_der2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _RSA_der2rsa_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2rsapss_newctx",
    "type": "CPP"
  },
  {
    "name": "t _PrivateKeyInfo_der2rsapss_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2rsapss_newctx",
    "type": "CPP"
  },
  {
    "name": "t _SubjectPublicKeyInfo_der2rsapss_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _dh_adjust",
    "type": "CPP"
  },
  {
    "name": "t _der2key_decode_p8",
    "type": "CPP"
  },
  {
    "name": "t _dsa_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _dsa_adjust",
    "type": "CPP"
  },
  {
    "name": "t _ec_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _ec_check",
    "type": "CPP"
  },
  {
    "name": "t _ec_adjust",
    "type": "CPP"
  },
  {
    "name": "t _ecx_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _ecx_key_adjust",
    "type": "CPP"
  },
  {
    "name": "t _sm2_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _rsa_d2i_PKCS8",
    "type": "CPP"
  },
  {
    "name": "t _rsa_check",
    "type": "CPP"
  },
  {
    "name": "t _rsa_adjust",
    "type": "CPP"
  },
  {
    "name": "t _epki2pki_newctx",
    "type": "CPP"
  },
  {
    "name": "t _epki2pki_freectx",
    "type": "CPP"
  },
  {
    "name": "t _epki2pki_decode",
    "type": "CPP"
  },
  {
    "name": "t _msblob2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _msblob2key_freectx",
    "type": "CPP"
  },
  {
    "name": "t _msblob2key_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _msblob2key_decode",
    "type": "CPP"
  },
  {
    "name": "t _msblob2key_export_object",
    "type": "CPP"
  },
  {
    "name": "t _msblob2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_adjust",
    "type": "CPP"
  },
  {
    "name": "t _pem2der_newctx",
    "type": "CPP"
  },
  {
    "name": "t _pem2der_freectx",
    "type": "CPP"
  },
  {
    "name": "t _pem2der_decode",
    "type": "CPP"
  },
  {
    "name": "t _pem2der_pass_helper",
    "type": "CPP"
  },
  {
    "name": "t _pvk2dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _pvk2key_freectx",
    "type": "CPP"
  },
  {
    "name": "t _pvk2key_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _pvk2key_decode",
    "type": "CPP"
  },
  {
    "name": "t _pvk2key_export_object",
    "type": "CPP"
  },
  {
    "name": "t _pvk2rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_adjust",
    "type": "CPP"
  },
  {
    "name": "t _spki2typespki_newctx",
    "type": "CPP"
  },
  {
    "name": "t _spki2typespki_freectx",
    "type": "CPP"
  },
  {
    "name": "t _spki2typespki_decode",
    "type": "CPP"
  },
  {
    "name": "t _key2any_newctx",
    "type": "CPP"
  },
  {
    "name": "t _key2any_freectx",
    "type": "CPP"
  },
  {
    "name": "t _key2any_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _key2any_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_type_specific_keypair_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_type_specific_params_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_type_specific_params_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_type_specific_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_type_specific_no_pub_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_type_specific_no_pub_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed448_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x25519_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_EncryptedPrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_PrivateKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x448_to_SubjectPublicKeyInfo_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_RSA_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_DH_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_DHX_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa_to_DSA_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_EC_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm2_to_SM2_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_PKCS1_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_to_PKCS1_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_PKCS3_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx_to_X9_42_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_der_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_der_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_der_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_der_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_pem_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_pem_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_pem_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_X9_62_pem_encode",
    "type": "CPP"
  },
  {
    "name": "t _key2any_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa_check_key_type",
    "type": "CPP"
  },
  {
    "name": "t _key_to_type_specific_der_bio",
    "type": "CPP"
  },
  {
    "name": "t _prepare_rsa_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_check_key_type",
    "type": "CPP"
  },
  {
    "name": "t _dh_type_specific_params_to_der",
    "type": "CPP"
  },
  {
    "name": "t _prepare_dsa_params",
    "type": "CPP"
  },
  {
    "name": "t _prepare_ec_params",
    "type": "CPP"
  },
  {
    "name": "t _key_to_type_specific_pem_priv_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_type_specific_pem_pub_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_type_specific_pem_param_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_epki_der_priv_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_encp8",
    "type": "CPP"
  },
  {
    "name": "t _key_to_p8info",
    "type": "CPP"
  },
  {
    "name": "t _free_asn1_data",
    "type": "CPP"
  },
  {
    "name": "t _key_to_epki_pem_priv_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_pki_der_priv_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_pki_pem_priv_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_spki_der_pub_bio",
    "type": "CPP"
  },
  {
    "name": "t _key_to_pubkey",
    "type": "CPP"
  },
  {
    "name": "t _key_to_spki_pem_pub_bio",
    "type": "CPP"
  },
  {
    "name": "t _prepare_dh_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_pki_priv_to_der",
    "type": "CPP"
  },
  {
    "name": "t _dh_spki_pub_to_der",
    "type": "CPP"
  },
  {
    "name": "t _dsa_pki_priv_to_der",
    "type": "CPP"
  },
  {
    "name": "t _dsa_spki_pub_to_der",
    "type": "CPP"
  },
  {
    "name": "t _ec_pki_priv_to_der",
    "type": "CPP"
  },
  {
    "name": "t _ec_spki_pub_to_der",
    "type": "CPP"
  },
  {
    "name": "t _ecx_pki_priv_to_der",
    "type": "CPP"
  },
  {
    "name": "t _ecx_spki_pub_to_der",
    "type": "CPP"
  },
  {
    "name": "t _key2blob_newctx",
    "type": "CPP"
  },
  {
    "name": "t _key2blob_freectx",
    "type": "CPP"
  },
  {
    "name": "t _ec2blob_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _ec2blob_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec2blob_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec2blob_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm22blob_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _sm22blob_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm22blob_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm22blob_encode",
    "type": "CPP"
  },
  {
    "name": "t _key2blob_encode",
    "type": "CPP"
  },
  {
    "name": "t _key2ms_newctx",
    "type": "CPP"
  },
  {
    "name": "t _key2ms_freectx",
    "type": "CPP"
  },
  {
    "name": "t _key2pvk_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _key2pvk_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _key2ms_does_selection",
    "type": "CPP"
  },
  {
    "name": "t _dsa2pvk_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2pvk_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2pvk_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa2msblob_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2msblob_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2msblob_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa2pvk_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2pvk_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2pvk_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa2msblob_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2msblob_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2msblob_encode",
    "type": "CPP"
  },
  {
    "name": "t _key2pvk_encode",
    "type": "CPP"
  },
  {
    "name": "t _key2text_newctx",
    "type": "CPP"
  },
  {
    "name": "t _key2text_freectx",
    "type": "CPP"
  },
  {
    "name": "t _dh2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dh2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dh2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _dhx2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dhx2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _dsa2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _dsa2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _ec2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ec2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ec2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _sm22text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _sm22text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _sm22text_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed255192text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed255192text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed255192text_encode",
    "type": "CPP"
  },
  {
    "name": "t _ed4482text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _ed4482text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _ed4482text_encode",
    "type": "CPP"
  },
  {
    "name": "t _x255192text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x255192text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x255192text_encode",
    "type": "CPP"
  },
  {
    "name": "t _x4482text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _x4482text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _x4482text_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsa2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsa2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _rsapss2text_import_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss2text_free_object",
    "type": "CPP"
  },
  {
    "name": "t _rsapss2text_encode",
    "type": "CPP"
  },
  {
    "name": "t _dh_to_text",
    "type": "CPP"
  },
  {
    "name": "t _print_labeled_bignum",
    "type": "CPP"
  },
  {
    "name": "t _ffc_params_to_text",
    "type": "CPP"
  },
  {
    "name": "t _print_labeled_buf",
    "type": "CPP"
  },
  {
    "name": "t _ec_to_text",
    "type": "CPP"
  },
  {
    "name": "t _ecx_to_text",
    "type": "CPP"
  },
  {
    "name": "t _rsa_to_text",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_keymgmt_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_keymgmt_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_keymgmt_import",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_get_keymgmt_export",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_import_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_free_key",
    "type": "CPP"
  },
  {
    "name": "T _ossl_read_der",
    "type": "CPP"
  },
  {
    "name": "t _dh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _dh_init",
    "type": "CPP"
  },
  {
    "name": "t _dh_derive",
    "type": "CPP"
  },
  {
    "name": "t _dh_set_peer",
    "type": "CPP"
  },
  {
    "name": "t _dh_freectx",
    "type": "CPP"
  },
  {
    "name": "t _dh_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _dh_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_plain_derive",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_newctx",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_derive",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_set_peer",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_freectx",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdh_plain_derive",
    "type": "CPP"
  },
  {
    "name": "t _x25519_newctx",
    "type": "CPP"
  },
  {
    "name": "t _ecx_init",
    "type": "CPP"
  },
  {
    "name": "t _ecx_derive",
    "type": "CPP"
  },
  {
    "name": "t _ecx_set_peer",
    "type": "CPP"
  },
  {
    "name": "t _ecx_freectx",
    "type": "CPP"
  },
  {
    "name": "t _ecx_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _x448_newctx",
    "type": "CPP"
  },
  {
    "name": "t _ecx_newctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_newctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_init",
    "type": "CPP"
  },
  {
    "name": "t _kdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_freectx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_newctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_newctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_newctx",
    "type": "CPP"
  },
  {
    "name": "t _kdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_hkdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_3_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_3_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_3_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _HKDF_Extract",
    "type": "CPP"
  },
  {
    "name": "t _HKDF_Expand",
    "type": "CPP"
  },
  {
    "name": "t _hkdf_common_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _setinfo_fromparams",
    "type": "CPP"
  },
  {
    "name": "t _prov_tls13_hkdf_expand",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_new",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_free",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _derive",
    "type": "CPP"
  },
  {
    "name": "t _kbkdf_set_buffer",
    "type": "CPP"
  },
  {
    "name": "t _kmac_init",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_new",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_free",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cipher_init",
    "type": "CPP"
  },
  {
    "name": "t _krb5kdf_set_membuf",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_new_no_init",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_init",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pbkdf2_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pbkdf2_set_membuf",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_pkcs12_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _pkcs12kdf_set_membuf",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_scrypt_new_inner",
    "type": "CPP"
  },
  {
    "name": "t _set_digest",
    "type": "CPP"
  },
  {
    "name": "t _scryptBlockMix",
    "type": "CPP"
  },
  {
    "name": "t _scrypt_set_membuf",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_sshkdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sshkdf_set_membuf",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_new",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_free",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _x963kdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _SSKDF_hash_kdm",
    "type": "CPP"
  },
  {
    "name": "t _sskdf_set_buffer",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_new",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_dup",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_free",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_reset",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_derive",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kdf_tls1_prf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _tls1_prf_P_hash",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_new",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_dup",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_free",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_reset",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_derive",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _x942_encode_otherinfo",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_hash_kdm",
    "type": "CPP"
  },
  {
    "name": "t _der_encode_sharedinfo",
    "type": "CPP"
  },
  {
    "name": "t _x942kdf_set_buffer",
    "type": "CPP"
  },
  {
    "name": "t _find_alg_id",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_newctx",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_encapsulate_init",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_generate",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_decapsulate_init",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_recover",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_freectx",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsakem_init",
    "type": "CPP"
  },
  {
    "name": "t _dh_newdata",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_set_template",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _dh_load",
    "type": "CPP"
  },
  {
    "name": "t _dh_freedata",
    "type": "CPP"
  },
  {
    "name": "t _dh_get_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_set_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_has",
    "type": "CPP"
  },
  {
    "name": "t _dh_match",
    "type": "CPP"
  },
  {
    "name": "t _dh_validate",
    "type": "CPP"
  },
  {
    "name": "t _dh_import",
    "type": "CPP"
  },
  {
    "name": "t _dh_import_types",
    "type": "CPP"
  },
  {
    "name": "t _dh_export",
    "type": "CPP"
  },
  {
    "name": "t _dh_export_types",
    "type": "CPP"
  },
  {
    "name": "t _dh_dup",
    "type": "CPP"
  },
  {
    "name": "t _dhx_newdata",
    "type": "CPP"
  },
  {
    "name": "t _dhx_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _dhx_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _dhx_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _dhx_query_operation_name",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_init_base",
    "type": "CPP"
  },
  {
    "name": "t _dh_gen_common_set_params",
    "type": "CPP"
  },
  {
    "name": "t _dh_gencb",
    "type": "CPP"
  },
  {
    "name": "t _dsa_newdata",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen_set_template",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _dsa_load",
    "type": "CPP"
  },
  {
    "name": "t _dsa_freedata",
    "type": "CPP"
  },
  {
    "name": "t _dsa_get_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_has",
    "type": "CPP"
  },
  {
    "name": "t _dsa_match",
    "type": "CPP"
  },
  {
    "name": "t _dsa_validate",
    "type": "CPP"
  },
  {
    "name": "t _dsa_import",
    "type": "CPP"
  },
  {
    "name": "t _dsa_import_types",
    "type": "CPP"
  },
  {
    "name": "t _dsa_export",
    "type": "CPP"
  },
  {
    "name": "t _dsa_export_types",
    "type": "CPP"
  },
  {
    "name": "t _dsa_dup",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gencb",
    "type": "CPP"
  },
  {
    "name": "t _dsa_key_todata",
    "type": "CPP"
  },
  {
    "name": "t _ec_newdata",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_set_template",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _ec_load",
    "type": "CPP"
  },
  {
    "name": "t _ec_freedata",
    "type": "CPP"
  },
  {
    "name": "t _ec_get_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_has",
    "type": "CPP"
  },
  {
    "name": "t _ec_match",
    "type": "CPP"
  },
  {
    "name": "t _ec_validate",
    "type": "CPP"
  },
  {
    "name": "t _ec_import",
    "type": "CPP"
  },
  {
    "name": "t _ec_import_types",
    "type": "CPP"
  },
  {
    "name": "t _ec_export",
    "type": "CPP"
  },
  {
    "name": "t _ec_export_types",
    "type": "CPP"
  },
  {
    "name": "t _ec_query_operation_name",
    "type": "CPP"
  },
  {
    "name": "t _ec_dup",
    "type": "CPP"
  },
  {
    "name": "t _sm2_newdata",
    "type": "CPP"
  },
  {
    "name": "t _sm2_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2_gen",
    "type": "CPP"
  },
  {
    "name": "t _sm2_load",
    "type": "CPP"
  },
  {
    "name": "t _sm2_get_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2_validate",
    "type": "CPP"
  },
  {
    "name": "t _sm2_import",
    "type": "CPP"
  },
  {
    "name": "t _sm2_query_operation_name",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_set_group_from_params",
    "type": "CPP"
  },
  {
    "name": "t _ec_gen_assign_group",
    "type": "CPP"
  },
  {
    "name": "t _common_load",
    "type": "CPP"
  },
  {
    "name": "t _common_check_sm2",
    "type": "CPP"
  },
  {
    "name": "t _common_get_params",
    "type": "CPP"
  },
  {
    "name": "t _key_to_params",
    "type": "CPP"
  },
  {
    "name": "t _otherparams_to_params",
    "type": "CPP"
  },
  {
    "name": "t _common_import",
    "type": "CPP"
  },
  {
    "name": "t _x25519_new_key",
    "type": "CPP"
  },
  {
    "name": "t _x25519_get_params",
    "type": "CPP"
  },
  {
    "name": "t _x25519_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _x25519_set_params",
    "type": "CPP"
  },
  {
    "name": "t _x25519_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _ecx_has",
    "type": "CPP"
  },
  {
    "name": "t _ecx_match",
    "type": "CPP"
  },
  {
    "name": "t _x25519_validate",
    "type": "CPP"
  },
  {
    "name": "t _ecx_import",
    "type": "CPP"
  },
  {
    "name": "t _ecx_imexport_types",
    "type": "CPP"
  },
  {
    "name": "t _ecx_export",
    "type": "CPP"
  },
  {
    "name": "t _x25519_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _ecx_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ecx_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _x25519_gen",
    "type": "CPP"
  },
  {
    "name": "t _ecx_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _ecx_load",
    "type": "CPP"
  },
  {
    "name": "t _ecx_dup",
    "type": "CPP"
  },
  {
    "name": "t _x448_new_key",
    "type": "CPP"
  },
  {
    "name": "t _x448_get_params",
    "type": "CPP"
  },
  {
    "name": "t _x448_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _x448_set_params",
    "type": "CPP"
  },
  {
    "name": "t _x448_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _x448_validate",
    "type": "CPP"
  },
  {
    "name": "t _x448_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _x448_gen",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_new_key",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_get_params",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_validate",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_gen",
    "type": "CPP"
  },
  {
    "name": "t _ed448_new_key",
    "type": "CPP"
  },
  {
    "name": "t _ed448_get_params",
    "type": "CPP"
  },
  {
    "name": "t _ed448_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _ed448_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ed448_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _ed448_validate",
    "type": "CPP"
  },
  {
    "name": "t _ed448_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _ed448_gen",
    "type": "CPP"
  },
  {
    "name": "t _ecx_get_params",
    "type": "CPP"
  },
  {
    "name": "t _key_to_params",
    "type": "CPP"
  },
  {
    "name": "t _ecx_set_params",
    "type": "CPP"
  },
  {
    "name": "t _ecx_validate",
    "type": "CPP"
  },
  {
    "name": "t _ecx_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _ecx_gen",
    "type": "CPP"
  },
  {
    "name": "t _ed_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_kdf_data_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_kdf_data_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_kdf_data_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _kdf_newdata",
    "type": "CPP"
  },
  {
    "name": "t _kdf_freedata",
    "type": "CPP"
  },
  {
    "name": "t _kdf_has",
    "type": "CPP"
  },
  {
    "name": "T _ossl_mac_key_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_mac_key_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_mac_key_up_ref",
    "type": "CPP"
  },
  {
    "name": "t _mac_new",
    "type": "CPP"
  },
  {
    "name": "t _mac_free",
    "type": "CPP"
  },
  {
    "name": "t _mac_get_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_set_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_has",
    "type": "CPP"
  },
  {
    "name": "t _mac_match",
    "type": "CPP"
  },
  {
    "name": "t _mac_import",
    "type": "CPP"
  },
  {
    "name": "t _mac_imexport_types",
    "type": "CPP"
  },
  {
    "name": "t _mac_export",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _mac_new_cmac",
    "type": "CPP"
  },
  {
    "name": "t _cmac_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_imexport_types",
    "type": "CPP"
  },
  {
    "name": "t _cmac_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _cmac_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _key_to_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_key_fromdata",
    "type": "CPP"
  },
  {
    "name": "t _mac_gen_init_common",
    "type": "CPP"
  },
  {
    "name": "t _rsa_newdata",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gen_set_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gen",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gen_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _rsa_load",
    "type": "CPP"
  },
  {
    "name": "t _rsa_freedata",
    "type": "CPP"
  },
  {
    "name": "t _rsa_get_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_has",
    "type": "CPP"
  },
  {
    "name": "t _rsa_match",
    "type": "CPP"
  },
  {
    "name": "t _rsa_validate",
    "type": "CPP"
  },
  {
    "name": "t _rsa_import",
    "type": "CPP"
  },
  {
    "name": "t _rsa_import_types",
    "type": "CPP"
  },
  {
    "name": "t _rsa_export",
    "type": "CPP"
  },
  {
    "name": "t _rsa_export_types",
    "type": "CPP"
  },
  {
    "name": "t _rsa_dup",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_newdata",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_gen_init",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_gen_settable_params",
    "type": "CPP"
  },
  {
    "name": "t _rsapss_load",
    "type": "CPP"
  },
  {
    "name": "t _rsa_query_operation_name",
    "type": "CPP"
  },
  {
    "name": "t _gen_init",
    "type": "CPP"
  },
  {
    "name": "t _pss_params_fromdata",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gencb",
    "type": "CPP"
  },
  {
    "name": "t _common_load",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_new",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_dup",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_free",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_final",
    "type": "CPP"
  },
  {
    "name": "t _blake2_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_setkey",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_new",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_dup",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_free",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_init",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_update",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_final",
    "type": "CPP"
  },
  {
    "name": "t _blake2_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_mac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _blake2_setkey",
    "type": "CPP"
  },
  {
    "name": "t _cmac_new",
    "type": "CPP"
  },
  {
    "name": "t _cmac_dup",
    "type": "CPP"
  },
  {
    "name": "t _cmac_free",
    "type": "CPP"
  },
  {
    "name": "t _cmac_init",
    "type": "CPP"
  },
  {
    "name": "t _cmac_update",
    "type": "CPP"
  },
  {
    "name": "t _cmac_final",
    "type": "CPP"
  },
  {
    "name": "t _cmac_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _cmac_setkey",
    "type": "CPP"
  },
  {
    "name": "t _gmac_new",
    "type": "CPP"
  },
  {
    "name": "t _gmac_dup",
    "type": "CPP"
  },
  {
    "name": "t _gmac_free",
    "type": "CPP"
  },
  {
    "name": "t _gmac_init",
    "type": "CPP"
  },
  {
    "name": "t _gmac_update",
    "type": "CPP"
  },
  {
    "name": "t _gmac_final",
    "type": "CPP"
  },
  {
    "name": "t _gmac_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _gmac_get_params",
    "type": "CPP"
  },
  {
    "name": "t _gmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _gmac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _gmac_setkey",
    "type": "CPP"
  },
  {
    "name": "t _hmac_new",
    "type": "CPP"
  },
  {
    "name": "t _hmac_dup",
    "type": "CPP"
  },
  {
    "name": "t _hmac_free",
    "type": "CPP"
  },
  {
    "name": "t _hmac_init",
    "type": "CPP"
  },
  {
    "name": "t _hmac_update",
    "type": "CPP"
  },
  {
    "name": "t _hmac_final",
    "type": "CPP"
  },
  {
    "name": "t _hmac_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _hmac_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _hmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _hmac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _hmac_setkey",
    "type": "CPP"
  },
  {
    "name": "t _set_flag",
    "type": "CPP"
  },
  {
    "name": "t _kmac128_new",
    "type": "CPP"
  },
  {
    "name": "t _kmac_dup",
    "type": "CPP"
  },
  {
    "name": "t _kmac_free",
    "type": "CPP"
  },
  {
    "name": "t _kmac_init",
    "type": "CPP"
  },
  {
    "name": "t _kmac_update",
    "type": "CPP"
  },
  {
    "name": "t _kmac_final",
    "type": "CPP"
  },
  {
    "name": "t _kmac_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kmac_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kmac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _kmac256_new",
    "type": "CPP"
  },
  {
    "name": "t _kmac_fetch_new",
    "type": "CPP"
  },
  {
    "name": "t _kmac_new",
    "type": "CPP"
  },
  {
    "name": "t _kmac_setkey",
    "type": "CPP"
  },
  {
    "name": "t _bytepad",
    "type": "CPP"
  },
  {
    "name": "t _encode_string",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_new",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_dup",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_free",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_init",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_update",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_final",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_gettable_params",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_get_params",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _poly1305_setkey",
    "type": "CPP"
  },
  {
    "name": "t _siphash_new",
    "type": "CPP"
  },
  {
    "name": "t _siphash_dup",
    "type": "CPP"
  },
  {
    "name": "t _siphash_free",
    "type": "CPP"
  },
  {
    "name": "t _siphash_init",
    "type": "CPP"
  },
  {
    "name": "t _siphash_update",
    "type": "CPP"
  },
  {
    "name": "t _siphash_final",
    "type": "CPP"
  },
  {
    "name": "t _siphash_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _siphash_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _siphash_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _siphash_set_params",
    "type": "CPP"
  },
  {
    "name": "t _siphash_setkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_crng_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_crng_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crngt_get_entropy",
    "type": "CPP"
  },
  {
    "name": "t _crngt_get_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_crngt_cleanup_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_lock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_unlock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_get_seed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_generate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_clear_seed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_nonce_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_nonce_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _prov_drbg_get_nonce",
    "type": "CPP"
  },
  {
    "name": "t _get_entropy",
    "type": "CPP"
  },
  {
    "name": "t _cleanup_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_drbg_reseed",
    "type": "CPP"
  },
  {
    "name": "t _rand_drbg_restart",
    "type": "CPP"
  },
  {
    "name": "t _get_parent_reseed_count",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_enable_locking",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_drbg_new",
    "type": "CPP"
  },
  {
    "name": "t _get_parent_strength",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_drbg_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_drbg_verify_digest",
    "type": "CPP"
  },
  {
    "name": "t _ossl_drbg_lock_parent",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_new_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_free",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_instantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_uninstantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_generate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_reseed_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_new",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_reseed",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_generate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_ctr_init_lengths",
    "type": "CPP"
  },
  {
    "name": "t _ctr_update",
    "type": "CPP"
  },
  {
    "name": "t _ctr_XOR",
    "type": "CPP"
  },
  {
    "name": "t _ctr_BCC_update",
    "type": "CPP"
  },
  {
    "name": "t _ctr_BCC_block",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_new_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_free",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_instantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_uninstantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_generate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_reseed_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_new",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_reseed",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hash_generate",
    "type": "CPP"
  },
  {
    "name": "t _hash_df",
    "type": "CPP"
  },
  {
    "name": "t _add_hash_to_v",
    "type": "CPP"
  },
  {
    "name": "t _add_bytes",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_new_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_free",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_instantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_uninstantiate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_generate_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_reseed_wrapper",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_new",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_reseed",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_generate",
    "type": "CPP"
  },
  {
    "name": "t _drbg_hmac_update",
    "type": "CPP"
  },
  {
    "name": "t _do_hmac",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_new",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_free",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_generate",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_reseed",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_enable_locking",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_lock",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_unlock",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _seed_src_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "t _seed_get_seed",
    "type": "CPP"
  },
  {
    "name": "t _seed_clear_seed",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_new",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_free",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_instantiate",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_uninstantiate",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_generate",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_reseed",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_nonce",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_enable_locking",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_lock",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_unlock",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_verify_zeroization",
    "type": "CPP"
  },
  {
    "name": "t _test_rng_get_seed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _close_random_device",
    "type": "CPP"
  },
  {
    "name": "T _ossl_rand_pool_keep_random_devices_open",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pool_acquire_entropy",
    "type": "CPP"
  },
  {
    "name": "T _ossl_pool_add_nonce_data",
    "type": "CPP"
  },
  {
    "name": "t _check_random_device",
    "type": "CPP"
  },
  {
    "name": "t _dsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _dsa_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_sign",
    "type": "CPP"
  },
  {
    "name": "t _dsa_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_verify",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_signverify_update",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_sign_final",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_verify_final",
    "type": "CPP"
  },
  {
    "name": "t _dsa_freectx",
    "type": "CPP"
  },
  {
    "name": "t _dsa_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _dsa_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_get_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_gettable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_set_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_settable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _dsa_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_digest_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _dsa_setup_md",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_sign",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_verify",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_signverify_update",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_sign_final",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_verify_final",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_freectx",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_get_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_gettable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_set_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_settable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_digest_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _ecdsa_setup_md",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_digest_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_digest_sign",
    "type": "CPP"
  },
  {
    "name": "t _ed25519_digest_verify",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_freectx",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _eddsa_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _ed448_digest_sign",
    "type": "CPP"
  },
  {
    "name": "t _ed448_digest_verify",
    "type": "CPP"
  },
  {
    "name": "t _mac_hmac_newctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_digest_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _mac_digest_sign_update",
    "type": "CPP"
  },
  {
    "name": "t _mac_digest_sign_final",
    "type": "CPP"
  },
  {
    "name": "t _mac_freectx",
    "type": "CPP"
  },
  {
    "name": "t _mac_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_hmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_siphash_newctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_siphash_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_poly1305_newctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_poly1305_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_cmac_newctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_cmac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _mac_newctx",
    "type": "CPP"
  },
  {
    "name": "t _mac_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_newctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_sign",
    "type": "CPP"
  },
  {
    "name": "t _rsa_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_verify",
    "type": "CPP"
  },
  {
    "name": "t _rsa_verify_recover_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_verify_recover",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_sign_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_signverify_update",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_sign_final",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_verify_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_verify_final",
    "type": "CPP"
  },
  {
    "name": "t _rsa_freectx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _rsa_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_get_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_gettable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_set_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_settable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _rsa_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _rsa_setup_mgf1_md",
    "type": "CPP"
  },
  {
    "name": "t _rsa_setup_md",
    "type": "CPP"
  },
  {
    "name": "t _rsa_check_parameters",
    "type": "CPP"
  },
  {
    "name": "t _rsa_check_padding",
    "type": "CPP"
  },
  {
    "name": "t _setup_tbuf",
    "type": "CPP"
  },
  {
    "name": "t _clean_tbuf",
    "type": "CPP"
  },
  {
    "name": "t _rsa_digest_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_newctx",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_signature_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_sign",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_verify",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_digest_signverify_init",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_digest_signverify_update",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_digest_sign_final",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_digest_verify_final",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_freectx",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_dupctx",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_get_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_gettable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_set_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_settable_ctx_md_params",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_set_mdname",
    "type": "CPP"
  },
  {
    "name": "t _sm2sig_compute_z_digest",
    "type": "CPP"
  },
  {
    "name": "t _file_open",
    "type": "CPP"
  },
  {
    "name": "t _file_attach",
    "type": "CPP"
  },
  {
    "name": "t _file_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _file_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _file_load",
    "type": "CPP"
  },
  {
    "name": "t _file_eof",
    "type": "CPP"
  },
  {
    "name": "t _file_close",
    "type": "CPP"
  },
  {
    "name": "t _file_open_stream",
    "type": "CPP"
  },
  {
    "name": "t _new_file_ctx",
    "type": "CPP"
  },
  {
    "name": "t _free_file_ctx",
    "type": "CPP"
  },
  {
    "name": "t _file_load_construct",
    "type": "CPP"
  },
  {
    "name": "t _file_load_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _any2obj_newctx",
    "type": "CPP"
  },
  {
    "name": "t _any2obj_freectx",
    "type": "CPP"
  },
  {
    "name": "t _der2obj_decode",
    "type": "CPP"
  },
  {
    "name": "t _any2obj_decode_final",
    "type": "CPP"
  },
  {
    "name": "t _msblob2obj_decode",
    "type": "CPP"
  },
  {
    "name": "t _pvk2obj_decode",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_cbc_digest_record",
    "type": "CPP"
  },
  {
    "name": "t _tls1_md5_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha1_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha256_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha512_final_raw",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_DSA_with_MD",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_ECDSA_with_MD",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_X25519",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_X448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_ED25519",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_ED448",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_RSASSA_PSS_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_RSA_PSS",
    "type": "CPP"
  },
  {
    "name": "T _ossl_DER_w_algorithmIdentifier_RSA",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_new",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_set0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_set0_handle",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_set0_core_bio_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_get0_libctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_get0_handle",
    "type": "CPP"
  },
  {
    "name": "T _ossl_prov_ctx_get0_core_bio_method",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_PROV_strings",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_gettable_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_get_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_var_keylen_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_var_keylen_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_aead_gettable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_aead_settable_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_reset_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_einit",
    "type": "CPP"
  },
  {
    "name": "t _cipher_generic_init_internal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_dinit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_block_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_block_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_stream_update",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_stream_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_initiv",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_generic_initkey",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_fillblock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_trailingdata",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_padblock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_unpadblock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_cipher_tlsunpadblock",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_einit",
    "type": "CPP"
  },
  {
    "name": "t _ccm_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_dinit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_stream_update",
    "type": "CPP"
  },
  {
    "name": "t _ccm_cipher_internal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_stream_final",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_initctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_generic_setiv",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_generic_setaad",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_generic_gettag",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_generic_auth_encrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_ccm_generic_auth_decrypt",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gcm_initctx",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gcm_einit",
    "type": "CPP"
  },
  {
    "name": "t _gcm_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gcm_dinit",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gcm_get_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _getivgen",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gcm_set_ctx_params",
    "type": "CPP"
  },
  {
    "name": "t _setivinv",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/openssl@3/3.1.4/lib/libssl.3.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _WPACKET_allocate_bytes",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_reserve_bytes",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_allocate_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_start_sub_packet_len__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_close",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_curr",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_reserve_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_static_len",
    "type": "CPP"
  },
  {
    "name": "t _wpacket_intern_init_len",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_der",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_len",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_null",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_init_null_der",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_fill_lengths",
    "type": "CPP"
  },
  {
    "name": "t _wpacket_intern_close",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_finish",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_start_sub_packet",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_put_bytes__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_set_max_size",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_memset",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_memcpy",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_sub_memcpy__",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_total_written",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_get_length",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_is_null_buf",
    "type": "CPP"
  },
  {
    "name": "T _WPACKET_cleanup",
    "type": "CPP"
  },
  {
    "name": "T _BIO_f_ssl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_buffer_ssl_connect",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_ssl_connect",
    "type": "CPP"
  },
  {
    "name": "T _BIO_new_ssl",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ssl_copy_session_id",
    "type": "CPP"
  },
  {
    "name": "T _BIO_ssl_shutdown",
    "type": "CPP"
  },
  {
    "name": "t _ssl_write",
    "type": "CPP"
  },
  {
    "name": "t _ssl_read",
    "type": "CPP"
  },
  {
    "name": "t _ssl_puts",
    "type": "CPP"
  },
  {
    "name": "t _ssl_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _ssl_new",
    "type": "CPP"
  },
  {
    "name": "t _ssl_free",
    "type": "CPP"
  },
  {
    "name": "t _ssl_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _dtls1_handshake_write",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_default_timeout",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_new",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_clear_received_buffer",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_clear_sent_buffer",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_free",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_clear",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_get_timeout",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_handle_timeout",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_start_timer",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_is_timer_expired",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_stop_timer",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_check_timeout_num",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_listen",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_query_mtu",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_min_mtu",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_get_data_mtu",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_set_timer_cb",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_write_app_data_bytes",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_dispatch_alert",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_tlsext_use_srtp",
    "type": "CPP"
  },
  {
    "name": "t _ssl_ctx_make_profiles",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_tlsext_use_srtp",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_srtp_profiles",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_selected_srtp_profile",
    "type": "CPP"
  },
  {
    "name": "T _TLS_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_3_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_2_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_1_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_method",
    "type": "CPP"
  },
  {
    "name": "T _TLS_server_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_3_server_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_2_server_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _TLS_client_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_3_client_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_2_client_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _tlsv1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_2_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_2_server_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_server_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _dtls_bad_ver_client_method",
    "type": "CPP"
  },
  {
    "name": "T _dtlsv1_2_client_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_client_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_2_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_2_server_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_2_client_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_1_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _TLSv1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_2_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_2_server_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_2_client_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_server_method",
    "type": "CPP"
  },
  {
    "name": "T _DTLSv1_client_method",
    "type": "CPP"
  },
  {
    "name": "T _pitem_new",
    "type": "CPP"
  },
  {
    "name": "T _pitem_free",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_new",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_free",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_insert",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_peek",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_pop",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_find",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_iterator",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_next",
    "type": "CPP"
  },
  {
    "name": "T _pqueue_size",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_cbc_digest_record",
    "type": "CPP"
  },
  {
    "name": "t _tls1_md5_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha1_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha256_final_raw",
    "type": "CPP"
  },
  {
    "name": "t _tls1_sha512_final_raw",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_change_cipher_state",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_setup_key_block",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_cleanup_key_block",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_init_finished_mac",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_free_digest_list",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_finish_mac",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_digest_cached_records",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_digest_master_key_set_params",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_final_finish_mac",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_generate_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_alert_code",
    "type": "CPP"
  },
  {
    "name": "T _ssl_sort_cipher_list",
    "type": "CPP"
  },
  {
    "name": "t _cipher_compare",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_1",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_set_handshake_header",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_handshake_write",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_default_timeout",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_num_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_new",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_clear",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _ssl3_set_req_cert_type",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_ctx_ctrl",
    "type": "CPP"
  },
  {
    "name": "t _srp_password_from_info_cb",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_ctx_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_tlsext_ticket_key_evp_cb",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_cipher_by_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_cipher_by_std_name",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_cipher_by_char",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_put_cipher_by_char",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_choose_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_req_cert_type",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_write",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_renegotiate_check",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_read",
    "type": "CPP"
  },
  {
    "name": "t _ssl3_read_internal",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_peek",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_algorithm2",
    "type": "CPP"
  },
  {
    "name": "T _ssl_fill_hello_random",
    "type": "CPP"
  },
  {
    "name": "T _ssl_generate_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _ssl_generate_pkey",
    "type": "CPP"
  },
  {
    "name": "T _ssl_generate_pkey_group",
    "type": "CPP"
  },
  {
    "name": "T _ssl_generate_param_group",
    "type": "CPP"
  },
  {
    "name": "T _ssl_gensecret",
    "type": "CPP"
  },
  {
    "name": "T _ssl_derive",
    "type": "CPP"
  },
  {
    "name": "T _ssl_decapsulate",
    "type": "CPP"
  },
  {
    "name": "T _ssl_encapsulate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_group_to_name",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_do_change_cipher_spec",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_send_alert",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_dispatch_alert",
    "type": "CPP"
  },
  {
    "name": "T _i2d_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "T _d2i_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "t _ssl_session_memcpy",
    "type": "CPP"
  },
  {
    "name": "t _ssl_session_strndup",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_ex_data_X509_STORE_CTX_idx",
    "type": "CPP"
  },
  {
    "name": "t _ssl_x509_store_ctx_init_ossl_",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_new",
    "type": "CPP"
  },
  {
    "name": "t _ssl_security_default_callback",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_dup",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_clear_certs",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_set0_chain",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_set1_chain",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_add0_chain_cert",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_add1_chain_cert",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_select_current",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_set_current",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_set_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _ssl_verify_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dup_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set0_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set0_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_client_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_client_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_client_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_peer_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_client_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add1_to_CA_list",
    "type": "CPP"
  },
  {
    "name": "t _add_ca_name",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add1_to_CA_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add_client_CA",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add_client_CA",
    "type": "CPP"
  },
  {
    "name": "T _SSL_load_client_CA_file_ex",
    "type": "CPP"
  },
  {
    "name": "t _xname_hash",
    "type": "CPP"
  },
  {
    "name": "t _xname_cmp",
    "type": "CPP"
  },
  {
    "name": "T _SSL_load_client_CA_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add_file_cert_subjects_to_stack",
    "type": "CPP"
  },
  {
    "name": "t _xname_sk_cmp",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add_dir_cert_subjects_to_stack",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add_store_cert_subjects_to_stack",
    "type": "CPP"
  },
  {
    "name": "t _add_uris_recursive",
    "type": "CPP"
  },
  {
    "name": "T _ssl_build_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_set_cert_store",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_get_cert_store",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_security_level_bits",
    "type": "CPP"
  },
  {
    "name": "T _ssl_security",
    "type": "CPP"
  },
  {
    "name": "T _ssl_ctx_security",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_lookup_by_nid",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_lookup_by_pkey",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_lookup_by_idx",
    "type": "CPP"
  },
  {
    "name": "T _ssl_load_ciphers",
    "type": "CPP"
  },
  {
    "name": "t _get_optional_pkey_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_get_evp_cipher",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_get_evp",
    "type": "CPP"
  },
  {
    "name": "T _ssl_md",
    "type": "CPP"
  },
  {
    "name": "T _ssl_handshake_md",
    "type": "CPP"
  },
  {
    "name": "T _ssl_prf_md",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_ciphersuites",
    "type": "CPP"
  },
  {
    "name": "t _set_ciphersuites",
    "type": "CPP"
  },
  {
    "name": "t _update_cipher_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_ciphersuites",
    "type": "CPP"
  },
  {
    "name": "T _ssl_create_cipher_list",
    "type": "CPP"
  },
  {
    "name": "t _ssl_cipher_apply_rule",
    "type": "CPP"
  },
  {
    "name": "t _ssl_cipher_strength_sort",
    "type": "CPP"
  },
  {
    "name": "t _ssl_cipher_process_rulestr",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_default_cipher_list",
    "type": "CPP"
  },
  {
    "name": "t _update_cipher_list_by_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_description",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_name",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_standard_name",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_cipher_name",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_bits",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_protocol_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_comp_find",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_get_compression_methods",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_set0_compression_methods",
    "type": "CPP"
  },
  {
    "name": "T _ssl_comp_free_compression_methods_int",
    "type": "CPP"
  },
  {
    "name": "t _cmeth_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_add_compression_method",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_get_name",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_get0_name",
    "type": "CPP"
  },
  {
    "name": "T _SSL_COMP_get_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_cipher_by_char",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_find",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_cipher_nid",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_digest_nid",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_kx_nid",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_auth_nid",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_get_handshake_digest",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CIPHER_is_aead",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_get_overhead",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cert_is_disabled",
    "type": "CPP"
  },
  {
    "name": "T _OSSL_default_ciphersuites",
    "type": "CPP"
  },
  {
    "name": "t _do_load_builtin_compressions_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _sk_comp_cmp",
    "type": "CPP"
  },
  {
    "name": "t _ciphersuite_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_cmd",
    "type": "CPP"
  },
  {
    "name": "t _ssl_conf_cmd_skip_prefix",
    "type": "CPP"
  },
  {
    "name": "t _ssl_conf_cmd_lookup",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_cmd_argv",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_cmd_value_type",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_finish",
    "type": "CPP"
  },
  {
    "name": "t _cmd_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_set1_prefix",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_set_ssl",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CONF_CTX_set_ssl_ctx",
    "type": "CPP"
  },
  {
    "name": "t _cmd_SignatureAlgorithms",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ClientSignatureAlgorithms",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Curves",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Groups",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ECDHParameters",
    "type": "CPP"
  },
  {
    "name": "t _cmd_CipherString",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Ciphersuites",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Protocol",
    "type": "CPP"
  },
  {
    "name": "t _cmd_MinProtocol",
    "type": "CPP"
  },
  {
    "name": "t _cmd_MaxProtocol",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Options",
    "type": "CPP"
  },
  {
    "name": "t _cmd_VerifyMode",
    "type": "CPP"
  },
  {
    "name": "t _cmd_Certificate",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ServerInfoFile",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ChainCAPath",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ChainCAFile",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ChainCAStore",
    "type": "CPP"
  },
  {
    "name": "t _cmd_VerifyCAPath",
    "type": "CPP"
  },
  {
    "name": "t _cmd_VerifyCAFile",
    "type": "CPP"
  },
  {
    "name": "t _cmd_VerifyCAStore",
    "type": "CPP"
  },
  {
    "name": "t _cmd_RequestCAFile",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ClientCAFile",
    "type": "CPP"
  },
  {
    "name": "t _cmd_RequestCAPath",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ClientCAPath",
    "type": "CPP"
  },
  {
    "name": "t _cmd_RequestCAStore",
    "type": "CPP"
  },
  {
    "name": "t _cmd_ClientCAStore",
    "type": "CPP"
  },
  {
    "name": "t _cmd_DHParameters",
    "type": "CPP"
  },
  {
    "name": "t _cmd_RecordPadding",
    "type": "CPP"
  },
  {
    "name": "t _cmd_NumTickets",
    "type": "CPP"
  },
  {
    "name": "t _ssl_set_option_list",
    "type": "CPP"
  },
  {
    "name": "t _ssl_set_option",
    "type": "CPP"
  },
  {
    "name": "t _min_max_proto",
    "type": "CPP"
  },
  {
    "name": "t _do_store",
    "type": "CPP"
  },
  {
    "name": "T _ossl_err_load_SSL_strings",
    "type": "CPP"
  },
  {
    "name": "T _ERR_load_SSL_strings",
    "type": "CPP"
  },
  {
    "name": "T _OPENSSL_init_ssl",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_ssl_base_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_no_load_ssl_strings_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ossl_init_load_ssl_strings_ossl_",
    "type": "CPP"
  },
  {
    "name": "t _ssl_library_stop",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_1",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_2",
    "type": "CPP"
  },
  {
    "name": "T _ssl_undefined_function",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_3",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_4",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_5",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_6",
    "type": "CPP"
  },
  {
    "name": "t _ssl_undefined_function_7",
    "type": "CPP"
  },
  {
    "name": "T _SSL_clear",
    "type": "CPP"
  },
  {
    "name": "t _clear_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_ssl_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_new",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_ct_validation_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_is_dtls",
    "type": "CPP"
  },
  {
    "name": "T _SSL_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_session_id_context",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_session_id_context",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_generate_session_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_generate_session_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_has_matching_session_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_purpose",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_purpose",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_trust",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_trust",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set1_host",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add1_host",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_hostflags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_peername",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_dane_enable",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_dane_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_dane_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dane_enable",
    "type": "CPP"
  },
  {
    "name": "T _SSL_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dane_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dane_clear_flags",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_dane_authority",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_dane_tlsa",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_dane",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dane_tlsa_add",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_dane_mtype_set",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set1_param",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set1_param",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_param",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_param",
    "type": "CPP"
  },
  {
    "name": "T _SSL_certs_clear",
    "type": "CPP"
  },
  {
    "name": "t _dane_final",
    "type": "CPP"
  },
  {
    "name": "T _ssl_free_wbio_buffer",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set0_rbio",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set0_wbio",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_bio",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_rbio",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_wbio",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_rfd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_wfd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_fd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_wfd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_rfd",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_finished",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_peer_finished",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_verify_mode",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_verify_depth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_verify_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_verify_mode",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_verify_depth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_verify_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_verify_depth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_read_ahead",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_read_ahead",
    "type": "CPP"
  },
  {
    "name": "T _SSL_pending",
    "type": "CPP"
  },
  {
    "name": "T _SSL_has_pending",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get1_peer_certificate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_peer_certificate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_peer_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _SSL_copy_session_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_check_private_key",
    "type": "CPP"
  },
  {
    "name": "T _SSL_check_private_key",
    "type": "CPP"
  },
  {
    "name": "T _SSL_waiting_for_async",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_all_async_fds",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_changed_async_fds",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_async_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_async_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_async_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_async_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_async_status",
    "type": "CPP"
  },
  {
    "name": "T _SSL_accept",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_accept_state",
    "type": "CPP"
  },
  {
    "name": "T _SSL_do_handshake",
    "type": "CPP"
  },
  {
    "name": "T _SSL_connect",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_connect_state",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_default_timeout",
    "type": "CPP"
  },
  {
    "name": "T _ssl_read_internal",
    "type": "CPP"
  },
  {
    "name": "t _ssl_start_async_job",
    "type": "CPP"
  },
  {
    "name": "t _ssl_io_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_read",
    "type": "CPP"
  },
  {
    "name": "T _SSL_read_ex",
    "type": "CPP"
  },
  {
    "name": "T _SSL_read_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_early_data_status",
    "type": "CPP"
  },
  {
    "name": "T _SSL_peek",
    "type": "CPP"
  },
  {
    "name": "t _ssl_peek_internal",
    "type": "CPP"
  },
  {
    "name": "T _SSL_peek_ex",
    "type": "CPP"
  },
  {
    "name": "T _ssl_write_internal",
    "type": "CPP"
  },
  {
    "name": "T _SSL_sendfile",
    "type": "CPP"
  },
  {
    "name": "T _SSL_write",
    "type": "CPP"
  },
  {
    "name": "T _SSL_write_ex",
    "type": "CPP"
  },
  {
    "name": "T _SSL_write_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_key_update",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_key_update_type",
    "type": "CPP"
  },
  {
    "name": "T _SSL_renegotiate",
    "type": "CPP"
  },
  {
    "name": "t _can_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_renegotiate_abbreviated",
    "type": "CPP"
  },
  {
    "name": "T _SSL_renegotiate_pending",
    "type": "CPP"
  },
  {
    "name": "T _SSL_new_session_ticket",
    "type": "CPP"
  },
  {
    "name": "t _ssl_check_allowed_versions",
    "type": "CPP"
  },
  {
    "name": "T _SSL_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sessions",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_callback_ctrl",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_id_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_ptr_id_cmp",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_client_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get1_supported_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_ciphers_by_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_cipher_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cipher_list",
    "type": "CPP"
  },
  {
    "name": "t _cipher_list_tls12_num",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_cipher_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_shared_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_servername",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_servername_type",
    "type": "CPP"
  },
  {
    "name": "T _SSL_select_next_proto",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_next_proto_negotiated",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_next_protos_advertised_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_next_proto_select_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_alpn_protos",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_alpn_protos",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_alpn_select_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_alpn_selected",
    "type": "CPP"
  },
  {
    "name": "T _SSL_export_keying_material",
    "type": "CPP"
  },
  {
    "name": "T _SSL_export_keying_material_early",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_new_ex",
    "type": "CPP"
  },
  {
    "name": "t _ssl_session_hash",
    "type": "CPP"
  },
  {
    "name": "t _ssl_session_cmp",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_md_fetch",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_new",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_md_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_cipher_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_passwd_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_passwd_cb_userdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_default_passwd_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_default_passwd_cb_userdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_default_passwd_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_default_passwd_cb_userdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_default_passwd_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_default_passwd_cb_userdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cert_verify_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_verify",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_verify_depth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_masks",
    "type": "CPP"
  },
  {
    "name": "T _SSL_version",
    "type": "CPP"
  },
  {
    "name": "T _ssl_check_srvr_ecc_cert_and_alg",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_server_cert_serverinfo",
    "type": "CPP"
  },
  {
    "name": "T _ssl_update_cache",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_ssl_method",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_ssl_method",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_ssl_method",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_error",
    "type": "CPP"
  },
  {
    "name": "T _SSL_want",
    "type": "CPP"
  },
  {
    "name": "t _ssl_do_handshake_intern",
    "type": "CPP"
  },
  {
    "name": "T _ssl_undefined_void_function",
    "type": "CPP"
  },
  {
    "name": "T _ssl_undefined_const_function",
    "type": "CPP"
  },
  {
    "name": "T _ssl_bad_method",
    "type": "CPP"
  },
  {
    "name": "T _ssl_protocol_to_string",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_dup",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_SSL_CTX",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_info_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_info_callback",
    "type": "CPP"
  },
  {
    "name": "t _dup_ca_names",
    "type": "CPP"
  },
  {
    "name": "T _ssl_clear_cipher_ctx",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_certificate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_privatekey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_certificate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_privatekey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_current_cipher",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_pending_cipher",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_current_compression",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_current_expansion",
    "type": "CPP"
  },
  {
    "name": "T _ssl_init_wbio_buffer",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_quiet_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_quiet_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_quiet_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_quiet_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_shutdown",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_SSL_CTX",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_verify_paths",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_verify_dir",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_verify_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_verify_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_load_verify_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_load_verify_dir",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_load_verify_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_load_verify_locations",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_verify_result",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_verify_result",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_client_random",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_server_random",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_master_key",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_master_key",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_cert_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cert_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set1_cert_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_psk_identity_hint",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_psk_identity_hint",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_psk_identity_hint",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_psk_identity",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_psk_client_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_psk_client_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_psk_server_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_psk_server_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_psk_find_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_psk_find_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_psk_use_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_psk_use_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_msg_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_msg_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_not_resumable_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_not_resumable_session_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_record_padding_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_record_padding_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_record_padding_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_block_padding",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_record_padding_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_record_padding_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_record_padding_callback_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_block_padding",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_num_tickets",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_num_tickets",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_num_tickets",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_num_tickets",
    "type": "CPP"
  },
  {
    "name": "T _ssl_replace_hash",
    "type": "CPP"
  },
  {
    "name": "T _ssl_clear_hash_ctx",
    "type": "CPP"
  },
  {
    "name": "T _ssl_handshake_hash",
    "type": "CPP"
  },
  {
    "name": "T _SSL_session_reused",
    "type": "CPP"
  },
  {
    "name": "T _SSL_is_server",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_debug",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_security_level",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_security_level",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_security_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_security_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set0_security_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_security_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_security_level",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_security_level",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_security_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_security_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set0_security_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_security_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_clear_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_clear_options",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_verified_chain",
    "type": "CPP"
  },
  {
    "name": "T _OBJ_bsearch_ssl_cipher_id",
    "type": "CPP"
  },
  {
    "name": "t _ssl_cipher_id_cmp_BSEARCH_CMP_FN",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get0_peer_scts",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_ct_validation_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_ct_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_ct_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _ssl_validate_ct",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_enable_ct",
    "type": "CPP"
  },
  {
    "name": "t _ct_permissive",
    "type": "CPP"
  },
  {
    "name": "t _ct_strict",
    "type": "CPP"
  },
  {
    "name": "T _SSL_enable_ct",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_ctlog_list_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_ctlog_list_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set0_ctlog_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get0_ctlog_store",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_client_hello_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_isv2",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_legacy_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_random",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_session_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_ciphers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_compression_methods",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get1_extensions_present",
    "type": "CPP"
  },
  {
    "name": "T _SSL_client_hello_get0_ext",
    "type": "CPP"
  },
  {
    "name": "T _SSL_free_buffers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_alloc_buffers",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_keylog_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_keylog_callback",
    "type": "CPP"
  },
  {
    "name": "T _ssl_log_rsa_client_key_exchange",
    "type": "CPP"
  },
  {
    "name": "t _nss_keylog_int",
    "type": "CPP"
  },
  {
    "name": "T _ssl_log_secret",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cache_cipherlist",
    "type": "CPP"
  },
  {
    "name": "T _SSL_bytes_to_cipher_list",
    "type": "CPP"
  },
  {
    "name": "T _bytes_to_cipher_list",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_recv_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_recv_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_recv_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_recv_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_max_send_fragment",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_split_send_fragment",
    "type": "CPP"
  },
  {
    "name": "T _SSL_stateless",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_post_handshake_auth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_post_handshake_auth",
    "type": "CPP"
  },
  {
    "name": "T _SSL_verify_client_post_handshake",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_session_ticket_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_allow_early_data_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_allow_early_data_cb",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_cipher_fetch",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_cipher_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _ssl_evp_md_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set0_tmp_dh_pkey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set0_tmp_dh_pkey",
    "type": "CPP"
  },
  {
    "name": "t _tlsa_free",
    "type": "CPP"
  },
  {
    "name": "t _ssl_async_wait_ctx_cb",
    "type": "CPP"
  },
  {
    "name": "t _ct_move_scts",
    "type": "CPP"
  },
  {
    "name": "T _SSL_add_ssl_module",
    "type": "CPP"
  },
  {
    "name": "T _SSL_config",
    "type": "CPP"
  },
  {
    "name": "t _ssl_do_config",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_config",
    "type": "CPP"
  },
  {
    "name": "T _ssl_ctx_system_config",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_certificate",
    "type": "CPP"
  },
  {
    "name": "t _ssl_set_cert",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_certificate_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_certificate_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "t _ssl_set_pkey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_PrivateKey_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_PrivateKey_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_certificate",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_certificate_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_certificate_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_PrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_PrivateKey_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_PrivateKey_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_certificate_chain_file",
    "type": "CPP"
  },
  {
    "name": "t _use_certificate_chain_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_certificate_chain_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_serverinfo_ex",
    "type": "CPP"
  },
  {
    "name": "t _serverinfo_process_buffer",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_serverinfo",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_serverinfo_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_cert_and_key",
    "type": "CPP"
  },
  {
    "name": "t _ssl_set_cert_and_key",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_cert_and_key",
    "type": "CPP"
  },
  {
    "name": "t _serverinfo_srv_add_cb",
    "type": "CPP"
  },
  {
    "name": "t _serverinfo_srv_parse_cb",
    "type": "CPP"
  },
  {
    "name": "t _serverinfoex_srv_add_cb",
    "type": "CPP"
  },
  {
    "name": "t _serverinfoex_srv_parse_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_RSAPrivateKey_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_use_RSAPrivateKey_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_RSAPrivateKey",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_RSAPrivateKey_file",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_use_RSAPrivateKey_ASN1",
    "type": "CPP"
  },
  {
    "name": "T _ssl_session_calculate_timeout",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_session",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get1_session",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_up_ref",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_ex_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_new",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_dup",
    "type": "CPP"
  },
  {
    "name": "T _ssl_session_dup",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_id_context",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_compress_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl_generate_session_id",
    "type": "CPP"
  },
  {
    "name": "t _def_generate_session_id",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_new_session",
    "type": "CPP"
  },
  {
    "name": "T _lookup_sess_in_cache",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add_session",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_prev_session",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_remove_session",
    "type": "CPP"
  },
  {
    "name": "t _SSL_SESSION_list_remove",
    "type": "CPP"
  },
  {
    "name": "t _remove_session_lock",
    "type": "CPP"
  },
  {
    "name": "t _SSL_SESSION_list_add",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_session",
    "type": "CPP"
  },
  {
    "name": "T _ssl_clear_bad_session",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_id",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_timeout",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_timeout",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_time",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_time",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_protocol_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_protocol_version",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_cipher",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_cipher",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_hostname",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_hostname",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_has_ticket",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_ticket_lifetime_hint",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_ticket",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set_max_early_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_alpn_selected",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_alpn_selected",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_peer",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_id_context",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_is_resumable",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_timeout",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_timeout",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_session_secret_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_session_ticket_ext_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_session_ticket_ext",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_flush_sessions",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_set_new_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_get_new_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_set_remove_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_get_remove_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_set_get_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_sess_get_get_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_info_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_info_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_client_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_get_client_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cookie_generate_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_cookie_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_set1_ticket_appdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get0_ticket_appdata",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_stateless_cookie_generate_cb",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_stateless_cookie_verify_cb",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_bio_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "T _PEM_read_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_bio_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "T _PEM_write_SSL_SESSION",
    "type": "CPP"
  },
  {
    "name": "T _SSL_state_string_long",
    "type": "CPP"
  },
  {
    "name": "T _SSL_state_string",
    "type": "CPP"
  },
  {
    "name": "T _SSL_alert_type_string_long",
    "type": "CPP"
  },
  {
    "name": "T _SSL_alert_type_string",
    "type": "CPP"
  },
  {
    "name": "T _SSL_alert_desc_string",
    "type": "CPP"
  },
  {
    "name": "T _SSL_alert_desc_string_long",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_print_fp",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_print",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_print_keylog",
    "type": "CPP"
  },
  {
    "name": "T _tls_provider_set_tls_params",
    "type": "CPP"
  },
  {
    "name": "T _tls1_change_cipher_state",
    "type": "CPP"
  },
  {
    "name": "t _tls_iv_length_within_key_block",
    "type": "CPP"
  },
  {
    "name": "T _tls1_setup_key_block",
    "type": "CPP"
  },
  {
    "name": "T _tls1_final_finish_mac",
    "type": "CPP"
  },
  {
    "name": "t _tls1_PRF",
    "type": "CPP"
  },
  {
    "name": "T _tls1_generate_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _tls1_export_keying_material",
    "type": "CPP"
  },
  {
    "name": "T _tls1_alert_code",
    "type": "CPP"
  },
  {
    "name": "T _tls1_default_timeout",
    "type": "CPP"
  },
  {
    "name": "T _tls1_new",
    "type": "CPP"
  },
  {
    "name": "T _tls1_free",
    "type": "CPP"
  },
  {
    "name": "T _tls1_clear",
    "type": "CPP"
  },
  {
    "name": "T _ssl_load_groups",
    "type": "CPP"
  },
  {
    "name": "t _discover_provider_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls1_group_id_lookup",
    "type": "CPP"
  },
  {
    "name": "T _tls1_group_id2nid",
    "type": "CPP"
  },
  {
    "name": "T _tls1_nid2group_id",
    "type": "CPP"
  },
  {
    "name": "T _tls1_get_supported_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls_valid_group",
    "type": "CPP"
  },
  {
    "name": "T _tls_group_allowed",
    "type": "CPP"
  },
  {
    "name": "T _tls1_shared_group",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_groups_list",
    "type": "CPP"
  },
  {
    "name": "t _gid_cb",
    "type": "CPP"
  },
  {
    "name": "T _tls1_check_group_id",
    "type": "CPP"
  },
  {
    "name": "T _tls1_get_formatlist",
    "type": "CPP"
  },
  {
    "name": "T _tls1_check_ec_tmp_key",
    "type": "CPP"
  },
  {
    "name": "T _ssl_setup_sig_algs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_lookup_md",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_peer_legacy_sigalg",
    "type": "CPP"
  },
  {
    "name": "t _tls1_get_legacy_sigalg",
    "type": "CPP"
  },
  {
    "name": "T _tls12_get_psigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls_check_sigalg_curve",
    "type": "CPP"
  },
  {
    "name": "T _tls12_check_peer_sigalg",
    "type": "CPP"
  },
  {
    "name": "t _tls1_check_pkey_comp",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_EC_curve_nid",
    "type": "CPP"
  },
  {
    "name": "t _tls1_get_group_id",
    "type": "CPP"
  },
  {
    "name": "t _sigalg_security_bits",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_peer_signature_type_nid",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_signature_type_nid",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_client_disabled",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_sig_mask",
    "type": "CPP"
  },
  {
    "name": "T _ssl_cipher_disabled",
    "type": "CPP"
  },
  {
    "name": "T _tls_use_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_server_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_process_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls_get_ticket_from_client",
    "type": "CPP"
  },
  {
    "name": "T _tls_decrypt_ticket",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_new",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_get0_EVP_MAC_CTX",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_init",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_size",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_update",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_final",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_free",
    "type": "CPP"
  },
  {
    "name": "t _tls12_sigalg_allowed",
    "type": "CPP"
  },
  {
    "name": "T _tls12_copy_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_save_u16",
    "type": "CPP"
  },
  {
    "name": "T _tls1_save_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_shared_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_sigalgs_list",
    "type": "CPP"
  },
  {
    "name": "t _sig_cb",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_raw_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_sigalgs",
    "type": "CPP"
  },
  {
    "name": "T _tls1_check_chain",
    "type": "CPP"
  },
  {
    "name": "t _find_sig_alg",
    "type": "CPP"
  },
  {
    "name": "t _tls1_check_sig_alg",
    "type": "CPP"
  },
  {
    "name": "t _tls1_check_cert_param",
    "type": "CPP"
  },
  {
    "name": "t _ssl_check_ca_name",
    "type": "CPP"
  },
  {
    "name": "T _tls1_set_cert_validity",
    "type": "CPP"
  },
  {
    "name": "T _SSL_check_chain",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_auto_dh",
    "type": "CPP"
  },
  {
    "name": "T _ssl_security_cert",
    "type": "CPP"
  },
  {
    "name": "t _ssl_security_cert_key",
    "type": "CPP"
  },
  {
    "name": "T _ssl_security_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _tls_choose_sigalg",
    "type": "CPP"
  },
  {
    "name": "t _has_usable_cert",
    "type": "CPP"
  },
  {
    "name": "t _rsa_pss_check_min_key_size",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_tlsext_max_fragment_length",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_tlsext_max_fragment_length",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SESSION_get_max_fragment_length",
    "type": "CPP"
  },
  {
    "name": "T _tls13_set_encoded_pub_key",
    "type": "CPP"
  },
  {
    "name": "t _add_provider_groups",
    "type": "CPP"
  },
  {
    "name": "t _tls12_shared_sigalgs",
    "type": "CPP"
  },
  {
    "name": "t _get_sigorhash",
    "type": "CPP"
  },
  {
    "name": "t _check_cert_usable",
    "type": "CPP"
  },
  {
    "name": "T _SSL_trace",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_hex",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_client_hello",
    "type": "CPP"
  },
  {
    "name": "t _dtls_print_hello_vfyrequest",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_server_hello",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_server_keyex",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_client_keyex",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_certificates",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_signature",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_cert_request",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_ticket",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_extensions",
    "type": "CPP"
  },
  {
    "name": "t _do_ssl_trace_list",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_version",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_random",
    "type": "CPP"
  },
  {
    "name": "t _ssl_print_hexbuf",
    "type": "CPP"
  },
  {
    "name": "t _ssl_get_keyex",
    "type": "CPP"
  },
  {
    "name": "T _tls13_hkdf_expand",
    "type": "CPP"
  },
  {
    "name": "T _tls13_derive_key",
    "type": "CPP"
  },
  {
    "name": "T _tls13_derive_iv",
    "type": "CPP"
  },
  {
    "name": "T _tls13_derive_finishedkey",
    "type": "CPP"
  },
  {
    "name": "T _tls13_generate_secret",
    "type": "CPP"
  },
  {
    "name": "T _tls13_generate_handshake_secret",
    "type": "CPP"
  },
  {
    "name": "T _tls13_generate_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _tls13_final_finish_mac",
    "type": "CPP"
  },
  {
    "name": "T _tls13_setup_key_block",
    "type": "CPP"
  },
  {
    "name": "T _tls13_change_cipher_state",
    "type": "CPP"
  },
  {
    "name": "t _derive_secret_key_and_iv",
    "type": "CPP"
  },
  {
    "name": "T _tls13_update_key",
    "type": "CPP"
  },
  {
    "name": "T _tls13_alert_code",
    "type": "CPP"
  },
  {
    "name": "T _tls13_export_keying_material",
    "type": "CPP"
  },
  {
    "name": "T _tls13_export_keying_material_early",
    "type": "CPP"
  },
  {
    "name": "T _tls_engine_finish",
    "type": "CPP"
  },
  {
    "name": "T _tls_get_cipher_from_engine",
    "type": "CPP"
  },
  {
    "name": "T _tls_get_digest_from_engine",
    "type": "CPP"
  },
  {
    "name": "T _tls_engine_load_ssl_client_cert",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_client_cert_engine",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_new",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_init",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_update",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_final",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_old_size",
    "type": "CPP"
  },
  {
    "name": "T _ssl_hmac_get0_HMAC_CTX",
    "type": "CPP"
  },
  {
    "name": "T _ssl_dh_to_pkey",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_tmp_ecdh_groups",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_tmp_dh_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_tmp_dh_callback",
    "type": "CPP"
  },
  {
    "name": "T _ssl_ctx_srp_ctx_free_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_SRP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl_srp_ctx_free_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SRP_CTX_free",
    "type": "CPP"
  },
  {
    "name": "T _ssl_srp_ctx_init_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_SRP_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _ssl_ctx_srp_ctx_init_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_SRP_CTX_init",
    "type": "CPP"
  },
  {
    "name": "T _ssl_srp_server_param_with_username_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_srp_server_param_with_username",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_srp_server_param_pw",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_srp_server_param",
    "type": "CPP"
  },
  {
    "name": "T _srp_generate_server_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _srp_generate_client_master_secret",
    "type": "CPP"
  },
  {
    "name": "T _srp_verify_server_param",
    "type": "CPP"
  },
  {
    "name": "T _ssl_srp_calc_a_param_intern",
    "type": "CPP"
  },
  {
    "name": "T _SRP_Calc_A_param",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_srp_g",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_srp_N",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_srp_username",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_srp_userinfo",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_username",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_password",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_strength",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_verify_param_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_cb_arg",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_username_callback",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_srp_client_pwd_callback",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_record_replay_check",
    "type": "CPP"
  },
  {
    "name": "t _satsub64be",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_record_bitmap_update",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_RECORD_LAYER_new",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_RECORD_LAYER_free",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_RECORD_LAYER_clear",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_RECORD_LAYER_set_saved_w_epoch",
    "type": "CPP"
  },
  {
    "name": "T _DTLS_RECORD_LAYER_set_write_sequence",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_buffer_record",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_retrieve_buffered_record",
    "type": "CPP"
  },
  {
    "name": "t _dtls1_copy_record",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_process_buffered_records",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_get_bitmap",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_read_bytes",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_write_bytes",
    "type": "CPP"
  },
  {
    "name": "T _do_dtls1_write",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_reset_seq_numbers",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_init",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_clear",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_reset_read_sequence",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_reset_write_sequence",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_release",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_read_pending",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_processed_read_pending",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_write_pending",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_pending",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_set_default_read_buffer_len",
    "type": "CPP"
  },
  {
    "name": "T _SSL_set_default_read_buffer_len",
    "type": "CPP"
  },
  {
    "name": "T _SSL_rstate_string_long",
    "type": "CPP"
  },
  {
    "name": "T _SSL_rstate_string",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_read_n",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_write_bytes",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_write_pending",
    "type": "CPP"
  },
  {
    "name": "T _do_ssl3_write",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_read_bytes",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_record_sequence_update",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_is_sslv2_record",
    "type": "CPP"
  },
  {
    "name": "T _RECORD_LAYER_get_rrec_length",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_BUFFER_set_data",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_BUFFER_clear",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_BUFFER_release",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_setup_read_buffer",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_setup_write_buffer",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_setup_buffers",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_release_write_buffer",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_release_read_buffer",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_RECORD_clear",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_RECORD_release",
    "type": "CPP"
  },
  {
    "name": "T _SSL3_RECORD_set_seq_num",
    "type": "CPP"
  },
  {
    "name": "T _early_data_count_ok",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_get_record",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_do_uncompress",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_do_compress",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_enc",
    "type": "CPP"
  },
  {
    "name": "T _tls1_enc",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_cbc_record_digest_supported",
    "type": "CPP"
  },
  {
    "name": "T _n_ssl3_mac",
    "type": "CPP"
  },
  {
    "name": "T _tls1_mac",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_process_record",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_get_record",
    "type": "CPP"
  },
  {
    "name": "T _dtls_buffer_listen_record",
    "type": "CPP"
  },
  {
    "name": "T _tls13_enc",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_cbc_remove_padding_and_mac",
    "type": "CPP"
  },
  {
    "name": "t _ssl3_cbc_copy_mac",
    "type": "CPP"
  },
  {
    "name": "T _tls1_cbc_remove_padding_and_mac",
    "type": "CPP"
  },
  {
    "name": "T _ossl_get_extension_type",
    "type": "CPP"
  },
  {
    "name": "T _tls_validate_all_contexts",
    "type": "CPP"
  },
  {
    "name": "T _extension_is_relevant",
    "type": "CPP"
  },
  {
    "name": "T _tls_collect_extensions",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_extension",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_all_extensions",
    "type": "CPP"
  },
  {
    "name": "T _should_add_extension",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_extensions",
    "type": "CPP"
  },
  {
    "name": "T _tls_psk_do_binder",
    "type": "CPP"
  },
  {
    "name": "t _final_renegotiate",
    "type": "CPP"
  },
  {
    "name": "t _init_server_name",
    "type": "CPP"
  },
  {
    "name": "t _final_server_name",
    "type": "CPP"
  },
  {
    "name": "t _final_maxfragmentlen",
    "type": "CPP"
  },
  {
    "name": "t _init_srp",
    "type": "CPP"
  },
  {
    "name": "t _init_ec_point_formats",
    "type": "CPP"
  },
  {
    "name": "t _final_ec_pt_formats",
    "type": "CPP"
  },
  {
    "name": "t _init_session_ticket",
    "type": "CPP"
  },
  {
    "name": "t _init_status_request",
    "type": "CPP"
  },
  {
    "name": "t _init_npn",
    "type": "CPP"
  },
  {
    "name": "t _init_alpn",
    "type": "CPP"
  },
  {
    "name": "t _final_alpn",
    "type": "CPP"
  },
  {
    "name": "t _init_srtp",
    "type": "CPP"
  },
  {
    "name": "t _init_etm",
    "type": "CPP"
  },
  {
    "name": "t _init_ems",
    "type": "CPP"
  },
  {
    "name": "t _final_ems",
    "type": "CPP"
  },
  {
    "name": "t _init_sig_algs_cert",
    "type": "CPP"
  },
  {
    "name": "t _init_post_handshake_auth",
    "type": "CPP"
  },
  {
    "name": "t _init_sig_algs",
    "type": "CPP"
  },
  {
    "name": "t _final_sig_algs",
    "type": "CPP"
  },
  {
    "name": "t _init_psk_kex_modes",
    "type": "CPP"
  },
  {
    "name": "t _final_key_share",
    "type": "CPP"
  },
  {
    "name": "t _final_early_data",
    "type": "CPP"
  },
  {
    "name": "t _init_certificate_authorities",
    "type": "CPP"
  },
  {
    "name": "t _tls_parse_certificate_authorities",
    "type": "CPP"
  },
  {
    "name": "t _tls_construct_certificate_authorities",
    "type": "CPP"
  },
  {
    "name": "t _final_psk",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_server_name",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_maxfragmentlen",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_srp",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_ec_pt_formats",
    "type": "CPP"
  },
  {
    "name": "t _use_ecc",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_supported_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_sig_algs",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_status_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_npn",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_alpn",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_use_srtp",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_etm",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_sct",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_ems",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_supported_versions",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_psk_kex_modes",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_key_share",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_cookie",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_early_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_padding",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_psk",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_ctos_post_handshake_auth",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_maxfragmentlen",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_server_name",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_ec_pt_formats",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_status_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_sct",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_npn",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_alpn",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_use_srtp",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_etm",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_ems",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_supported_versions",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_key_share",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_cookie",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_early_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_stoc_psk",
    "type": "CPP"
  },
  {
    "name": "T _custom_ext_find",
    "type": "CPP"
  },
  {
    "name": "T _custom_ext_init",
    "type": "CPP"
  },
  {
    "name": "T _custom_ext_parse",
    "type": "CPP"
  },
  {
    "name": "T _custom_ext_add",
    "type": "CPP"
  },
  {
    "name": "T _custom_exts_copy_flags",
    "type": "CPP"
  },
  {
    "name": "T _custom_exts_copy",
    "type": "CPP"
  },
  {
    "name": "t _custom_ext_add_old_cb_wrap",
    "type": "CPP"
  },
  {
    "name": "T _custom_exts_free",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_has_client_custom_ext",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add_client_custom_ext",
    "type": "CPP"
  },
  {
    "name": "t _add_old_custom_ext",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add_server_custom_ext",
    "type": "CPP"
  },
  {
    "name": "T _SSL_CTX_add_custom_ext",
    "type": "CPP"
  },
  {
    "name": "t _add_custom_ext_intern",
    "type": "CPP"
  },
  {
    "name": "T _SSL_extension_supported",
    "type": "CPP"
  },
  {
    "name": "t _custom_ext_free_old_cb_wrap",
    "type": "CPP"
  },
  {
    "name": "t _custom_ext_parse_old_cb_wrap",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_server_name",
    "type": "CPP"
  },
  {
    "name": "t _PACKET_strndup",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_maxfragmentlen",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_srp",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_ec_pt_formats",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_sig_algs_cert",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_sig_algs",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_status_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_npn",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_alpn",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_use_srtp",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_etm",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_psk_kex_modes",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_key_share",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_cookie",
    "type": "CPP"
  },
  {
    "name": "t _PACKET_get_net_8",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_supported_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_ems",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_early_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_psk",
    "type": "CPP"
  },
  {
    "name": "T _tls_parse_ctos_post_handshake_auth",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_server_name",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_maxfragmentlen",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_ec_pt_formats",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_supported_groups",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_status_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_next_proto_neg",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_alpn",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_use_srtp",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_etm",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_ems",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_supported_versions",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_key_share",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_cookie",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_cryptopro_bug",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_early_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_stoc_psk",
    "type": "CPP"
  },
  {
    "name": "T _SSL_get_state",
    "type": "CPP"
  },
  {
    "name": "T _SSL_in_init",
    "type": "CPP"
  },
  {
    "name": "T _SSL_is_init_finished",
    "type": "CPP"
  },
  {
    "name": "T _SSL_in_before",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_clear",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_set_renegotiate",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_send_fatal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_fatal",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_in_error",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_set_in_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_get_in_handshake",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_set_in_handshake",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_skip_early_data",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_check_finish_init",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_set_hello_verify_done",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_connect",
    "type": "CPP"
  },
  {
    "name": "t _state_machine",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_accept",
    "type": "CPP"
  },
  {
    "name": "T _statem_flush",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_app_data_allowed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_export_allowed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_export_early_allowed",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_read_transition",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_write_transition",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_pre_work",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_post_work",
    "type": "CPP"
  },
  {
    "name": "T _tls_client_key_exchange_post_work",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_construct_message",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_client_hello",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_end_of_early_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_client_certificate",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_client_key_exchange",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_next_proto",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_max_message_size",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_process_message",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_server_hello",
    "type": "CPP"
  },
  {
    "name": "T _dtls_process_hello_verify",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_server_certificate",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_cert_status",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_key_exchange",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_certificate_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_server_done",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_new_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_hello_req",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_client_post_process_message",
    "type": "CPP"
  },
  {
    "name": "T _tls_post_process_server_certificate",
    "type": "CPP"
  },
  {
    "name": "T _tls_prepare_client_certificate",
    "type": "CPP"
  },
  {
    "name": "t _ssl_cipher_list_to_bytes",
    "type": "CPP"
  },
  {
    "name": "t _set_client_ciphersuite",
    "type": "CPP"
  },
  {
    "name": "t _tls_process_as_hello_retry_request",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_check_cert_and_algorithm",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_cert_status_body",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_initial_server_flight",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gost18_cke_cipher_nid",
    "type": "CPP"
  },
  {
    "name": "T _ossl_gost_ukm",
    "type": "CPP"
  },
  {
    "name": "t _tls_construct_cke_gost18",
    "type": "CPP"
  },
  {
    "name": "t _tls_construct_cke_srp",
    "type": "CPP"
  },
  {
    "name": "t _ssl3_check_client_certificate",
    "type": "CPP"
  },
  {
    "name": "T _ssl_do_client_cert_cb",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_hm_fragment_free",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_do_write",
    "type": "CPP"
  },
  {
    "name": "T _dtls_get_message",
    "type": "CPP"
  },
  {
    "name": "T _dtls_get_message_body",
    "type": "CPP"
  },
  {
    "name": "T _dtls_construct_change_cipher_spec",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_read_failed",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_get_queue_priority",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_retransmit_buffered_messages",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_retransmit_message",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_buffer_message",
    "type": "CPP"
  },
  {
    "name": "t _dtls1_hm_fragment_new",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_set_message_header",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_get_message_header",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_set_handshake_header",
    "type": "CPP"
  },
  {
    "name": "T _dtls1_close_construct_packet",
    "type": "CPP"
  },
  {
    "name": "t _dtls1_reassemble_fragment",
    "type": "CPP"
  },
  {
    "name": "t _dtls1_preprocess_fragment",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_do_write",
    "type": "CPP"
  },
  {
    "name": "T _tls_close_construct_packet",
    "type": "CPP"
  },
  {
    "name": "T _tls_setup_handshake",
    "type": "CPP"
  },
  {
    "name": "T _ssl_get_min_max_version",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_cert_verify",
    "type": "CPP"
  },
  {
    "name": "t _get_cert_verify_tbs_data",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_cert_verify",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_finished",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_key_update",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_key_update",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_take_mac",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_change_cipher_spec",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_finished",
    "type": "CPP"
  },
  {
    "name": "T _tls13_save_handshake_digest_for_pha",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_change_cipher_spec",
    "type": "CPP"
  },
  {
    "name": "T _ssl3_output_cert_chain",
    "type": "CPP"
  },
  {
    "name": "T _tls_finish_handshake",
    "type": "CPP"
  },
  {
    "name": "T _tls_get_message_header",
    "type": "CPP"
  },
  {
    "name": "T _tls_get_message_body",
    "type": "CPP"
  },
  {
    "name": "T _ssl_x509err2alert",
    "type": "CPP"
  },
  {
    "name": "T _ssl_allow_compression",
    "type": "CPP"
  },
  {
    "name": "T _ssl_version_supported",
    "type": "CPP"
  },
  {
    "name": "t _ssl_method_error",
    "type": "CPP"
  },
  {
    "name": "T _ssl_check_version_downgrade",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_version_bound",
    "type": "CPP"
  },
  {
    "name": "T _ssl_choose_server_version",
    "type": "CPP"
  },
  {
    "name": "t _check_for_downgrade",
    "type": "CPP"
  },
  {
    "name": "T _ssl_choose_client_version",
    "type": "CPP"
  },
  {
    "name": "T _ssl_set_client_hello_version",
    "type": "CPP"
  },
  {
    "name": "T _check_in_list",
    "type": "CPP"
  },
  {
    "name": "T _create_synthetic_message_hash",
    "type": "CPP"
  },
  {
    "name": "T _parse_ca_names",
    "type": "CPP"
  },
  {
    "name": "t _ca_dn_cmp",
    "type": "CPP"
  },
  {
    "name": "T _get_ca_names",
    "type": "CPP"
  },
  {
    "name": "T _construct_ca_names",
    "type": "CPP"
  },
  {
    "name": "T _construct_key_exchange_tbs",
    "type": "CPP"
  },
  {
    "name": "T _tls13_restore_handshake_digest_for_pha",
    "type": "CPP"
  },
  {
    "name": "t _ssl_add_cert_to_wpacket",
    "type": "CPP"
  },
  {
    "name": "T _GOST_KX_MESSAGE_it",
    "type": "CPP"
  },
  {
    "name": "T _d2i_GOST_KX_MESSAGE",
    "type": "CPP"
  },
  {
    "name": "T _i2d_GOST_KX_MESSAGE",
    "type": "CPP"
  },
  {
    "name": "T _GOST_KX_MESSAGE_new",
    "type": "CPP"
  },
  {
    "name": "T _GOST_KX_MESSAGE_free",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_read_transition",
    "type": "CPP"
  },
  {
    "name": "T _send_certificate_request",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_write_transition",
    "type": "CPP"
  },
  {
    "name": "t _send_server_key_exchange",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_pre_work",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_post_work",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_construct_message",
    "type": "CPP"
  },
  {
    "name": "T _dtls_construct_hello_verify_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_server_hello",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_server_certificate",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_server_key_exchange",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_certificate_request",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_server_done",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_new_session_ticket",
    "type": "CPP"
  },
  {
    "name": "T _tls_construct_cert_status",
    "type": "CPP"
  },
  {
    "name": "t _tls_construct_encrypted_extensions",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_max_message_size",
    "type": "CPP"
  },
  {
    "name": "T _ossl_statem_server_process_message",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_client_hello",
    "type": "CPP"
  },
  {
    "name": "T _tls_process_end_of_early_data",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/icu4c/73.2/lib/libicui18n.73.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "t icu_73::BucketList::~BucketList()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BucketList::~BucketList()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BucketList::~BucketList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::~ImmutableIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::~ImmutableIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::~ImmutableIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::getBucketCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::getBucketIndex(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BucketList::getBucketIndex(icu_73::UnicodeString const&, icu_73::Collator const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::ImmutableIndex::getBucket(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::AlphabeticIndex(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::init(icu_73::Locale const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::AlphabeticIndex(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::AlphabeticIndex(icu_73::RuleBasedCollator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::AlphabeticIndex(icu_73::RuleBasedCollator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::~AlphabeticIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::~AlphabeticIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::~AlphabeticIndex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::addLabels(icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::clearBuckets()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::addLabels(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::addIndexExemplars(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::buildImmutableIndex(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::createBucketList(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketCount(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::initBuckets(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getRecordCount(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::initLabels(icu_73::UVector&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::separated(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ownedString(icu_73::UnicodeString const&, icu_73::LocalPointer<icu_73::UnicodeString>&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Bucket::Bucket(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UAlphabeticIndexLabelType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::AlphabeticIndex::Bucket>::adoptInsteadAndCheckErrorCode(icu_73::AlphabeticIndex::Bucket*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::hasMultiplePrimaryWeights(icu_73::RuleBasedCollator const&, unsigned int, icu_73::UnicodeString const&, icu_73::UVector64&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::recordCompareFn(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::internalResetBucketIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::addChineseIndexCharacters(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::operator==(icu_73::AlphabeticIndex const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::operator!=(icu_73::AlphabeticIndex const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getCollator() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getInflowLabel() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getOverflowLabel() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getUnderflowLabel() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::setInflowLabel(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::setOverflowLabel(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::setUnderflowLabel(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getMaxLabelCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::setMaxLabelCount(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::firstStringsInScript(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::collatorComparator(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Record::Record(icu_73::UnicodeString const&, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Record::Record(icu_73::UnicodeString const&, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Record::~Record()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Record::~Record()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::addRecord(icu_73::UnicodeString const&, void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::alphaIndex_deleteRecord(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::clearRecords(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketIndex(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketIndex() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::nextBucket(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketLabel() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketLabelType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getBucketRecordCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::resetBucketIterator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::nextRecord(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getRecordName() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::getRecordData() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::resetRecordIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Bucket::Bucket(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UAlphabeticIndexLabelType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Bucket::~Bucket()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Bucket::~Bucket()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AlphabeticIndex::Bucket::~Bucket()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BucketList::BucketList(icu_73::UVector*, icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalULocaleDataPointer::~LocalULocaleDataPointer()",
    "type": "CPP"
  },
  {
    "name": "t ___clang_call_terminate",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::AlphabeticIndex::Record>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScriptRunIterator::ScriptRunIterator(icu_73::Replaceable const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScriptRunIterator::ScriptRunIterator(icu_73::Replaceable const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScriptRunIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScriptRunIterator::adjustLimit(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnyTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::AnyTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _deleteTransliterator(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::AnyTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::~AnyTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::~AnyTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::~AnyTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::AnyTransliterator(icu_73::AnyTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::AnyTransliterator(icu_73::AnyTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::getTransliterator(UScriptCode) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AnyTransliterator::registerIDs()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::clearCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer(double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CalendarAstronomer(double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::~CalendarAstronomer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::~CalendarAstronomer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::setTime(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::setJulianDay(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getTime()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getJulianDay()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getJulianCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getGreenwichSidereal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSiderealOffset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getLocalSidereal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::lstToUT(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::eclipticToEquatorial(icu_73::CalendarAstronomer::Equatorial&, icu_73::CalendarAstronomer::Ecliptic const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::eclipticToEquatorial(icu_73::CalendarAstronomer::Equatorial&, double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::eclipticObliquity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::eclipticToEquatorial(icu_73::CalendarAstronomer::Equatorial&, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::eclipticToHorizon(icu_73::CalendarAstronomer::Horizon&, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSunLongitude()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSunLongitude(double, double&, double&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSunPosition(icu_73::CalendarAstronomer::Equatorial&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::SUMMER_SOLSTICE()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::WINTER_SOLSTICE()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::AngleFunc::~AngleFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::AngleFunc::~AngleFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::AngleFunc::~AngleFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SunTimeAngleFunc::~SunTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SunTimeAngleFunc::~SunTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SunTimeAngleFunc::~SunTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSunTime(double, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::timeOfAngle(icu_73::CalendarAstronomer::AngleFunc&, double, double, double, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CoordFunc::~CoordFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CoordFunc::~CoordFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::CoordFunc::~CoordFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RiseSetCoordFunc::~RiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RiseSetCoordFunc::~RiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RiseSetCoordFunc::~RiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getSunRiseSet(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::riseOrSet(icu_73::CalendarAstronomer::CoordFunc&, signed char, double, double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonAge()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonPhase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::NEW_MOON()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::FULL_MOON()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonTimeAngleFunc::~MoonTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonTimeAngleFunc::~MoonTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonTimeAngleFunc::~MoonTimeAngleFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonTime(double, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonTime(icu_73::CalendarAstronomer::MoonAge const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonRiseSetCoordFunc::~MoonRiseSetCoordFunc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::getMoonRiseSet(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::Ecliptic::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::Equatorial::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CalendarAstronomer::Horizon::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::createCache(icu_73::CalendarCache**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t calendar_astro_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::CalendarCache(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::get(icu_73::CalendarCache**, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::put(icu_73::CalendarCache**, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::CalendarCache(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::~CalendarCache()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::~CalendarCache()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarCache::~CalendarCache()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SunTimeAngleFunc::eval(icu_73::CalendarAstronomer&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RiseSetCoordFunc::eval(icu_73::CalendarAstronomer::Equatorial&, icu_73::CalendarAstronomer&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonTimeAngleFunc::eval(icu_73::CalendarAstronomer&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MoonRiseSetCoordFunc::eval(icu_73::CalendarAstronomer::Equatorial&, icu_73::CalendarAstronomer&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::BasicTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::BasicTimeZone(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::BasicTimeZone(icu_73::BasicTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::~BasicTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::~BasicTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::~BasicTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::hasEquivalentTransitions(icu_73::BasicTimeZone const&, double, double, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::getSimpleRulesNear(double, icu_73::InitialTimeZoneRule*&, icu_73::AnnualTimeZoneRule*&, icu_73::AnnualTimeZoneRule*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::getTimeZoneRulesAfter(double, icu_73::InitialTimeZoneRule*&, icu_73::UVector*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::getOffsetFromLocal(double, UTimeZoneLocalOption, UTimeZoneLocalOption, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BasicTimeZone::getOffsetFromLocal(double, int, int, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t _u_writeIdenticalLevelRun_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::BreakTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::BreakTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::~BreakTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::~BreakTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::~BreakTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::BreakTransliterator(icu_73::BreakTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::BreakTransliterator(icu_73::BreakTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::replaceableAsString(icu_73::Replaceable&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::getInsertion() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BreakTransliterator::setInsertion(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BuddhistCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::BuddhistCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::BuddhistCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::~BuddhistCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::~BuddhistCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::~BuddhistCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::BuddhistCalendar(icu_73::BuddhistCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::BuddhistCalendar(icu_73::BuddhistCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::operator=(icu_73::BuddhistCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BuddhistCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedCalendar::~SharedCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedCalendar::~SharedCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedCalendar::~SharedCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleCacheKey<icu_73::SharedCalendar>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::makeInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BasicCalendarFactory::~BasicCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BasicCalendarFactory::~BasicCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BasicCalendarFactory::~BasicCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DefaultCalendarFactory::~DefaultCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DefaultCalendarFactory::~DefaultCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DefaultCalendarFactory::~DefaultCalendarFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::~CalendarService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::~CalendarService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::~CalendarService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::registerFactory(icu_73::ICUServiceFactory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getCalendarService(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::unregister(void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::Calendar(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setWeekData(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::Calendar(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::Calendar(icu_73::TimeZone const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::~Calendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::~Calendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::~Calendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::Calendar(icu_73::Calendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::operator=(icu_73::Calendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::createInstance(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::createInstance(icu_73::TimeZone const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::createInstance(icu_73::TimeZone const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createStandardCalendar(ECalType, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getCalendarTypeForLocale(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setFirstDayOfWeek(UCalendarDaysOfWeek)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setMinimalDaysInFirstWeek(unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::SharedCalendar>(icu_73::Locale const&, icu_73::SharedCalendar const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::adoptTimeZone(icu_73::TimeZone*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setTimeInMillis(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getNow()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setTimeZone(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getCalendarTypeFromLocale(icu_73::Locale const&, char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::operator==(icu_73::Calendar const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getTimeInMillis(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::isEquivalentTo(icu_73::Calendar const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::type_info::operator==[abi:v15006](std::type_info const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::equals(icu_73::Calendar const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::before(icu_73::Calendar const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::after(icu_73::Calendar const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getKeywordValuesForLocale(char const*, icu_73::Locale const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::updateTime(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::isLenient() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::get(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::complete(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::set(UCalendarDateFields, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::recalculateStamp()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::set(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::set(int, int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::set(int, int, int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::clear(UCalendarDateFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::isSet(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::newestStamp(UCalendarDateFields, UCalendarDateFields, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::pinField(UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeFields(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getTimeZone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeGregorianAndDOWFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeWeekFields(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::julianDayToDayOfWeek(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeGregorianFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getFirstDayOfWeek() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getMinimalDaysInFirstWeek() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::weekNumber(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::roll(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::roll(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::add(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::add(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getImmediatePreviousZoneTransition(double, double*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::fieldDifference(double, icu_73::Calendar::EDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::fieldDifference(double, UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::orphanTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setRepeatedWallTimeOption(UCalendarWallTimeOption)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getRepeatedWallTimeOption() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setSkippedWallTimeOption(UCalendarWallTimeOption)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getSkippedWallTimeOption() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getFirstDayOfWeek(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getDayOfWeekType(UCalendarDaysOfWeek, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getWeekendTransition(UCalendarDaysOfWeek, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::isWeekend(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::isWeekend() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getMinimum(icu_73::Calendar::EDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getMinimum(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getMaximum(icu_73::Calendar::EDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getMaximum(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getGreatestMinimum(icu_73::Calendar::EDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getGreatestMinimum(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLeastMaximum(icu_73::Calendar::EDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLeastMaximum(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getActualMinimum(icu_73::Calendar::EDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getActualMinimum(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::inDaylightTime(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::inTemporalLeapYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getTemporalMonthCode(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::setTemporalMonthCode(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::validateFields(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::validateField(UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::validateField(UCalendarDateFields, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getFieldResolutionTable() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::newerField(UCalendarDateFields, UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::resolveFields(int const (*) [12][8]) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeTime(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeJulianDay()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeMillisInDay()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::computeZoneOffset(double, double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getBasicTimeZone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::handleComputeJulianDay(UCalendarDateFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLocalDOW()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getDefaultMonthInYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getDefaultDayInMonth(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::handleGetExtendedYearFromWeekFields(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getActualMaximum(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getActualHelper(UCalendarDateFields, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::prepareGetActual(UCalendarDateFields, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::getLocaleID(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::internalSet(icu_73::Calendar::EDateFields, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::internalGetMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Calendar::internalGetMonth(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BasicCalendarFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BasicCalendarFactory::updateVisibleIDs(icu_73::Hashtable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DefaultCalendarFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::isDefault() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::cloneInstance(icu_73::UObject*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::handleDefault(icu_73::ICUServiceKey const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t calendar_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CalendarService::CalendarService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::Calendar>::adoptInsteadAndCheckErrorCode(icu_73::Calendar*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUResourceBundlePointer::~LocalUResourceBundlePointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::SharedCalendar>(icu_73::CacheKey<icu_73::SharedCalendar> const&, void const*, icu_73::SharedCalendar const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedCalendar>(icu_73::SharedCalendar const*, icu_73::SharedCalendar const*&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::SharedCalendar>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedCalendar>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::SharedCalendar> const&)",
    "type": "CPP"
  },
  {
    "name": "t _utrans_rep_caseContextIterator_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMapTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::CaseMapTransliterator(icu_73::UnicodeString const&, int (*)(int, int (*)(void*, signed char), void*, char16_t const**, int))",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::~CaseMapTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::~CaseMapTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::~CaseMapTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::CaseMapTransliterator(icu_73::CaseMapTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseMapTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::CECalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::CECalendar(icu_73::CECalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::~CECalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::~CECalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::~CECalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::operator=(icu_73::CECalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::ceToJD(int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::jdToCE(int, int, int&, int&, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::getTemporalMonthCode(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CECalendar::setTemporalMonthCode(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::ChineseCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getChineseCalZoneAstroCalc() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::Locale const&, int, icu_73::TimeZone const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::Locale const&, int, icu_73::TimeZone const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::ChineseCalendar(icu_73::ChineseCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::~ChineseCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::~ChineseCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::~ChineseCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getFieldResolutionTable() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::add(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::add(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::roll(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::roll(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::daysToMillis(double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::millisToDays(double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::winterSolstice(int) const",
    "type": "CPP"
  },
  {
    "name": "t calendar_chinese_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::newMoonNear(double, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::synodicMonthsBetween(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::majorSolarTerm(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::hasNoMajorSolarTerm(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::isLeapMonthBetween(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::computeChineseFields(int, int, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::newYear(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::offsetMonth(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::internalGetDefaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::internalGetDefaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::inTemporalLeapYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::getTemporalMonthCode(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::setTemporalMonthCode(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::internalGetMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChineseCalendar::internalGetMonth(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(double const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(double const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(double const*, signed char const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(double const*, signed char const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::ChoiceFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::ChoiceFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::ChoiceFormat(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::operator=(icu_73::ChoiceFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::~ChoiceFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::~ChoiceFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::~ChoiceFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::dtos(double, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::applyPattern(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::toPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::setChoices(double const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::setChoices(double const*, signed char const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::setChoices(double const*, signed char const*, icu_73::UnicodeString const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::getLimits(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::getClosures(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::getFormats(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::findSubMessage(icu_73::MessagePattern const&, int, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::format(icu_73::Formattable const*, int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::parseArgument(icu_73::MessagePattern const&, int, icu_73::UnicodeString const&, icu_73::ParsePosition&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::matchStringUntilLimitPart(icu_73::MessagePattern const&, int, int, icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ChoiceFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumberFormat::isLenient() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::CollationElementIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::operator=(icu_73::CollationElementIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::CollationElementIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::~CollationElementIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::~CollationElementIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::~CollationElementIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::next(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationIterator::nextCE(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::operator!=(icu_73::CollationElementIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::operator==(icu_73::CollationElementIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::previous(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::setOffset(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::setText(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::setText(icu_73::CharacterIterator&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::strengthOrder(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::UnicodeString const&, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::UnicodeString const&, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::CharacterIterator const&, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::CollationElementIterator(icu_73::CharacterIterator const&, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::computeMaxExpansions(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::~ContractionsAndExpansions()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MaxExpSink::~MaxExpSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::getMaxExpansion(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationElementIterator::getMaxExpansion(UHashtable const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationData::getCE32(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MaxExpSink::~MaxExpSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MaxExpSink::handleCE(long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MaxExpSink::handleExpansion(long long const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::ContractionsAndExpansions(icu_73::UnicodeSet*, icu_73::UnicodeSet*, icu_73::ContractionsAndExpansions::CESink*, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollatorFactory::~CollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollatorFactory::~CollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollatorFactory::~CollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollatorFactory::visible() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollatorFactory::getDisplayName(icu_73::Locale const&, icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorFactory::~ICUCollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorFactory::~ICUCollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorFactory::~ICUCollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::makeInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::~ICUCollatorService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::~ICUCollatorService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::~ICUCollatorService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::safeClone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::compare(icu_73::UnicodeString const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::compare(icu_73::UnicodeString const&, icu_73::UnicodeString const&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::compare(char16_t const*, int, char16_t const*, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::compare(UCharIterator&, UCharIterator&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::compareUTF8(icu_73::StringPiece const&, icu_73::StringPiece const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::equals(icu_73::UnicodeString const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::greaterOrEqual(icu_73::UnicodeString const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::greater(icu_73::UnicodeString const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isAvailableLocaleListInitialized(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getDisplayName(icu_73::Locale const&, icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getDisplayName(icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::Collator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::Collator(UColAttributeValue, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::~Collator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::~Collator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::~Collator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::Collator(icu_73::Collator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::operator==(icu_73::Collator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::operator!=(icu_73::Collator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getBound(unsigned char const*, int, UColBoundMode, unsigned int, unsigned char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::setLocales(icu_73::Locale const&, icu_73::Locale const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getTailoredSet(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::registerInstance(icu_73::Collator*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::~CFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::~CFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::~CFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::getDisplayName(icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::registerFactory(icu_73::CollatorFactory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::unregister(void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::~CollationLocaleListEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::~CollationLocaleListEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::~CollationLocaleListEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getAvailableLocales()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getKeywords(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getKeywordValues(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getKeywordValuesForLocale(char const*, icu_73::Locale const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getFunctionalEquivalent(char const*, icu_73::Locale const&, signed char&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getStrength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::setStrength(icu_73::Collator::ECollationStrength)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::setMaxVariable(UColReorderCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getMaxVariable() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getReorderCodes(int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::setReorderCodes(int const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::getEquivalentReorderCodes(int, int*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::internalGetShortDefinitionString(char const*, char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::internalCompareUTF8(char const*, int, char const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collator::internalNextSortKeyPart(UCharIterator*, unsigned int*, unsigned char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::getKey(icu_73::ICUServiceKey&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::isDefault() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::cloneInstance(icu_73::UObject*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::handleDefault(icu_73::ICUServiceKey const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::getSupportedIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLocaleListEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::getReorderCode(char const*)",
    "type": "CPP"
  },
  {
    "name": "t collator_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorService::ICUCollatorService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUCollatorFactory::ICUCollatorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CFactory::CFactory(icu_73::CollatorFactory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::incTwoBytePrimaryByOffset(unsigned int, signed char, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::incThreeBytePrimaryByOffset(unsigned int, signed char, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::decTwoBytePrimaryByOneStep(unsigned int, signed char, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::decThreeBytePrimaryByOneStep(unsigned int, signed char, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::getThreeBytePrimaryForOffsetData(int, long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Collation::unassignedPrimaryFromCodePoint(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalBuildTailoring(icu_73::UnicodeString const&, int, UColAttributeValue, UParseError*, icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, icu_73::Collator::ECollationStrength, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, icu_73::Collator::ECollationStrength, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, icu_73::Collator::ECollationStrength, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, icu_73::Collator::ECollationStrength, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UParseError&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::UnicodeString const&, UParseError&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::CollationBuilder(icu_73::CollationTailoring const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::parseAndBuild(icu_73::UnicodeString const&, unsigned char const*, icu_73::CollationRuleParser::Importer*, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::BundleImporter::~BundleImporter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::~CollationBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::CollationBuilder(icu_73::CollationTailoring const*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::CollationBuilder(icu_73::CollationTailoring const*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::CollationBuilder(icu_73::CollationTailoring const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::~CollationBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::~CollationBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationSettings* icu_73::SharedObject::copyOnWrite<icu_73::CollationSettings>(icu_73::CollationSettings const*&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::makeTailoredCEs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::closeOverComposites(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::finalizeCEs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addReset(int, icu_73::UnicodeString const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::getSpecialResetPosition(icu_73::UnicodeString const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::findOrInsertNodeForCEs(int, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::findOrInsertNodeForPrimary(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::findCommonNode(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::getWeight16Before(int, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::insertNodeBetween(int, int, long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::findOrInsertWeakNode(int, unsigned int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::ceStrength(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::findOrInsertNodeForRootCE(long long, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addRelation(int, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::insertTailoredNodeAfter(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::setCaseBits(icu_73::UnicodeString const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::operator!=(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::ignorePrefix(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::ignoreString(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addIfDifferent(icu_73::UnicodeString const&, icu_73::UnicodeString const&, long long const*, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addWithClosure(icu_73::UnicodeString const&, icu_73::UnicodeString const&, long long const*, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::suppressContractions(icu_73::UnicodeSet const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::optimize(icu_73::UnicodeSet const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addOnlyClosure(icu_73::UnicodeString const&, icu_73::UnicodeString const&, long long const*, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::addTailComposites(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::mergeCompositeIntoString(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::isFCD(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::sameCEs(long long const*, int, long long const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationBuilder::countTailoredNodes(long long const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CEFinalizer::~CEFinalizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CEFinalizer::~CEFinalizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CEFinalizer::~CEFinalizer()",
    "type": "CPP"
  },
  {
    "name": "T _ucol_openRules_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getUnsafeSet_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CEFinalizer::modifyCE32(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CEFinalizer::modifyCE(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::BundleImporter::~BundleImporter()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::BundleImporter::getRules(char const*, char const*, icu_73::UnicodeString&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationCompare::compareUpToQuaternary(icu_73::CollationIterator&, icu_73::CollationIterator&, icu_73::CollationSettings const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationSettings::reorder(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getIndirectCE32(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getFinalCE32(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getSingleCE(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getFirstPrimaryForGroup(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getScriptIndex(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getLastPrimaryForGroup(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getGroupForPrimary(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::getEquivalentScripts(int, int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::makeReorderRanges(int const*, int, icu_73::UVector32&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::makeReorderRanges(int const*, int, signed char, icu_73::UVector32&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::addLowScriptRange(unsigned char*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationData::addHighScriptRange(unsigned char*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::CEModifier::~CEModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::CEModifier::~CEModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::CEModifier::~CEModifier()",
    "type": "CPP"
  },
  {
    "name": "t _uprv_deleteConditionalCE32_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::DataBuilderCollationIterator(icu_73::CollationDataBuilder&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::DataBuilderCollationIterator(icu_73::CollationDataBuilder&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::~DataBuilderCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::~DataBuilderCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::~DataBuilderCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::fetchCEs(icu_73::UnicodeString const&, int, long long*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::getDataCE32(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DataBuilderCollationIterator::getCE32FromBuilderData(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::buildContext(icu_73::ConditionalCE32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::clearContexts()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::CollationDataBuilder(signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::CollationDataBuilder(signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::~CollationDataBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::~CollationDataBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::~CollationDataBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::initForTailoring(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::maybeSetPrimaryRange(int, int, unsigned int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::addCE(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::setPrimaryRangeAndReturnNext(int, int, unsigned int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getCE32FromOffsetCE32(signed char, int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::isCompressibleLeadByte(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::isAssigned(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getLongPrimaryIfSingleCE(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getSingleCE(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::addCE32(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::addConditionalCE32(icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::add(icu_73::UnicodeString const&, icu_73::UnicodeString const&, long long const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::addCE32(icu_73::UnicodeString const&, icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::copyFromBaseCE32(int, unsigned int, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::encodeOneCEAsCE32(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::encodeOneCE(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::encodeCEs(long long const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::encodeExpansion32(int const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::encodeExpansion(long long const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::copyContractionsFromBaseCE32(icu_73::UnicodeString&, int, unsigned int, icu_73::ConditionalCE32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::copyFrom(icu_73::CollationDataBuilder const&, icu_73::CollationDataBuilder::CEModifier const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumRangeForCopy(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::optimize(icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::suppressContractions(icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getJamoCE32s(unsigned int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::setDigitTags(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::setLeadSurrogates(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumRangeLeadValue(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::build(icu_73::CollationData&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::buildMappings(icu_73::CollationData&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::buildFastLatinTable(icu_73::CollationData&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::buildContexts(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::getFCD16(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::addContextTrie(unsigned int, icu_73::UCharsTrieBuilder&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getCEs(icu_73::UnicodeString const&, long long*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getCEs(icu_73::UnicodeString const&, int, long long*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataBuilder::getCEs(icu_73::UnicodeString const&, icu_73::UnicodeString const&, long long*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopyHelper::copyRangeCE32(int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopyHelper::copyCE32(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::ConditionalCE32>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataReader::read(icu_73::CollationTailoring const*, unsigned char const*, int, icu_73::CollationTailoring&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataReader::isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::cloneRuleData(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::cloneBinary(unsigned char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataWriter::writeTailoring(icu_73::CollationTailoring const&, icu_73::CollationSettings const&, int*, unsigned char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataWriter::writeBase(icu_73::CollationData const&, icu_73::CollationSettings const&, void const*, int, int*, unsigned char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataWriter::write(signed char, unsigned char const*, icu_73::CollationData const&, icu_73::CollationSettings const&, void const*, int, int*, unsigned char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationDataWriter::copyData(int const*, int, void const*, unsigned char*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::getOptions(icu_73::CollationData const*, icu_73::CollationSettings const&, unsigned short*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::compareUTF16(unsigned short const*, unsigned short const*, int, char16_t const*, int, char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::lookup(unsigned short const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::nextPair(unsigned short const*, int, unsigned int, char16_t const*, unsigned char const*, int&, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::getSecondaries(unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::getCases(unsigned int, signed char, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::getTertiaries(unsigned int, signed char, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::getQuaternaries(unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::compareUTF8(unsigned short const*, unsigned short const*, int, unsigned char const*, int, unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::lookupUTF8(unsigned short const*, int, unsigned char const*, int&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatin::lookupUTF8Unsafe(unsigned short const*, int, unsigned char const*, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::CollationFastLatinBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::CollationFastLatinBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::~CollationFastLatinBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::~CollationFastLatinBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::~CollationFastLatinBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::forData(icu_73::CollationData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::loadGroups(icu_73::CollationData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::getCEs(icu_73::CollationData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::encodeUniqueCEs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::resetCEs()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::encodeCharCEs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::encodeContractions(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::inSameGroup(unsigned int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::getCEsFromCE32(icu_73::CollationData const&, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::addUniqueCE(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::addContractionEntry(int, long long, long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Collation::ceFromCE32(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::getCEsFromContractionCE32(icu_73::CollationData const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::getMiniCE(long long) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationFastLatinBuilder::encodeTwoCEs(long long, long long) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::CEBuffer::~CEBuffer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::CEBuffer::~CEBuffer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::CEBuffer::ensureAppendCapacity(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::CollationIterator(icu_73::CollationIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::~CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::~CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::~CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::operator==(icu_73::CollationIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::fetchCEs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::handleGetTrailSurrogate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::foundNULTerminator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::forbidSurrogateCodePoints() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::getDataCE32(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::getCE32FromBuilderData(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::nextCEFromCE32(icu_73::CollationData const*, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::appendCEsFromCE32(icu_73::CollationData const*, int, unsigned int, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::getCE32FromPrefix(icu_73::CollationData const*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::nextSkippedCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::backwardNumSkipped(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::nextCE32FromContraction(icu_73::CollationData const*, unsigned int, char16_t const*, unsigned int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::appendNumericCEs(unsigned int, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationData::getCE32FromSupplementary(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkippedState::backwardNumCodePoints(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::nextCE32FromDiscontiguousContraction(icu_73::CollationData const*, icu_73::UCharsTrie&, unsigned int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkippedState::setFirstSkipped(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::appendNumericSegmentCEs(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::previousCE(icu_73::UVector32&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationData::isUnsafeBackward(int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationIterator::previousCEUnsafe(int, icu_73::UVector32&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UVector32::addElement(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char, 40>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long long, 40>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::~SortKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::~SortKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::~SortKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::Append(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::GetAppendBuffer(int, int, char*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKeys::LevelCallback::~LevelCallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKeys::LevelCallback::~LevelCallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKeys::LevelCallback::~LevelCallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKeys::LevelCallback::needToWrite(icu_73::Collation::Level)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKeys::writeSortKeyUpToQuaternary(icu_73::CollationIterator&, signed char const*, icu_73::CollationSettings const&, icu_73::SortKeyByteSink&, icu_73::Collation::Level, icu_73::CollationKeys::LevelCallback&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SortKeyLevel::appendByte(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SortKeyByteSink::Append(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SortKeyLevel::appendWeight16(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SortKeyLevel::ensureCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<unsigned char, 40>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::loadFromFile(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::load(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uprv_collation_root_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::getRootCacheEntry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::umtx_initOnce<char const*>(icu_73::UInitOnce&, void (*)(char const*, UErrorCode&), char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::getRoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::getData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::getSettings(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRoot::forceLoadFromFile(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationCacheEntry::CollationCacheEntry(icu_73::Locale const&, icu_73::CollationTailoring const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::lastCEWithPrimaryBefore(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::findP(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::firstCEWithPrimaryAtLeast(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getPrimaryBefore(unsigned int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::findPrimary(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getSecondaryBefore(unsigned int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getFirstSecTerForPrimary(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getTertiaryBefore(unsigned int, unsigned int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getPrimaryAfter(unsigned int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getSecondaryAfter(int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRootElements::getTertiaryAfter(int, unsigned int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Sink::~Sink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Sink::~Sink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Sink::~Sink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Sink::suppressContractions(icu_73::UnicodeSet const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Sink::optimize(icu_73::UnicodeSet const&, char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Importer::~Importer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Importer::~Importer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::Importer::~Importer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::CollationRuleParser(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::CollationRuleParser(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::~CollationRuleParser()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::~CollationRuleParser()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parse(icu_73::UnicodeString const&, icu_73::CollationSettings&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parse(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseRuleChain(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseSetting(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::skipComment(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::setParseError(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseResetAndPosition(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseRelationOperator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseRelationStrings(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseStarredCharacters(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::skipWhiteSpace(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseSpecialPosition(int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseTailoringString(int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::setErrorContext()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseString(int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::isSyntaxChar(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::readWords(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::operator==(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::setTo(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseReordering(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::getOnOffValue(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::parseUnicodeSet(int, icu_73::UnicodeSet&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationRuleParser::getReorderCode(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::forData(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumTailoredRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::handleCE32(int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::compare(int, unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::comparePrefixes(int, char16_t const*, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::addPrefixes(icu_73::CollationData const*, int, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::compareContractions(int, char16_t const*, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::addContractions(int, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::add(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::addPrefix(icu_73::CollationData const*, icu_73::UnicodeString const&, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::setPrefix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TailoredSet::addSuffix(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::CESink::~CESink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::CESink::~CESink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::CESink::~CESink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::forData(icu_73::CollationData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumCnERange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::forCodePoint(icu_73::CollationData const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::handleCE32(int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::addExpansions(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::handlePrefixes(int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::handleContractions(int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::setPrefix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ContractionsAndExpansions::addStrings(int, int, icu_73::UnicodeSet*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::CollationSettings(icu_73::CollationSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::copyReorderingFrom(icu_73::CollationSettings const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::CollationSettings(icu_73::CollationSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::~CollationSettings()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::~CollationSettings()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::~CollationSettings()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::operator==(icu_73::CollationSettings const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::resetReordering()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::aliasReordering(icu_73::CollationData const&, int const*, int, unsigned int const*, int, unsigned char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::reorderTableHasSplitBytes(unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setReordering(icu_73::CollationData const&, int const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setReorderArrays(int const*, int, unsigned int const*, int, unsigned char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::reorderEx(unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setStrength(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setFlag(int, UColAttributeValue, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setCaseFirst(UColAttributeValue, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setAlternateHandling(UColAttributeValue, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationSettings::setMaxVariable(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::CollationTailoring(icu_73::CollationSettings const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::CollationTailoring(icu_73::CollationSettings const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::~CollationTailoring()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::~CollationTailoring()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::~CollationTailoring()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::ensureOwnedData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::makeBaseVersion(unsigned char const*, unsigned char*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::setVersion(unsigned char const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationTailoring::getUCAVersion() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationCacheEntry::~CollationCacheEntry()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationCacheEntry::~CollationCacheEntry()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationCacheEntry::~CollationCacheEntry()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::CollationWeights()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::CollationWeights()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::initForPrimary(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::initForSecondary()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::initForTertiary()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::incWeight(unsigned int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::incWeightByOffset(unsigned int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::lengthenRange(icu_73::CollationWeights::WeightRange&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::getWeightRanges(unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::allocWeightsInShortRanges(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareRanges(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::allocWeightsInMinLengthRanges(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::allocWeights(unsigned int, unsigned int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationWeights::nextWeight()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::createInstance(icu_73::Locale const&, UNumberCompactStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::CompactDecimalFormat(icu_73::Locale const&, UNumberCompactStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::CompactDecimalFormat(icu_73::Locale const&, UNumberCompactStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::CompactDecimalFormat(icu_73::CompactDecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::CompactDecimalFormat(icu_73::CompactDecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::~CompactDecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::~CompactDecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::~CompactDecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::operator=(icu_73::CompactDecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompactDecimalFormat::parseCurrency(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CopticCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::CopticCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::CopticCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::CopticCalendar(icu_73::CopticCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::CopticCalendar(icu_73::CopticCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::~CopticCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::~CopticCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::~CopticCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CopticCalendar::getJDEpochOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::Transliterator* const*, int, icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::joinIDs(icu_73::Transliterator* const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::setTransliterators(icu_73::Transliterator* const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::Transliterator* const*, int, icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, UTransDirection, icu_73::UnicodeFilter*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::init(icu_73::UnicodeString const&, UTransDirection, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, UTransDirection, icu_73::UnicodeFilter*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, icu_73::UVector&, icu_73::UnicodeFilter*, int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::init(icu_73::UVector&, UTransDirection, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UnicodeString const&, icu_73::UVector&, icu_73::UnicodeFilter*, int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UVector&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UVector&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UVector&, int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::UVector&, int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::computeMaximumContextLength()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::CompoundTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::operator=(icu_73::CompoundTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::CompoundTransliterator(icu_73::CompoundTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::~CompoundTransliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::freeTransliterators()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::~CompoundTransliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::~CompoundTransliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::getCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::getTransliterator(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::adoptTransliterators(icu_73::Transliterator**, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::toRules(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_smartAppend(icu_73::UnicodeString&, char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::handleGetSourceSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::getTargetSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CompoundTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::setRecognizers(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::CharsetDetector(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::CharsetDetector(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::~CharsetDetector()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::~CharsetDetector()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::setText(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::setStripTagsFlag(signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::getStripTagsFlag() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::setDeclaredEncoding(char const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::getDetectableCount()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::detect(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::detectAll(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t charsetMatchComparator(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::setDetectableCharset(char const*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::getAllDetectableCharsets(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetDetector::getDetectableCharsets(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t csdet_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t enumClose(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t enumCount(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t enumNext(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t enumReset(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::CharsetMatch()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::CharsetMatch()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::set(icu_73::InputText*, icu_73::CharsetRecognizer const*, int, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::getConfidence() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetMatch::getUChars(char16_t*, int, UErrorCode*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022::match_2022(unsigned char const*, int, unsigned char const (*) [5], int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022JP::~CharsetRecog_2022JP()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022::~CharsetRecog_2022()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022JP::~CharsetRecog_2022JP()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022JP::~CharsetRecog_2022JP()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022JP::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022JP::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022KR::~CharsetRecog_2022KR()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022KR::~CharsetRecog_2022KR()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022KR::~CharsetRecog_2022KR()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022KR::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022KR::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022CN::~CharsetRecog_2022CN()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022CN::~CharsetRecog_2022CN()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022CN::~CharsetRecog_2022CN()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022CN::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022CN::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022::~CharsetRecog_2022()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_2022::~CharsetRecog_2022()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecognizer::~CharsetRecognizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecognizer::~CharsetRecognizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecognizer::~CharsetRecognizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecognizer::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IteratedChar::IteratedChar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IteratedChar::IteratedChar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IteratedChar::nextByte(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_mbcs::~CharsetRecog_mbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_mbcs::~CharsetRecog_mbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_mbcs::~CharsetRecog_mbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_mbcs::match_mbcs(icu_73::InputText*, unsigned short const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::~CharsetRecog_sjis()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::~CharsetRecog_sjis()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::~CharsetRecog_sjis()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::nextChar(icu_73::IteratedChar*, icu_73::InputText*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sjis::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc::~CharsetRecog_euc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc::~CharsetRecog_euc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc::~CharsetRecog_euc()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc::nextChar(icu_73::IteratedChar*, icu_73::InputText*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::~CharsetRecog_euc_jp()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::~CharsetRecog_euc_jp()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::~CharsetRecog_euc_jp()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_jp::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::~CharsetRecog_euc_kr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::~CharsetRecog_euc_kr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::~CharsetRecog_euc_kr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_euc_kr::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::~CharsetRecog_big5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::~CharsetRecog_big5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::~CharsetRecog_big5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::nextChar(icu_73::IteratedChar*, icu_73::InputText*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_big5::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::~CharsetRecog_gb_18030()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::~CharsetRecog_gb_18030()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::~CharsetRecog_gb_18030()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::nextChar(icu_73::IteratedChar*, icu_73::InputText*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_gb_18030::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::NGramParser(int const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::NGramParser(int const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::~NGramParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::~NGramParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::~NGramParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::search(int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::lookup(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::addByte(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::nextByte(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::parseCharacters(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser::parse(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::NGramParser_IBM420(int const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::NGramParser_IBM420(int const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::~NGramParser_IBM420()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::~NGramParser_IBM420()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::~NGramParser_IBM420()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::isLamAlef(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::nextByte(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NGramParser_IBM420::parseCharacters(icu_73::InputText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sbcs::CharsetRecog_sbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sbcs::~CharsetRecog_sbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sbcs::~CharsetRecog_sbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sbcs::~CharsetRecog_sbcs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_sbcs::match_sbcs(icu_73::InputText*, int const*, unsigned char const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_1::~CharsetRecog_8859_1()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_1::~CharsetRecog_8859_1()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_1::~CharsetRecog_8859_1()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_1::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_1::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_2::~CharsetRecog_8859_2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_2::~CharsetRecog_8859_2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_2::~CharsetRecog_8859_2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_2::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_2::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5::~CharsetRecog_8859_5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5::~CharsetRecog_8859_5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5::~CharsetRecog_8859_5()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5_ru::~CharsetRecog_8859_5_ru()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5_ru::~CharsetRecog_8859_5_ru()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5_ru::~CharsetRecog_8859_5_ru()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5_ru::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_5_ru::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6::~CharsetRecog_8859_6()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6::~CharsetRecog_8859_6()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6::~CharsetRecog_8859_6()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6_ar::~CharsetRecog_8859_6_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6_ar::~CharsetRecog_8859_6_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6_ar::~CharsetRecog_8859_6_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6_ar::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_6_ar::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7::~CharsetRecog_8859_7()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7::~CharsetRecog_8859_7()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7::~CharsetRecog_8859_7()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7_el::~CharsetRecog_8859_7_el()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7_el::~CharsetRecog_8859_7_el()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7_el::~CharsetRecog_8859_7_el()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7_el::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_7_el::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8::~CharsetRecog_8859_8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8::~CharsetRecog_8859_8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8::~CharsetRecog_8859_8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::~CharsetRecog_8859_8_I_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::~CharsetRecog_8859_8_I_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::~CharsetRecog_8859_8_I_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_I_he::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_he::~CharsetRecog_8859_8_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_he::~CharsetRecog_8859_8_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_he::~CharsetRecog_8859_8_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_he::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_8_he::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9::~CharsetRecog_8859_9()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9::~CharsetRecog_8859_9()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9::~CharsetRecog_8859_9()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9_tr::~CharsetRecog_8859_9_tr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9_tr::~CharsetRecog_8859_9_tr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9_tr::~CharsetRecog_8859_9_tr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9_tr::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_8859_9_tr::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::~CharsetRecog_windows_1256()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::~CharsetRecog_windows_1256()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::~CharsetRecog_windows_1256()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1256::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::~CharsetRecog_windows_1251()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::~CharsetRecog_windows_1251()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::~CharsetRecog_windows_1251()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_windows_1251::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::~CharsetRecog_KOI8_R()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::~CharsetRecog_KOI8_R()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::~CharsetRecog_KOI8_R()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_KOI8_R::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he::~CharsetRecog_IBM424_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he::~CharsetRecog_IBM424_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he::~CharsetRecog_IBM424_he()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_rtl::~CharsetRecog_IBM424_he_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_rtl::~CharsetRecog_IBM424_he_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_rtl::~CharsetRecog_IBM424_he_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_rtl::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_rtl::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_ltr::~CharsetRecog_IBM424_he_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_ltr::~CharsetRecog_IBM424_he_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_ltr::~CharsetRecog_IBM424_he_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_ltr::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM424_he_ltr::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar::~CharsetRecog_IBM420_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar::~CharsetRecog_IBM420_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar::~CharsetRecog_IBM420_ar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar::getLanguage() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar::match_sbcs(icu_73::InputText*, int const*, unsigned char const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_rtl::~CharsetRecog_IBM420_ar_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_rtl::~CharsetRecog_IBM420_ar_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_rtl::~CharsetRecog_IBM420_ar_rtl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_rtl::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_rtl::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_ltr::~CharsetRecog_IBM420_ar_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_ltr::~CharsetRecog_IBM420_ar_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_ltr::~CharsetRecog_IBM420_ar_ltr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_ltr::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_IBM420_ar_ltr::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_Unicode::~CharsetRecog_Unicode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_Unicode::~CharsetRecog_Unicode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_Unicode::~CharsetRecog_Unicode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_BE::~CharsetRecog_UTF_16_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_BE::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_BE::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_LE::~CharsetRecog_UTF_16_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_LE::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_16_LE::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32::~CharsetRecog_UTF_32()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32::~CharsetRecog_UTF_32()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32::~CharsetRecog_UTF_32()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_BE::~CharsetRecog_UTF_32_BE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_BE::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_BE::getChar(unsigned char const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_LE::~CharsetRecog_UTF_32_LE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_LE::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF_32_LE::getChar(unsigned char const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF8::~CharsetRecog_UTF8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF8::~CharsetRecog_UTF8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF8::~CharsetRecog_UTF8()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF8::getName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharsetRecog_UTF8::match(icu_73::InputText*, icu_73::CharsetMatch*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(icu_73::Formattable const&, icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(icu_73::Formattable const&, icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(double, icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(double, icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(icu_73::CurrencyAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::CurrencyAmount(icu_73::CurrencyAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::operator=(icu_73::CurrencyAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::~CurrencyAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::~CurrencyAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::~CurrencyAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::getCurrency() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyAmount::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::CurrencyFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::CurrencyFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::CurrencyFormat(icu_73::CurrencyFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::CurrencyFormat(icu_73::CurrencyFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::~CurrencyFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::~CurrencyFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::~CurrencyFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CurrencyFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::initialize(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(icu_73::CurrencyPluralInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::operator=(icu_73::CurrencyPluralInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::CurrencyPluralInfo(icu_73::CurrencyPluralInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::deleteHash(icu_73::Hashtable*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::initHash(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::copyHash(icu_73::Hashtable const*, icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::~CurrencyPluralInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::~CurrencyPluralInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::~CurrencyPluralInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::operator==(icu_73::CurrencyPluralInfo const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::getPluralRules() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::getCurrencyPluralPattern(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::getLocale() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::setPluralRules(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::setCurrencyPluralPattern(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable::put(icu_73::UnicodeString const&, void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::setLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyPluralInfo::setupCurrencyPluralPattern(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::findAndReplace(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ValueComparator(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::Hashtable>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::ConstChar16Ptr, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::CurrencyUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::CurrencyUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::MeasureUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit(icu_73::MeasureUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::CurrencyUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::operator=(icu_73::CurrencyUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::~CurrencyUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::~CurrencyUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::~CurrencyUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CurrencyUnit::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::DangiCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::getDangiCalZoneAstroCalc(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::DangiCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::DangiCalendar(icu_73::DangiCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::DangiCalendar(icu_73::DangiCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::~DangiCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::~DangiCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::~DangiCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DangiCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DangiCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t calendar_dangi_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPattern::~DateFmtBestPattern()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPattern::~DateFmtBestPattern()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPattern::~DateFmtBestPattern()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::~DateFmtBestPatternKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::~DateFmtBestPatternKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::~DateFmtBestPatternKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::DateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::DateFormat(icu_73::DateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::operator=(icu_73::DateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::~DateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::~DateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::~DateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::format(double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::parse(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::parse(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createTimeInstance(icu_73::DateFormat::EStyle, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createDateTimeInstance(icu_73::DateFormat::EStyle, icu_73::DateFormat::EStyle, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createDateInstance(icu_73::DateFormat::EStyle, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::create(icu_73::DateFormat::EStyle, icu_73::DateFormat::EStyle, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createInstance()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getBestPattern(icu_73::Locale const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createInstanceForSkeleton(icu_73::Calendar*, icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createInstanceForSkeleton(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::createInstanceForSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::adoptCalendar(icu_73::Calendar*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setCalendar(icu_73::Calendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getCalendar() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::adoptNumberFormat(icu_73::NumberFormat*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setNumberFormat(icu_73::NumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getNumberFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::adoptTimeZone(icu_73::TimeZone*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setTimeZone(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getTimeZone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::isLenient() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setCalendarLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::isCalendarLenient() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getContext(UDisplayContextType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::setBooleanAttribute(UDateFormatBooleanAttribute, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormat::getBooleanAttribute(UDateFormatBooleanAttribute, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::DateFmtBestPatternKey(icu_73::Locale const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::DateFmtBestPattern>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::DateFmtBestPattern> const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPatternKey::DateFmtBestPatternKey(icu_73::DateFmtBestPatternKey const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFmtBestPattern::DateFmtBestPattern(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::DateFmtBestPattern>(icu_73::CacheKey<icu_73::DateFmtBestPattern> const&, void const*, icu_73::DateFmtBestPattern const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::DateFmtBestPattern>(icu_73::DateFmtBestPattern const*, icu_73::DateFmtBestPattern const*&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::~DayPeriodRulesDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::~DayPeriodRulesDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::~DayPeriodRulesDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesCountSink::~DayPeriodRulesCountSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesCountSink::~DayPeriodRulesCountSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesCountSink::~DayPeriodRulesCountSink()",
    "type": "CPP"
  },
  {
    "name": "t _dayPeriodRulesCleanup_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::load(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::getInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::DayPeriodRules()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::DayPeriodRules()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::getMidPointForDayPeriod(icu_73::DayPeriodRules::DayPeriod, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::getStartHourForDayPeriod(icu_73::DayPeriodRules::DayPeriod, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::getEndHourForDayPeriod(icu_73::DayPeriodRules::DayPeriod, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::getDayPeriodFromString(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::add(int, int, icu_73::DayPeriodRules::DayPeriod)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRules::allHoursAreSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesCountSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::parseSetNum(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::processRules(icu_73::ResourceTable const&, char const*, icu_73::ResourceValue&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::parseSetNum(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::getCutoffTypeFromString(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::addCutoff(icu_73::(anonymous namespace)::CutoffType, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::setDayPeriodForHoursFromCutoffs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DayPeriodRulesDataSink::parseHour(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::initialize(icu_73::Locale const&, UErrorCode&, signed char, icu_73::NumberingSystem const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::Locale const&, icu_73::NumberingSystem const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::Locale const&, icu_73::NumberingSystem const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::initialize()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::createWithLastResortData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::~DecimalFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::~DecimalFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::~DecimalFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::operator=(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::DecimalFormatSymbols(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::operator==(icu_73::DecimalFormatSymbols const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::setCurrency(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CurrencySpacingSink::~CurrencySpacingSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::DecFmtSymDataSink::~DecFmtSymDataSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::getPatternForCurrencySpacing(UCurrencySpacing, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormatSymbols::setPatternForCurrencySpacing(UCurrencySpacing, signed char, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::DecFmtSymDataSink::~DecFmtSymDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::DecFmtSymDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecimalFormatSymbols::setSymbol(icu_73::DecimalFormatSymbols::ENumberFormatSymbol, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CurrencySpacingSink::~CurrencySpacingSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CurrencySpacingSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextClearStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextDefault_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSetStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextGetRounding_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextGetStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextRestoreStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSaveStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSetRounding_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSetStatusFromString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSetStatusFromStringQuiet_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextSetStatusQuiet_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextStatusToString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextTestSavedStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextTestStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decContextZeroStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberFromInt32_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberFromUInt32_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberZero_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToInt32_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToUInt32_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToString_73",
    "type": "CPP"
  },
  {
    "name": "t decToString(decNumber const*, char*, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToEngString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberFromString_73",
    "type": "CPP"
  },
  {
    "name": "t decSetCoeff(decNumber*, decContext*, unsigned char const*, int, int*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "t decFinalize(decNumber*, decContext*, int*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "t decStatus(decNumber*, unsigned int, decContext*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberAbs_73",
    "type": "CPP"
  },
  {
    "name": "t decAddOp(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned char, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberAdd_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberAnd_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCompare_73",
    "type": "CPP"
  },
  {
    "name": "t decCompareOp(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned char, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCompareSignal_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCompareTotal_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCompareTotalMag_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCopy_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberDivide_73",
    "type": "CPP"
  },
  {
    "name": "t decDivideOp(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned char, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberDivideInteger_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberExp_73",
    "type": "CPP"
  },
  {
    "name": "t decCheckMath(decNumber const*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "t decExpOp(decNumber*, decNumber const*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberFMA_73",
    "type": "CPP"
  },
  {
    "name": "t decMultiplyOp(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberInvert_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberLn_73",
    "type": "CPP"
  },
  {
    "name": "t decLnOp(decNumber*, decNumber const*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberLogB_73",
    "type": "CPP"
  },
  {
    "name": "t decNaNs(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCopyAbs_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberLog10_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMax_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMaxMag_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMin_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMinMag_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMinus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberNextMinus_73",
    "type": "CPP"
  },
  {
    "name": "t decSetMaxValue(decNumber*, decContext*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberNextPlus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberNextToward_73",
    "type": "CPP"
  },
  {
    "name": "t decCompare(decNumber const*, decNumber const*, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCopySign_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberIsNormal_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberOr_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberPlus_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberMultiply_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberPower_73",
    "type": "CPP"
  },
  {
    "name": "t decShiftToMost(unsigned char*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t decGetInt(decNumber const*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberQuantize_73",
    "type": "CPP"
  },
  {
    "name": "t decQuantizeOp(decNumber*, decNumber const*, decNumber const*, decContext*, unsigned char, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberNormalize_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberReduce_73",
    "type": "CPP"
  },
  {
    "name": "t decTrim(decNumber*, decContext*, unsigned char, unsigned char, int*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberRescale_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberRemainder_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberRemainderNear_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberRotate_73",
    "type": "CPP"
  },
  {
    "name": "t decShiftToLeast(unsigned char*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberSameQuantum_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberScaleB_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberShift_73",
    "type": "CPP"
  },
  {
    "name": "t decDecap(decNumber*, int)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberSquareRoot_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberSubtract_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToIntegralExact_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberToIntegralValue_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberXor_73",
    "type": "CPP"
  },
  {
    "name": "t uprv_decNumberClass(decNumber const*, decContext*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberClassToString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberCopyNegate_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberGetBCD_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberSetBCD_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberIsSubnormal_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberTrim_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_decNumberVersion_73",
    "type": "CPP"
  },
  {
    "name": "t decUnitAddSub(unsigned char const*, int, unsigned char const*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t decUnitCompare(unsigned char const*, int, unsigned char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t decApplyRound(decNumber*, decContext*, int, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "t decSetOverflow(decNumber*, decContext*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "t decSetSubnormal(decNumber*, decContext*, int*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::DecimalFormatSymbols const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setPropertiesFromPattern(icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::touch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::~DecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::DecimalFormatSymbols const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::~DecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::DecimalFormatSymbols const>::adoptInsteadAndCheckErrorCode(icu_73::DecimalFormatSymbols const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setParseAllInput(UNumberFormatAttributeValue)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setAttribute(UNumberFormatAttribute, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setSignificantDigitsUsed(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMaximumSignificantDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMinimumSignificantDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMultiplierScale(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setParseNoExponent(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setCurrencyUsage(UCurrencyUsage, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMinimumGroupingDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setParseCaseSensitive(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setSignAlwaysShown(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setFormatFailIfMoreThanMaxDigits(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getAttribute(UNumberFormatAttribute, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isDecimalSeparatorAlwaysShown() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::areSignificantDigitsUsed() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMaximumSignificantDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMinimumSignificantDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMultiplier() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMultiplierScale() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getGroupingSize() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getSecondaryGroupingSize() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isParseNoExponent() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isDecimalPatternMatchRequired() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getCurrencyUsage() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMinimumGroupingDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isParseCaseSensitive() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isSignAlwaysShown() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isFormatFailIfMoreThanMaxDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setGroupingUsed(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::touchNoError()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setParseIntegerOnly(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::DecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::DecimalFormat(icu_73::DecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::operator=(icu_73::DecimalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::DecimalFormatProperties::operator=(icu_73::number::impl::DecimalFormatProperties const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::~DecimalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::fastFormatDouble(double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::fieldPositionHelper(icu_73::number::impl::UFormattedNumberData const&, icu_73::FieldPosition&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::fieldPositionIteratorHelper(icu_73::number::impl::UFormattedNumberData const&, icu_73::FieldPositionIterator*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::fastFormatInt64(long long, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(icu_73::StringPiece, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(icu_73::number::impl::DecimalQuantity const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::format(icu_73::number::impl::DecimalQuantity const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getParser(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ParsedNumber::~ParsedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::parseCurrency(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getCurrencyParser(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getDecimalFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::adoptDecimalFormatSymbols(icu_73::DecimalFormatSymbols*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setDecimalFormatSymbols(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getCurrencyPluralInfo() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::adoptCurrencyPluralInfo(icu_73::CurrencyPluralInfo*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setCurrencyPluralInfo(icu_73::CurrencyPluralInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getPositivePrefix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setPositivePrefix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getNegativePrefix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setNegativePrefix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getPositiveSuffix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setPositiveSuffix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getNegativeSuffix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setNegativeSuffix(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMultiplier(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getRoundingIncrement() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setRoundingIncrement(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getRoundingMode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setRoundingMode(icu_73::NumberFormat::ERoundingMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getFormatWidth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setFormatWidth(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getPadCharacterString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setPadCharacter(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getPadPosition() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setPadPosition(icu_73::DecimalFormat::EPadPosition)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isScientificNotation() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setScientificNotation(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::getMinimumExponentDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMinimumExponentDigits(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::isExponentSignAlwaysShown() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setExponentSignAlwaysShown(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setGroupingSize(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setSecondaryGroupingSize(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setDecimalSeparatorAlwaysShown(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setDecimalPatternMatchRequired(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::toPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::toLocalizedPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::applyPattern(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::applyLocalizedPattern(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::applyLocalizedPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMaximumIntegerDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMinimumIntegerDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMaximumFractionDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setMinimumFractionDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setCurrency(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setCurrency(char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::formatToDecimalQuantity(double, icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::formatToDecimalQuantity(icu_73::Formattable const&, icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::toNumberFormatter(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MacroProps::~MacroProps()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::setupFastFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DecimalFormat::doFastFormatInt32(int, bool, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::DecimalFormatFields::DecimalFormatFields()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MacroProps::MacroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AutoAffixPatternProvider::~AutoAffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::DecimalFormatFields::DecimalFormatFields(icu_73::number::impl::DecimalFormatProperties const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoWrapper::operator=(icu_73::number::impl::CurrencyPluralInfoWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberData::UFormattedNumberData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::DecimalFormatProperties::DecimalFormatProperties(icu_73::number::impl::DecimalFormatProperties const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoWrapper::CurrencyPluralInfoWrapper(icu_73::number::impl::CurrencyPluralInfoWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::DecimalFormatProperties::~DecimalFormatProperties()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::builder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::Builder::Builder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::copyToBuilder() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::Builder::Builder(icu_73::DisplayOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::DisplayOptions(icu_73::DisplayOptions::Builder const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::DisplayOptions(icu_73::DisplayOptions::Builder const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::Builder::Builder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DisplayOptions::Builder::Builder(icu_73::DisplayOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_getGrammaticalCaseIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_fromGrammaticalCaseIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_getPluralCategoryIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_fromPluralCategoryIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_getNounClassIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "T _udispopt_fromNounClassIdentifier_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::BignumDtoa(double, icu_73::double_conversion::BignumDtoaMode, int, icu_73::double_conversion::Vector<char>, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::GenerateCountedDigits(int, int*, icu_73::double_conversion::Bignum*, icu_73::double_conversion::Bignum*, icu_73::double_conversion::Vector<char>, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::RawBigit(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::RawBigit(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignUInt16(unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignUInt64(unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignBignum(icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignDecimalString(icu_73::double_conversion::Vector<char const>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::MultiplyByPowerOfTen(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AddUInt64(unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::Clamp()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignHexString(icu_73::double_conversion::Vector<char const>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AddBignum(icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::Align(icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::SubtractBignum(icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::ShiftLeft(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::BigitsShiftLeft(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::MultiplyByUInt32(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::MultiplyByUInt64(unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::Square()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::AssignPowerUInt16(unsigned short, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::DivideModuloIntBignum(icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::SubtractTimes(icu_73::double_conversion::Bignum const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::ToHexString(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::BigitOrZero(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::Compare(icu_73::double_conversion::Bignum const&, icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Bignum::PlusCompare(icu_73::double_conversion::Bignum const&, icu_73::double_conversion::Bignum const&, icu_73::double_conversion::Bignum const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::PowersOfTenCache::GetCachedPowerForBinaryExponentRange(int, int, icu_73::double_conversion::DiyFp*, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::PowersOfTenCache::GetCachedPowerForDecimalExponent(int, icu_73::double_conversion::DiyFp*, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::double_conversion::DoubleToStringConverter::DoubleToAscii(double, icu_73::double_conversion::DoubleToStringConverter::DtoaMode, int, char*, int, bool*, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::FastDtoa(double, icu_73::double_conversion::FastDtoaMode, int, icu_73::double_conversion::Vector<char>, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Double::AsNormalizedDiyFp() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Double::NormalizedBoundaries(icu_73::double_conversion::DiyFp*, icu_73::double_conversion::DiyFp*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Single::NormalizedBoundaries(icu_73::double_conversion::DiyFp*, icu_73::double_conversion::DiyFp*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::RoundWeed(icu_73::double_conversion::Vector<char>, int, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::RoundWeedCounted(icu_73::double_conversion::Vector<char>, int, unsigned long long, unsigned long long, unsigned long long, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StringToDoubleConverter::StringToDouble(char const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::StringToDoubleConverter::StringToIeee<char const*>(char const*, int, bool, int*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StringToDoubleConverter::StringToDouble(unsigned short const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::StringToDoubleConverter::StringToIeee<unsigned short const*>(unsigned short const*, int, bool, int*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StringToDoubleConverter::StringToFloat(char const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StringToDoubleConverter::StringToFloat(unsigned short const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::StringToDoubleConverter::StringTo<double>(char const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t float icu_73::double_conversion::StringToDoubleConverter::StringTo<float>(char const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::StringToDoubleConverter::StringTo<double>(unsigned short const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t float icu_73::double_conversion::StringToDoubleConverter::StringTo<float>(unsigned short const*, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::(anonymous namespace)::ConsumeSubString<char const*>(char const**, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::Advance<char const*>(char const**, unsigned short, int, char const*&)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::IsHexFloatString<char const*>(char const*, char const*, unsigned short, bool)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::isDigit(int, int)",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::RadixStringToIeee<4, char const*>(char const**, char const*, bool, unsigned short, bool, bool, double, bool, bool*)",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::RadixStringToIeee<3, char*>(char**, char*, bool, unsigned short, bool, bool, double, bool, bool*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Double::DiyFpToUint64(icu_73::double_conversion::DiyFp)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::Advance<char*>(char**, unsigned short, int, char*&)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::AdvanceToNonspace<unsigned short const*>(unsigned short const**, unsigned short const*)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::(anonymous namespace)::ConsumeSubString<unsigned short const*>(unsigned short const**, unsigned short const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::Advance<unsigned short const*>(unsigned short const**, unsigned short, int, unsigned short const*&)",
    "type": "CPP"
  },
  {
    "name": "t bool icu_73::double_conversion::IsHexFloatString<unsigned short const*>(unsigned short const*, unsigned short const*, unsigned short, bool)",
    "type": "CPP"
  },
  {
    "name": "t double icu_73::double_conversion::RadixStringToIeee<4, unsigned short const*>(unsigned short const**, unsigned short const*, bool, unsigned short, bool, bool, double, bool, bool*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StrtodTrimmed(icu_73::double_conversion::Vector<char const>, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::ComputeGuess(icu_73::double_conversion::Vector<char const>, int, double*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::CompareBufferWithDiyFp(icu_73::double_conversion::Vector<char const>, int, icu_73::double_conversion::DiyFp)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Strtod(icu_73::double_conversion::Vector<char const>, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::TrimAndCut(icu_73::double_conversion::Vector<char const>, int, char*, int, icu_73::double_conversion::Vector<char const>*, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::Strtof(icu_73::double_conversion::Vector<char const>, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::double_conversion::StrtofTrimmed(icu_73::double_conversion::Vector<char const>, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedDateFormatSymbols::~SharedDateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::~DateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedDateFormatSymbols::~SharedDateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedDateFormatSymbols::~SharedDateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::createForLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::SharedDateFormatSymbols>(icu_73::Locale const&, icu_73::SharedDateFormatSymbols const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::DateFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::initializeData(icu_73::Locale const&, char const*, UErrorCode&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::DateFormatSymbols(icu_73::DateFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::copyData(icu_73::DateFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::assignArray(icu_73::UnicodeString*&, int&, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::createZoneStrings(icu_73::UnicodeString const* const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::operator=(icu_73::DateFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::dispose()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::~DateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::~DateFormatSymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::disposeZoneStrings()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::arrayCompare(icu_73::UnicodeString const*, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::operator==(icu_73::DateFormatSymbols const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getEras(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getEraNames(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getNarrowEras(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getMonths(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getShortMonths(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getMonths(int&, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getWeekdays(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getShortWeekdays(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getWeekdays(int&, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getQuarters(int&, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getTimeSeparatorString(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getAmPmStrings(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getLeapMonthPatterns(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getYearNames(int&, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setYearNames(icu_73::UnicodeString const*, int, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getZodiacNames(int&, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setZodiacNames(icu_73::UnicodeString const*, int, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setEras(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setEraNames(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setNarrowEras(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setMonths(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setShortMonths(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setMonths(icu_73::UnicodeString const*, int, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setWeekdays(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setShortWeekdays(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setWeekdays(icu_73::UnicodeString const*, int, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setQuarters(icu_73::UnicodeString const*, int, icu_73::DateFormatSymbols::DtContextType, icu_73::DateFormatSymbols::DtWidthType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setAmPmStrings(icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setTimeSeparatorString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getZoneStrings(int&, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::initZoneStringsArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setZoneStrings(icu_73::UnicodeString const* const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getPatternUChars()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getPatternCharIndex(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::isNumericField(UDateFormatField, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::isNumericPatternChar(char16_t, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::getLocalPatternChars(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateFormatSymbols::setLocalPatternChars(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initLeapMonthPattern(icu_73::UnicodeString*, int, icu_73::(anonymous namespace)::CalendarDataSink&, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::buildResourcePath(icu_73::CharString&, char const*, char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initField(icu_73::UnicodeString**, int&, icu_73::(anonymous namespace)::CalendarDataSink&, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::buildResourcePath(icu_73::CharString&, char const*, char const*, char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::loadDayPeriodStrings(icu_73::(anonymous namespace)::CalendarDataSink&, icu_73::CharString&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::buildResourcePath(icu_73::CharString&, char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initField(icu_73::UnicodeString**, int&, icu_73::(anonymous namespace)::CalendarDataSink&, icu_73::CharString&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initField(icu_73::UnicodeString**, int&, char16_t const*, LastResortSize, LastResortSize, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::~CalendarDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SharedDateFormatSymbols::SharedDateFormatSymbols(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::~CalendarDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::Hashtable, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::Hashtable*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::processAliasFromValue(icu_73::UnicodeString&, icu_73::ResourceValue&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable::puti(icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::processResource(icu_73::UnicodeString&, char const*, icu_73::ResourceValue&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::setTo(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::compare(icu_73::ConstChar16Ptr, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString>::~LocalArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable* icu_73::MemoryPool<icu_73::Hashtable, 8>::create<bool, UErrorCode&>(bool&&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::retainBetween(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CalendarDataSink::deleteUnicodeStringArray(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::SharedDateFormatSymbols>(icu_73::CacheKey<icu_73::SharedDateFormatSymbols> const&, void const*, icu_73::SharedDateFormatSymbols const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedDateFormatSymbols>(icu_73::SharedDateFormatSymbols const*, icu_73::SharedDateFormatSymbols const*&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::SharedDateFormatSymbols>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::SharedDateFormatSymbols> const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedDateIntervalData::~FormattedDateIntervalData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedDateIntervalData::~FormattedDateIntervalData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedDateIntervalData::~FormattedDateIntervalData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::FormattedDateInterval(icu_73::FormattedDateInterval&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::FormattedDateInterval(icu_73::FormattedDateInterval&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::~FormattedDateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::~FormattedDateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::~FormattedDateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::operator=(icu_73::FormattedDateInterval&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedDateInterval::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::createInstance(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::createInstance(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::create(icu_73::Locale const&, icu_73::DateIntervalInfo*, icu_73::UnicodeString const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::createInstance(icu_73::UnicodeString const&, icu_73::DateIntervalInfo const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::createInstance(icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::DateIntervalInfo const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat(icu_73::DateIntervalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::operator=(icu_73::DateIntervalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat(icu_73::DateIntervalFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::~DateIntervalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::~DateIntervalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::~DateIntervalFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::format(icu_73::DateInterval const*, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::formatIntervalImpl(icu_73::DateInterval const&, icu_73::UnicodeString&, signed char&, icu_73::FieldPositionHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::formatToValue(icu_73::DateInterval const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::format(icu_73::Calendar&, icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::formatImpl(icu_73::Calendar&, icu_73::Calendar&, icu_73::UnicodeString&, signed char&, icu_73::FieldPositionHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::formatToValue(icu_73::Calendar&, icu_73::Calendar&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::fallbackFormat(icu_73::Calendar&, icu_73::Calendar&, signed char, icu_73::UnicodeString&, signed char&, icu_73::FieldPositionHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getDateIntervalInfo() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setDateIntervalInfo(icu_73::DateIntervalInfo const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::initializePattern(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getDateFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::adoptTimeZone(icu_73::TimeZone*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setTimeZone(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getTimeZone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getContext(UDisplayContextType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat(icu_73::Locale const&, icu_73::DateIntervalInfo*, icu_73::UnicodeString const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::DateIntervalFormat(icu_73::Locale const&, icu_73::DateIntervalInfo*, icu_73::UnicodeString const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::normalizeHourMetacharacters(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::getDateTimeSkeleton(icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::UnicodeString&, icu_73::UnicodeString&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setSeparateDateTimePtn(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setPatternInfo(UCalendarDateFields, icu_73::UnicodeString const*, icu_73::UnicodeString const*, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::fieldExistsInSkeleton(UCalendarDateFields, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setFallbackPattern(UCalendarDateFields, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::concatSingleDate2TimeInterval(icu_73::UnicodeString&, icu_73::UnicodeString const&, UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setIntervalPattern(UCalendarDateFields, icu_73::UnicodeString const*, icu_73::UnicodeString const*, signed char, icu_73::UnicodeString*, icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setIntervalPattern(UCalendarDateFields, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::setIntervalPattern(UCalendarDateFields, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::splitPatternInto2Part(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::adjustFieldWidth(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::fallbackFormatRange(icu_73::Calendar&, icu_73::Calendar&, icu_73::UnicodeString&, signed char&, icu_73::FieldPositionHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFormatter::getTextWithNoArguments(int*, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalFormat::findReplaceInPattern(icu_73::UnicodeString&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFormatter::SimpleFormatter(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::DateIntervalInfo>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::initHash(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::initializeData(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::setIntervalPattern(icu_73::UnicodeString const&, UCalendarDateFields, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::setIntervalPatternInternally(icu_73::UnicodeString const&, UCalendarDateFields, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::setFallbackIntervalPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(icu_73::DateIntervalInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::operator=(icu_73::DateIntervalInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::DateIntervalInfo(icu_73::DateIntervalInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::deleteHash(icu_73::Hashtable*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::copyHash(icu_73::Hashtable const*, icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::~DateIntervalInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::~DateIntervalInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::~DateIntervalInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::operator==(icu_73::DateIntervalInfo const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getIntervalPattern(icu_73::UnicodeString const&, UCalendarDateFields, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::calendarFieldToIntervalIndex(UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getDefaultOrder() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getFallbackIntervalPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::~DateIntervalSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::~DateIntervalSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::~DateIntervalSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable::~Hashtable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::parseSkeleton(icu_73::UnicodeString const&, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::stringNumeric(int, int, char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateIntervalInfo::getBestSkeleton(icu_73::UnicodeString const&, signed char&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::dtitvinfHashTableValueComparator(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::DateIntervalSink(icu_73::DateIntervalInfo&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::getCalendarTypeFromPath(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::processSkeletonTable(char const*, icu_73::ResourceValue&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::validateAndProcessPatternLetter(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateIntervalInfo::DateIntervalSink::setIntervalPatternIfAbsent(char const*, UCalendarDateFields, icu_73::ResourceValue const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(icu_73::Locale const&, UErrorCode&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::createInstanceNoStdPat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::createEmptyInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::FormatParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::DateTimeMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::PatternMap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(icu_73::Locale const&, UErrorCode&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::initData(icu_73::Locale const&, UErrorCode&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(icu_73::DateTimePatternGenerator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::operator=(icu_73::DateTimePatternGenerator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::DateTimePatternGenerator(icu_73::DateTimePatternGenerator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::copyFrom(icu_73::PtnSkeleton const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::DateTimeMatcher(icu_73::DateTimeMatcher const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::copyFrom(icu_73::PatternMap const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::copyHashtable(icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::operator==(icu_73::DateTimePatternGenerator const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::equals(icu_73::PatternMap const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::operator!=(icu_73::DateTimePatternGenerator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::~DateTimePatternGenerator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::~DateTimePatternGenerator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::~DateTimePatternGenerator()",
    "type": "CPP"
  },
  {
    "name": "t _deleteAllowedHourFormats_73",
    "type": "CPP"
  },
  {
    "name": "t _allowedHourFormatsCleanup_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::addCanonicalItems(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::addICUPatterns(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::addCLDRData(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setDateTimeFromCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setDecimalSymbols(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::loadAllowedHourFormatsData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getAllowedHourFormats(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AllowedHourFormatsSink::~AllowedHourFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getAllowedHourFormatsLangCountry(char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getDefaultHourCycle(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::PtnSkeleton()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::set(icu_73::UnicodeString const&, icu_73::FormatParser*, icu_73::PtnSkeleton&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::getSkeleton() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::~PtnSkeleton()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::~DateTimeMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::~FormatParser()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::staticGetSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBaseSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::getBaseSkeleton() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::staticGetBaseSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::addPattern(icu_73::UnicodeString const&, signed char, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::consumeShortTimePattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::hackTimes(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::set(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::isQuoteLiteral(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::getQuoteLiteral(icu_73::UnicodeString&, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::isPatternSeparator(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getCalendarTypeToUse(icu_73::Locale const&, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemFormatsSink::~AppendItemFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemFormatsSink::~AppendItemFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemFormatsSink::~AppendItemFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemNamesSink::~AppendItemNamesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemNamesSink::~AppendItemNamesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemNamesSink::~AppendItemNamesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AvailableFormatsSink::~AvailableFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AvailableFormatsSink::~AvailableFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AvailableFormatsSink::~AvailableFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemFormatsSink::fillInMissing()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemNamesSink::fillInMissing()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::initHashtable(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setAppendItemFormat(UDateTimePatternField, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getAppendItemFormat(UDateTimePatternField) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setAppendItemName(UDateTimePatternField, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setFieldDisplayName(UDateTimePatternField, UDateTimePGDisplayWidth, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getAppendItemName(UDateTimePatternField) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getFieldDisplayName(UDateTimePatternField, UDateTimePGDisplayWidth) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getMutableFieldDisplayName(UDateTimePatternField, UDateTimePGDisplayWidth)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getAppendName(UDateTimePatternField, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBestPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBestPattern(icu_73::UnicodeString const&, UDateTimePatternMatchOptions, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::mapSkeletonMetacharacters(icu_73::UnicodeString const&, int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::set(icu_73::UnicodeString const&, icu_73::FormatParser*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBestRaw(icu_73::DateTimeMatcher&, int, icu_73::DistanceInfo*, UErrorCode&, icu_73::PtnSkeleton const**)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::adjustFieldTypes(icu_73::UnicodeString const&, icu_73::PtnSkeleton const*, int, UDateTimePatternMatchOptions)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::getFieldMask() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBestAppending(int, int, UErrorCode&, UDateTimePatternMatchOptions)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::getSkeletonPtr()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::getFieldLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getDateTimeFormat(UDateFormatStyle, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::replaceFieldTypes(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::replaceFieldTypes(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UDateTimePatternMatchOptions, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setDecimal(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getDecimal() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setDateTimeFormat(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setDateTimeFormat(UDateFormatStyle, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getDateTimeFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::addPatternWithSkeleton(icu_73::UnicodeString const&, icu_73::UnicodeString const*, signed char, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::getBasePattern(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::getPatternFromBasePattern(icu_73::UnicodeString const&, signed char&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::getPatternFromSkeleton(icu_73::PtnSkeleton const&, icu_73::PtnSkeleton const**) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::add(icu_73::UnicodeString const&, icu_73::PtnSkeleton const&, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getAppendFormatNumber(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getFieldAndWidthIndices(char const*, UDateTimePGDisplayWidth*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::PatternMapIterator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::set(icu_73::PatternMap&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::equals(icu_73::DateTimeMatcher const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::getDistance(icu_73::DateTimeMatcher const&, int, icu_73::DistanceInfo&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DistanceInfo::setTo(icu_73::DistanceInfo const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::~PatternMapIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DistanceInfo::~DistanceInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::appendFieldTo(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::getFieldChar(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getTopBitNumber(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::setAvailableFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::isAvailableFormatSet(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getSkeletons(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::DTSkeletonEnumeration(icu_73::PatternMap&, icu_73::dtStrEnum, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getPatternForSkeleton(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::getHeader(char16_t) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getBaseSkeletons(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::getRedundants(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::DTRedundantEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::getSkeleton() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::isCanonicalItem(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::operator=(icu_73::DateTimeMatcher const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::getPattern()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::add(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimePatternGenerator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::PatternMap()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnElem::PtnElem(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::PtnSkeleton>::adoptInsteadAndCheckErrorCode(icu_73::PtnSkeleton*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::PtnSkeleton(icu_73::PtnSkeleton const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::~PatternMap()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::~PatternMap()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::~PatternMap()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMap::getDuplicateElem(icu_73::UnicodeString const&, icu_73::PtnSkeleton const&, icu_73::PtnElem*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::getFirstChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::equals(icu_73::PtnSkeleton const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::DateTimeMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::~DateTimeMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::~DateTimeMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::DateTimeMatcher(icu_73::DateTimeMatcher const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::clear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::populate(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::populate(int, char16_t, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::isFieldEmpty(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::clearField(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::appendTo(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::copyFrom(icu_73::PtnSkeleton const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimeMatcher::copyFrom()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::clear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::FormatParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::~FormatParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::~FormatParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::setTokens(icu_73::UnicodeString const&, int, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatParser::getCanonicalIndex(icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DistanceInfo::~DistanceInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DistanceInfo::~DistanceInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::PatternMapIterator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::DateTimeMatcher>::adoptInsteadAndCheckErrorCode(icu_73::DateTimeMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::~PatternMapIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PatternMapIterator::~PatternMapIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::SkeletonFields()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::SkeletonFields()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::copyFrom(icu_73::SkeletonFields const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SkeletonFields::getFirstChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::PtnSkeleton()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::PtnSkeleton(icu_73::PtnSkeleton const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::~PtnSkeleton()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnSkeleton::~PtnSkeleton()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnElem::PtnElem(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnElem::~PtnElem()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnElem::~PtnElem()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PtnElem::~PtnElem()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::DTSkeletonEnumeration(icu_73::PatternMap&, icu_73::dtStrEnum, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UVector>::adoptInsteadAndCheckErrorCode(icu_73::UVector*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::isCanonicalItem(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::~DTSkeletonEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::~DTSkeletonEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTSkeletonEnumeration::~DTSkeletonEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::DTRedundantEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::isCanonicalItem(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::~DTRedundantEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::~DTRedundantEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DTRedundantEnumeration::~DTRedundantEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemFormatsSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AppendItemNamesSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateTimePatternGenerator::AvailableFormatsSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AllowedHourFormatsSink::~AllowedHourFormatsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AllowedHourFormatsSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AllowedHourFormatsSink::getHourFormatFromUnicodeString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, signed char, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(int, int, int, signed char, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(icu_73::DateTimeRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::DateTimeRule(icu_73::DateTimeRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::~DateTimeRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::~DateTimeRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::~DateTimeRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::operator=(icu_73::DateTimeRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::operator==(icu_73::DateTimeRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::operator!=(icu_73::DateTimeRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getDateRuleType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getTimeRuleType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getRuleMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getRuleDayOfMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getRuleDayOfWeek() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getRuleWeekInMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateTimeRule::getRuleMillisInDay() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::EraRules(icu_73::LocalMemory<int>&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalMemory<int>::operator=(icu_73::LocalMemory<int>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::initCurrentEra()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalMemory<int>::~LocalMemory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::EraRules(icu_73::LocalMemory<int>&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::~EraRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::~EraRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::createInstance(char const*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::getStartDate(int, int (&) [3], UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::getStartYear(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EraRules::getEraIndex(int, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EscapeTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::registerIDs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscUnicode(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscJava(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscC(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscXML(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscXML10(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createEscPerl(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::EscapeTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, int, int, signed char, icu_73::EscapeTransliterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::EscapeTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, int, int, signed char, icu_73::EscapeTransliterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::EscapeTransliterator(icu_73::EscapeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::EscapeTransliterator(icu_73::EscapeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::~EscapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::~EscapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::~EscapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EscapeTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EthiopicCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EthiopicAmeteAlemCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::EthiopicCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::EthiopicCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::~EthiopicCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::~EthiopicCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::~EthiopicCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicCalendar::getJDEpochOffset() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::EthiopicAmeteAlemCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::EthiopicAmeteAlemCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::~EthiopicAmeteAlemCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::~EthiopicAmeteAlemCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::~EthiopicAmeteAlemCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EthiopicAmeteAlemCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::init()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(double, icu_73::Formattable::ISDATE)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(double, icu_73::Formattable::ISDATE)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setDecimalNumber(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UObject*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::UObject*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::Formattable const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createArrayCopy(icu_73::Formattable const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::Formattable const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::Formattable const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::operator=(icu_73::Formattable const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(icu_73::Formattable const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::dispose()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::operator==(icu_73::Formattable const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::~Formattable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::~Formattable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::~Formattable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::isNumeric() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getLong(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getInt64(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getDouble(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getObject() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setDouble(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setLong(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setInt64(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setDate(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::setArray(icu_73::Formattable const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::adoptString(icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::adoptArray(icu_73::Formattable*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::adoptObject(icu_73::UObject*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getString(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getBogus() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getString(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getArray(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::getDecimalNumber(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::internalGetCharString(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::populateDecimalQuantity(icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::adoptDecimalQuantity(icu_73::number::impl::DecimalQuantity*)",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_isNumeric_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getDate_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getDouble_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getLong_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getObject_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getArrayLength_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getArrayItemByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getDecNumChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmt_getInt64_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(icu_73::CharString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Formattable::Formattable(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::~FieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::~FieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::~FieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPosition::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::Format()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::~Format()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::~Format()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::~Format()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::Format(icu_73::Format const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::operator=(icu_73::Format const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::format(icu_73::Formattable const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::syntaxError(icu_73::UnicodeString const&, int, UParseError&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::getLocaleID(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Format::setLocaleIDs(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::FormattedStringBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::FormattedStringBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::~FormattedStringBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::~FormattedStringBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::FormattedStringBuilder(icu_73::FormattedStringBuilder const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::operator=(icu_73::FormattedStringBuilder const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::FormattedStringBuilder(icu_73::FormattedStringBuilder const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::length() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::codePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::getFirstCodePoint() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::getLastCodePoint() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::codePointAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::codePointBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::insertCodePoint(int, int, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::prepareForInsert(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::insert(int, icu_73::UnicodeString const&, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::insert(int, icu_73::UnicodeString const&, int, int, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::splice(int, int, icu_73::UnicodeString const&, int, int, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::remove(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::append(icu_73::FormattedStringBuilder const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::insert(int, icu_73::FormattedStringBuilder const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::writeTerminator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::prepareForInsertHelper(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::toUnicodeString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::toTempUnicodeString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::toDebugString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::chars() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::contentEquals(icu_73::FormattedStringBuilder const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedStringBuilder::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::FormattedValueFieldPositionIteratorImpl(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::FormattedValueFieldPositionIteratorImpl(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::~FormattedValueFieldPositionIteratorImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::~FormattedValueFieldPositionIteratorImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::~FormattedValueFieldPositionIteratorImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::getHandler(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::appendString(icu_73::UnicodeString, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::addOverlapSpans(UFieldCategory, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueFieldPositionIteratorImpl::sort()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::FormattedValueStringBuilderImpl(icu_73::FormattedStringBuilder::Field)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::FormattedValueStringBuilderImpl(icu_73::FormattedStringBuilder::Field)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::~FormattedValueStringBuilderImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::~FormattedValueStringBuilderImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::~FormattedValueStringBuilderImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::nextPositionImpl(icu_73::ConstrainedFieldPosition&, icu_73::FormattedStringBuilder::Field, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::nextFieldPosition(icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::isIntOrGroup(icu_73::FormattedStringBuilder::Field)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::getAllFieldPositions(icu_73::FieldPositionIteratorHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::resetString()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::isTrimmable(icu_73::FormattedStringBuilder::Field)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::trimBack(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::trimFront(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::appendSpanInfo(UFieldCategory, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValueStringBuilderImpl::prependSpanInfo(UFieldCategory, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::SpanInfo, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::ConstrainedFieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::ConstrainedFieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::~ConstrainedFieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::~ConstrainedFieldPosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::constrainCategory(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::constrainField(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::setInt64IterationContext(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::matchesField(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ConstrainedFieldPosition::setState(int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValue::~FormattedValue()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValue::~FormattedValue()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedValue::~FormattedValue()",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_reset_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_constrainCategory_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_constrainField_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_getCategory_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_getField_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_getIndexes_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_getInt64IterationContext_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_setInt64IterationContext_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_matchesField_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_setState_73",
    "type": "CPP"
  },
  {
    "name": "T _ucfpos_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmtval_getString_73",
    "type": "CPP"
  },
  {
    "name": "T _ufmtval_nextPosition_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionHandler::~FieldPositionHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionHandler::~FieldPositionHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionHandler::~FieldPositionHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionHandler::setShift(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::FieldPositionOnlyHandler(icu_73::FieldPosition&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::FieldPositionOnlyHandler(icu_73::FieldPosition&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::~FieldPositionOnlyHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::~FieldPositionOnlyHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::~FieldPositionOnlyHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::addAttribute(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::shiftLast(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::isRecording() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FieldPositionOnlyHandler::setAcceptFirstOnly(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::FieldPositionIteratorHandler(icu_73::FieldPositionIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::FieldPositionIteratorHandler(icu_73::FieldPositionIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::FieldPositionIteratorHandler(icu_73::UVector32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::FieldPositionIteratorHandler(icu_73::UVector32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::~FieldPositionIteratorHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::~FieldPositionIteratorHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::~FieldPositionIteratorHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::addAttribute(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::shiftLast(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIteratorHandler::isRecording() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::~FieldPositionIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::~FieldPositionIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::~FieldPositionIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::FieldPositionIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::FieldPositionIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::FieldPositionIterator(icu_73::FieldPositionIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::FieldPositionIterator(icu_73::FieldPositionIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::operator==(icu_73::FieldPositionIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::setData(icu_73::UVector32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FieldPositionIterator::next(icu_73::FieldPosition&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::FunctionReplacer(icu_73::Transliterator*, icu_73::UnicodeFunctor*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::FunctionReplacer(icu_73::Transliterator*, icu_73::UnicodeFunctor*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::FunctionReplacer(icu_73::FunctionReplacer const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::FunctionReplacer(icu_73::FunctionReplacer const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::~FunctionReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::~FunctionReplacer()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::FunctionReplacer::~FunctionReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::~FunctionReplacer()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::FunctionReplacer::~FunctionReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::toReplacer() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::FunctionReplacer::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::FunctionReplacer::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::FunctionReplacer::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FunctionReplacer::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GenderInfo_initCache(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t gender_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::GenderInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::~GenderInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::GenderInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::~GenderInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::~GenderInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::getInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::loadInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::getListGender(UGender const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::getNeutralInstance()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::getMixedNeutralInstance()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GenderInfo::getMaleTaintsInstance()",
    "type": "CPP"
  },
  {
    "name": "T _ugender_getInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _ugender_getListGender_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::TimeZone const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(int, int, int, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::~GregorianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::~GregorianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::~GregorianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::GregorianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::GregorianCalendar(icu_73::GregorianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::operator=(icu_73::GregorianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::isEquivalentTo(icu_73::Calendar const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::setGregorianChange(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getGregorianChange() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::isLeapYear(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleComputeJulianDay(UCalendarDateFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::monthLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::monthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::yearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::yearLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::pinDayOfMonth()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::validateFields() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::boundsCheck(int, UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getEpochDay(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::computeJulianDayOfYear(signed char, int, signed char&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::millisToJulianDay(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::julianDayToMillis(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::aggregateStamp(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::roll(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::roll(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getActualMinimum(icu_73::Calendar::EDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getActualMinimum(icu_73::Calendar::EDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getActualMinimum(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getActualMaximum(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::handleGetExtendedYearFromWeekFields(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::internalGetEra() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::GregorianCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ClockMath::floorDivide(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ClockMath::floorDivide(long long, long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ClockMath::floorDivide(double, int, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ClockMath::floorDivide(double, double, double*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Grego::fieldsToDay(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Grego::dayToFields(double, int&, int&, int&, int&, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Grego::timeToFields(double, int&, int&, int&, int&, int&, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Grego::dayOfWeek(double)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Grego::dayOfWeekInMonth(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::HebrewCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::HebrewCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::~HebrewCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::~HebrewCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::~HebrewCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::HebrewCalendar(icu_73::HebrewCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::HebrewCalendar(icu_73::HebrewCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::add(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::isLeapYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::add(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::roll(UCalendarDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::monthsInYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::roll(icu_73::Calendar::EDateFields, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::startOfYear(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t calendar_hebrew_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::absoluteDayToDayOfWeek(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::yearType(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::validateField(UCalendarDateFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::inTemporalLeapYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::getTemporalMonthCode(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::setTemporalMonthCode(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::internalGetMonth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::HebrewCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::IndianCalendar(icu_73::IndianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::IndianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::IndianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::IndianCalendar(icu_73::IndianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::~IndianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::~IndianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::~IndianCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IndianCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::InputText(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::InputText(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::~InputText()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::~InputText()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::setText(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::setDeclaredEncoding(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::isSet() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InputText::MungeInput(signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getUmalqura_MonthLength(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::IslamicCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::IslamicCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::~IslamicCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::~IslamicCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::~IslamicCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::civilLeapYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::yearStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::trueMonthStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::monthStart(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::moonAge(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t calendar_islamic_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::getEpoc() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::inTemporalLeapYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::IslamicCivilCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::IslamicCivilCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::~IslamicCivilCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::~IslamicCivilCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::~IslamicCivilCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::yearStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::monthStart(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::IslamicTBLACalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::IslamicTBLACalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::~IslamicTBLACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::~IslamicTBLACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::~IslamicTBLACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::getEpoc() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::IslamicUmalquraCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::IslamicUmalquraCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::~IslamicUmalquraCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::~IslamicUmalquraCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::~IslamicUmalquraCalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::yearStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::monthStart(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::IslamicRGSACalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::IslamicRGSACalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::~IslamicRGSACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::~IslamicRGSACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::~IslamicRGSACalendar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicCivilCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicUmalquraCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicTBLACalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IslamicRGSACalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ISO8601Calendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::ISO8601Calendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::ISO8601Calendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::~ISO8601Calendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::~ISO8601Calendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::~ISO8601Calendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ISO8601Calendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::JapaneseCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::JapaneseCalendar::enableTentativeEra()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::JapaneseCalendar::getCurrentEra()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::JapaneseCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::init(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::JapaneseCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::~JapaneseCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::~JapaneseCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::~JapaneseCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::JapaneseCalendar(icu_73::JapaneseCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::JapaneseCalendar(icu_73::JapaneseCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::operator=(icu_73::JapaneseCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::getDefaultMonthInYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::getDefaultDayInMonth(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::internalGetEra() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::JapaneseCalendar::getActualMaximum(UCalendarDateFields, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t japanese_calendar_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedListData::~FormattedListData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedListData::~FormattedListData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedListData::~FormattedListData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::FormattedList(icu_73::FormattedList&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::FormattedList(icu_73::FormattedList&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::~FormattedList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::~FormattedList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::~FormattedList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::operator=(icu_73::FormattedList&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedList::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::operator=(icu_73::ListFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatInternal::~ListFormatInternal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::initializeHash(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uprv_deleteListFormatInternal(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uprv_listformatter_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::getListFormatInternal(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::loadListFormatInternal(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::~ListPatternsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::~ListPatternsSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::~ListPatternsSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::createInstance(icu_73::Locale const&, UListFormatterType, UListFormatterWidth, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::createInstance(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatInternal const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::ListFormatter(icu_73::ListFormatInternal const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::~ListFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::~ListFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::~ListFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::format(icu_73::UnicodeString const*, int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::format(icu_73::UnicodeString const*, int, icu_73::UnicodeString&, int, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ListFormatter::formatStringsToValue(icu_73::UnicodeString const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FormattedListBuilder::FormattedListBuilder(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FormattedListBuilder::append(icu_73::SimpleFormatter const&, icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatInternal::ListFormatInternal(icu_73::ListFormatInternal const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatInternal::ListFormatInternal(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::createPatternHandler(char const*, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::shouldChangeToE(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::ContextualHandler(bool (*)(icu_73::UnicodeString const&), icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::shouldChangeToU(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::shouldChangeToVavDash(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::PatternHandler(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::~PatternHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::~ContextualHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::~ContextualHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::getTwoPattern(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::ContextualHandler::getEndPattern(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::~PatternHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::~PatternHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::getTwoPattern(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::getEndPattern(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PatternHandler::PatternHandler(icu_73::SimpleFormatter const&, icu_73::SimpleFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatInternal::ListFormatInternal(icu_73::ListFormatData const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFormatter::SimpleFormatter(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::setAliasedStyle(icu_73::UnicodeString)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ListFormatter::ListPatternsSink::handleValueForPattern(icu_73::ResourceValue&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::MeasureFormatCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::MeasureFormatCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::~MeasureFormatCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::~MeasureFormatCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::~MeasureFormatCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureFormatCacheData::adoptNumericDateFormatters(icu_73::NumericDateFormatters*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::Locale const&, UMeasureFormatWidth, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::initMeasureFormat(icu_73::Locale const&, UMeasureFormatWidth, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::Locale const&, UMeasureFormatWidth, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::Locale const&, UMeasureFormatWidth, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::Locale const&, UMeasureFormatWidth, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::MeasureFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat(icu_73::MeasureFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::operator=(icu_73::MeasureFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::MeasureFormatCacheData>(icu_73::MeasureFormatCacheData const*, icu_73::MeasureFormatCacheData const*&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedNumberFormat>(icu_73::SharedNumberFormat const*, icu_73::SharedNumberFormat const*&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedPluralRules>(icu_73::SharedPluralRules const*, icu_73::SharedPluralRules const*&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::MeasureFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::~MeasureFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::~MeasureFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::~MeasureFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getLocaleID(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::formatMeasure(icu_73::Measure const&, icu_73::NumberFormat const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::formatMeasurePerUnit(icu_73::Measure const&, icu_73::MeasureUnit const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getNumberFormatInternal() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::formatMeasures(icu_73::Measure const*, int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::formatNumeric(icu_73::Formattable const*, int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::formatMeasuresSlowTrack(icu_73::Measure const*, int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getUnitDisplayName(icu_73::MeasureUnit const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getLocale(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::MeasureFormatCacheData>(icu_73::Locale const&, icu_73::MeasureFormatCacheData const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::adoptNumberFormat(icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::setMeasureFormatLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getCurrencyFormatInternal() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::getPluralRules() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::createCurrencyFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureFormat::createCurrencyFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::loadNumericDateFormatterPattern(UResourceBundle const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumericDateFormatters::NumericDateFormatters(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isTimeUnit(icu_73::MeasureUnit const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::MeasureFormatCacheData>(icu_73::CacheKey<icu_73::MeasureFormatCacheData> const&, void const*, icu_73::MeasureFormatCacheData const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::MeasureFormatCacheData>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::MeasureFormatCacheData> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGForce(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::create(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGForce()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMeterPerSecondSquared(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMeterPerSecondSquared()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createArcMinute(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getArcMinute()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createArcSecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getArcSecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDegree(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDegree()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createRadian(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getRadian()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createRevolutionAngle(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getRevolutionAngle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createAcre(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAcre()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDunam(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDunam()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHectare(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHectare()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareCentimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareCentimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareFoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareFoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareKilometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareKilometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareMeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareMeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareMile(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareMile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSquareYard(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSquareYard()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createItem(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getItem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKarat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKarat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilligramOfglucosePerDeciliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilligramOfglucosePerDeciliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilligramPerDeciliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilligramPerDeciliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMillimolePerLiter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMillimolePerLiter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMole(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMole()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPercent(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPercent()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPermille(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPermille()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPartPerMillion(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPartPerMillion()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPermyriad(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPermyriad()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLiterPer100Kilometers(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLiterPer100Kilometers()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLiterPerKilometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLiterPerKilometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilePerGallon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilePerGallon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilePerGallonImperial(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilePerGallonImperial()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createByte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getByte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGigabit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGigabit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGigabyte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGigabyte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilobit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilobit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilobyte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilobyte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegabit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegabit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegabyte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegabyte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPetabyte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPetabyte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTerabit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTerabit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTerabyte(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTerabyte()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCentury(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDay(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDay()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDayPerson(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDayPerson()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDecade(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDecade()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHour(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHour()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMicrosecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMicrosecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMillisecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMillisecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMinute(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMinute()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMonth(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMonth()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMonthPerson(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMonthPerson()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createNanosecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getNanosecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createQuarter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getQuarter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createWeek(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getWeek()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createWeekPerson(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getWeekPerson()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createYear(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createYearPerson(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getYearPerson()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createAmpere(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAmpere()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilliampere(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilliampere()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createOhm(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getOhm()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createVolt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getVolt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBritishThermalUnit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBritishThermalUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCalorie(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCalorie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createElectronvolt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getElectronvolt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFoodcalorie(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFoodcalorie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createJoule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getJoule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilocalorie(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilocalorie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilojoule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilojoule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilowattHour(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilowattHour()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createThermUs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getThermUs()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilowattHourPer100Kilometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilowattHourPer100Kilometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createNewton(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getNewton()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPoundForce(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPoundForce()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGigahertz(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGigahertz()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHertz(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHertz()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilohertz(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilohertz()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegahertz(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegahertz()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDotPerCentimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDotPerCentimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDotPerInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDotPerInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createEm(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getEm()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegapixel(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegapixel()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPixel(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPixel()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPixelPerCentimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPixelPerCentimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPixelPerInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPixelPerInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createAstronomicalUnit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAstronomicalUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCentimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCentimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDecimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDecimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createEarthRadius(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getEarthRadius()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFathom(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFathom()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFurlong(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFurlong()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLightYear(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLightYear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMicrometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMicrometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMile(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMileScandinavian(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMileScandinavian()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMillimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMillimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createNanometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getNanometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createNauticalMile(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getNauticalMile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createParsec(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getParsec()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPicometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPicometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPoint()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSolarRadius(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSolarRadius()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createYard(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getYard()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCandela(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCandela()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLumen(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLumen()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLux(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLux()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSolarLuminosity(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSolarLuminosity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCarat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCarat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDalton(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDalton()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createEarthMass(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getEarthMass()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGrain(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGrain()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGram(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGram()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilogram(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilogram()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMetricTon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMetricTon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMicrogram(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMicrogram()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilligram(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilligram()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createOunce(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getOunce()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createOunceTroy(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getOunceTroy()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPound(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPound()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createSolarMass(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSolarMass()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createStone(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getStone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTonne(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTonne()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGigawatt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGigawatt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHorsepower(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHorsepower()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilowatt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilowatt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegawatt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegawatt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilliwatt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilliwatt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createWatt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getWatt()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createAtmosphere(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAtmosphere()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBar(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHectopascal(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHectopascal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createInchHg(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getInchHg()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilopascal(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilopascal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegapascal(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegapascal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMillibar(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMillibar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMillimeterOfMercury(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMillimeterOfMercury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPascal(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPascal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPoundPerSquareInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPoundPerSquareInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBeaufort(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBeaufort()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKilometerPerHour(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKilometerPerHour()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKnot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKnot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMeterPerSecond(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMeterPerSecond()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilePerHour(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilePerHour()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCelsius(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCelsius()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFahrenheit(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFahrenheit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGenericTemperature(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGenericTemperature()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createKelvin(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getKelvin()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createNewtonMeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getNewtonMeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPoundFoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPoundFoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createAcreFoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAcreFoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBarrel(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBarrel()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createBushel(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getBushel()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCentiliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCentiliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicCentimeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicCentimeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicFoot(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicFoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicInch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicInch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicKilometer(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicKilometer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicMeter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicMeter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicMile(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicMile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCubicYard(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCubicYard()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCup(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createCupMetric(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getCupMetric()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDeciliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDeciliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDessertSpoon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDessertSpoon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDessertSpoonImperial(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDessertSpoonImperial()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDram(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDram()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createDrop(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDrop()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFluidOunce(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFluidOunce()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createFluidOunceImperial(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getFluidOunceImperial()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGallon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGallon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createGallonImperial(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getGallonImperial()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createHectoliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getHectoliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createJigger(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getJigger()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createLiter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getLiter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMegaliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMegaliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createMilliliter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getMilliliter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPinch(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPinch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPint()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createPintMetric(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPintMetric()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createQuart(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getQuart()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createQuartImperial(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getQuartImperial()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTablespoon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTablespoon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::createTeaspoon(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getTeaspoon()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::operator=(icu_73::MeasureUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnit&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnit&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnitImpl&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::findBySubType(icu_73::StringPiece, icu_73::MeasureUnit*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::MeasureUnit(icu_73::MeasureUnitImpl&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::copy(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::operator=(icu_73::MeasureUnit&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::~MeasureUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::~MeasureUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::~MeasureUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getSubtype() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getIdentifier() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::operator==(icu_73::UObject const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAvailable(icu_73::MeasureUnit*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::setTo(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAvailable(char const*, icu_73::MeasureUnit*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::binarySearch(char const* const*, int, int, icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getAvailableTypes(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::initTime(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::initCurrency(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::SingleUnitImpl, 8>::MemoryPool(icu_73::MemoryPool<icu_73::SingleUnitImpl, 8>&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::SingleUnitImpl, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SingleUnitImpl* icu_73::MemoryPool<icu_73::SingleUnitImpl, 8>::create<icu_73::SingleUnitImpl const&>(icu_73::SingleUnitImpl const&)",
    "type": "CPP"
  },
  {
    "name": "T _umeas_getPrefixPower_73",
    "type": "CPP"
  },
  {
    "name": "T _umeas_getPrefixBase_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::getUnitQuantity(icu_73::MeasureUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::initUnitExtras(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::serialize(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::getUnitCategoryIndex(icu_73::BytesTrie&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::takeReciprocal(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::copyAndSimplify(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SingleUnitImpl::forMeasureUnit(icu_73::MeasureUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::forMeasureUnit(icu_73::MeasureUnit const&, icu_73::MeasureUnitImpl&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SingleUnitImpl::build(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::appendSingleUnit(icu_73::SingleUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::build(UErrorCode&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SingleUnitImpl::getSimpleUnitID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SingleUnitImpl::appendNeutralIdentifier(icu_73::CharString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SingleUnitImpl::getUnitCategoryIndex() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::MeasureUnitImpl(icu_73::SingleUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::MeasureUnitImpl(icu_73::SingleUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::forIdentifier(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::Parser::from(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::Parser::parse(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::forMeasureUnitMaybeCopy(icu_73::MeasureUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnitImpl::extractIndividualUnitsWithIndices(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::compareSingleUnits(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::forIdentifier(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getComplexity(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getPrefix(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::withPrefix(icu_73::UMeasurePrefix, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::getDimensionality(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::withDimensionality(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::reciprocal(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::product(icu_73::MeasureUnit const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MeasureUnit::splitToSingleUnitsImpl(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::cleanupUnitExtras()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SimpleUnitIdentifiersSink::~SimpleUnitIdentifiersSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CategoriesSink::~CategoriesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CategoriesSink::~CategoriesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CategoriesSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SimpleUnitIdentifiersSink::~SimpleUnitIdentifiersSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::SimpleUnitIdentifiersSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::Parser::nextToken(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<is_move_constructible<icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>>::value && is_move_assignable<icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>>::value, void>::type std::__1::swap[abi:v15006]<icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>>(icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>&, icu_73::MaybeStackArray<icu_73::SingleUnitImpl*, 8>&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SingleUnitImpl::compareTo(icu_73::SingleUnitImpl const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::MeasureUnitImplWithIndex, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureUnitImplWithIndex* icu_73::MemoryPool<icu_73::MeasureUnitImplWithIndex, 8>::create<int&, icu_73::MeasureUnitImpl const&, UErrorCode&>(int&, icu_73::MeasureUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureUnitImplWithIndex* icu_73::MemoryPool<icu_73::MeasureUnitImplWithIndex, 8>::create<int&, icu_73::SingleUnitImpl const&, UErrorCode&>(int&, icu_73::SingleUnitImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure(icu_73::Formattable const&, icu_73::MeasureUnit*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure(icu_73::Formattable const&, icu_73::MeasureUnit*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure(icu_73::Measure const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::operator=(icu_73::Measure const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::Measure(icu_73::Measure const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::~Measure()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::~Measure()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::~Measure()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Measure::operator==(icu_73::UObject const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::PluralSelectorProvider(icu_73::MessageFormat const&, UPluralType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::MessageFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::copyObjects(icu_73::MessageFormat const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::resetPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::MessageFormat(icu_73::MessageFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::~MessageFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::~MessageFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::~MessageFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::allocateArgTypes(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::operator=(icu_73::MessageFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getLocale() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::applyPattern(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::cacheExplicitFormats(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::applyPattern(icu_73::UnicodeString const&, UMessagePatternApostropheMode, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::toPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::nextTopLevelArgStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setArgStartFormat(int, icu_73::Format*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t equalFormatsForHash(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::argNameMatches(int, icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePattern::partSubstringMatches(icu_73::MessagePattern::Part const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setCustomArgStartFormat(int, icu_73::Format*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getCachedFormatter(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::adoptFormats(icu_73::Format**, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setFormats(icu_73::Format const**, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::adoptFormat(int, icu_73::Format*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::adoptFormat(icu_73::UnicodeString const&, icu_73::Format*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setFormat(int, icu_73::Format const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::setFormat(icu_73::UnicodeString const&, icu_73::Format const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getFormats(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getArgName(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getFormatNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::FormatNameEnumeration(icu_73::LocalPointer<icu_73::UVector>, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(icu_73::Formattable const*, int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(icu_73::Formattable const*, icu_73::UnicodeString const*, int, icu_73::UnicodeString&, icu_73::FieldPosition*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(icu_73::UnicodeString const&, icu_73::Formattable const*, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(icu_73::UnicodeString const*, icu_73::Formattable const*, int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getArgFromListByName(icu_73::Formattable const*, icu_73::UnicodeString const*, int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::format(int, void const*, icu_73::Formattable const*, icu_73::UnicodeString const*, int, icu_73::AppendableWrapper&, icu_73::FieldPosition*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AppendableWrapper::append(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AppendableWrapper::formatAndAppend(icu_73::Format const*, icu_73::Formattable const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getDefaultNumberFormat(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AppendableWrapper::formatAndAppend(icu_73::Format const*, icu_73::Formattable const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AppendableWrapper::append(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getDefaultDateFormat(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::formatComplexSubMessage(int, void const*, icu_73::Formattable const*, icu_73::UnicodeString const*, int, icu_73::AppendableWrapper&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PluralSelectorContext::PluralSelectorContext(int, icu_73::UnicodeString const&, icu_73::Formattable const&, double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::updateMetaData(icu_73::AppendableWrapper&, int, icu_73::FieldPosition*, icu_73::Formattable const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getLiteralStringUntilNextArgument(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::findOtherSubMessage(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::findFirstPluralNumberArg(int, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::parse(int, icu_73::UnicodeString const&, icu_73::ParsePosition&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::parse(icu_73::UnicodeString const&, icu_73::ParsePosition&, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::parse(icu_73::UnicodeString const&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::autoQuoteApostrophe(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::createAppropriateFormat(icu_73::UnicodeString&, icu_73::UnicodeString&, icu_73::Formattable::Type&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::findKeyword(icu_73::UnicodeString const&, char16_t const* const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::createIntegerFormat(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::makeRBNF(icu_73::URBNFRuleSetTag, icu_73::Locale const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::usesNamedArguments() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::getArgTypeCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::equalFormats(void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::DummyFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::FormatNameEnumeration(icu_73::LocalPointer<icu_73::UVector>, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::~FormatNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::~FormatNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormatNameEnumeration::~FormatNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::PluralSelectorProvider(icu_73::MessageFormat const&, UPluralType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::~PluralSelectorProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageFormat::PluralSelectorProvider::select(void*, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessageFormat::DummyFormat::~DummyFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessageFormat::DummyFormat::~DummyFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::Formattable>::~LocalArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NameUnicodeTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::NameUnicodeTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_set_add(USet*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::NameUnicodeTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::~NameUnicodeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::~NameUnicodeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::~NameUnicodeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::NameUnicodeTransliterator(icu_73::NameUnicodeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::NameUnicodeTransliterator(icu_73::NameUnicodeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NameUnicodeTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::NFRuleSet(icu_73::RuleBasedNumberFormat*, icu_73::UnicodeString*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::NFRuleSet(icu_73::RuleBasedNumberFormat*, icu_73::UnicodeString*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::parseRules(icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleList::deleteAll()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::setNonNumericalRule(icu_73::NFRule*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::setBestFractionRule(int, icu_73::NFRule*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleList::add(icu_73::NFRule*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::~NFRuleSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::~NFRuleSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::operator==(icu_73::NFRuleSet const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::setDecimalFormatSymbols(icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::format(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::findNormalRule(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::format(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::findDoubleRule(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::findFractionRuleSetRule(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::util64_fromDouble(double)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::parse(icu_73::UnicodeString const&, icu_73::ParsePosition&, double, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::appendRules(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::util64_pow(unsigned int, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::util64_tou(long long, char16_t*, unsigned int, unsigned int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleList::~NFRuleList()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::NFRule(icu_73::RuleBasedNumberFormat const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::parseRuleDescriptor(icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::NFRule(icu_73::RuleBasedNumberFormat const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::~NFRule()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::~NFRule()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::makeRules(icu_73::UnicodeString&, icu_73::NFRuleSet*, icu_73::NFRule const*, icu_73::RuleBasedNumberFormat const*, icu_73::NFRuleList&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::extractSubstitutions(icu_73::NFRuleSet const*, icu_73::UnicodeString const&, icu_73::NFRule const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::setBaseValue(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::expectedExponent() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::extractSubstitution(icu_73::NFRuleSet const*, icu_73::NFRule const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::indexOfAnyRulePrefix() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::operator==(icu_73::NFRule const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::_appendRuleText(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::util_append64(icu_73::UnicodeString&, long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::getDivisor() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::doFormat(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::doFormat(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::shouldRollBack(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::doParse(icu_73::UnicodeString const&, icu_73::ParsePosition&, signed char, double, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::stripPrefix(icu_73::UnicodeString&, icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::matchToDelimiter(icu_73::UnicodeString const&, int, double, icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::NFSubstitution const*, unsigned int, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::prefixLength(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::allIgnorable(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::findText(icu_73::UnicodeString const&, icu_73::UnicodeString const&, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::findTextLenient(icu_73::UnicodeString const&, icu_73::UnicodeString const&, int, int*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRule::setDecimalFormatSymbols(icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::CollationElementIterator>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::~SameValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::~NFSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::~SameValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::~SameValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::~MultiplierSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::~MultiplierSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::~MultiplierSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::~ModulusSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::~ModulusSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::~ModulusSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::~IntegralPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::~IntegralPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::~IntegralPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::~FractionalPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::~FractionalPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::~FractionalPartSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::~AbsoluteValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::~AbsoluteValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::~AbsoluteValueSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::~NumeratorSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::~NumeratorSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::~NumeratorSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::makeSubstitution(int, icu_73::NFRule const*, icu_73::NFRule const*, icu_73::NFRuleSet const*, icu_73::RuleBasedNumberFormat const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::FractionalPartSubstitution(int, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::ModulusSubstitution(int, icu_73::NFRule const*, icu_73::NFRule const*, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::SameValueSubstitution(int, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::NFSubstitution(int, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::~NFSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::~NFSubstitution()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::setDivisor(int, short, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::setDecimalFormatSymbols(icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::operator==(icu_73::NFSubstitution const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::toString(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::doSubstitution(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::doSubstitution(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::doParse(icu_73::UnicodeString const&, icu_73::ParsePosition&, double, double, signed char, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFSubstitution::isModulusSubstitution() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::SameValueSubstitution(int, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::operator==(icu_73::NFSubstitution const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::ModulusSubstitution(int, icu_73::NFRule const*, icu_73::NFRule const*, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::operator==(icu_73::NFSubstitution const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::doSubstitution(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::doSubstitution(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::doParse(icu_73::UnicodeString const&, icu_73::ParsePosition&, double, double, signed char, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::toString(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::FractionalPartSubstitution(int, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::doSubstitution(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::doParse(icu_73::UnicodeString const&, icu_73::ParsePosition&, double, double, signed char, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::operator==(icu_73::NFSubstitution const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::doSubstitution(double, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::doParse(icu_73::UnicodeString const&, icu_73::ParsePosition&, double, double, signed char, unsigned int, icu_73::Formattable&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::operator==(icu_73::NFSubstitution const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SameValueSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::setDivisor(int, short, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::setDivisor(int, short, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ModulusSubstitution::isModulusSubstitution() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::IntegralPartSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::doSubstitution(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FractionalPartSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AbsoluteValueSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::doSubstitution(long long, icu_73::UnicodeString&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::transformNumber(long long) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::transformNumber(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::composeRuleValue(double, double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::calcUpperBound(double) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::tokenChar() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumeratorSubstitution::NumeratorSubstitution(int, double, icu_73::NFRuleSet*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MultiplierSubstitution::MultiplierSubstitution(int, icu_73::NFRule const*, icu_73::NFRuleSet const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NormalizationTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::registerIDs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::_create(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::NormalizationTransliterator(icu_73::UnicodeString const&, icu_73::Normalizer2 const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::NormalizationTransliterator(icu_73::UnicodeString const&, icu_73::Normalizer2 const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::~NormalizationTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::~NormalizationTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::~NormalizationTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::NormalizationTransliterator(icu_73::NormalizationTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::NormalizationTransliterator(icu_73::NormalizationTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NormalizationTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NullTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::NullTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::NullTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::~NullTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::~NullTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::~NullTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NullTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::TokenConsumer::~TokenConsumer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::TokenConsumer::~TokenConsumer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::TokenConsumer::~TokenConsumer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolProvider::~SymbolProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolProvider::~SymbolProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolProvider::~SymbolProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::estimateLength(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::escape(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::getFieldForType(icu_73::number::impl::AffixPatternType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::unescape(icu_73::UnicodeString const&, icu_73::FormattedStringBuilder&, int, icu_73::number::impl::SymbolProvider const&, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::hasNext(icu_73::number::impl::AffixTag const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::nextToken(icu_73::number::impl::AffixTag, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::unescapedCodePointCount(icu_73::UnicodeString const&, icu_73::number::impl::SymbolProvider const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::containsType(icu_73::UnicodeString const&, icu_73::number::impl::AffixPatternType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::hasCurrencySymbols(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::replaceType(icu_73::UnicodeString const&, icu_73::number::impl::AffixPatternType, char16_t, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::containsOnlySymbolsAndIgnorables(icu_73::UnicodeString const&, icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixUtils::iterateWithConsumer(icu_73::UnicodeString const&, icu_73::number::impl::TokenConsumer&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::LocalizedNumberFormatterAsFormat(icu_73::number::LocalizedNumberFormatter const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::LocalizedNumberFormatterAsFormat(icu_73::number::LocalizedNumberFormatter const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::~LocalizedNumberFormatterAsFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::~LocalizedNumberFormatterAsFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::~LocalizedNumberFormatterAsFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::LocalizedNumberFormatterAsFormat::getNumberFormatter() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::toFormat(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberImpl::UFormattedNumberImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberImpl::UFormattedNumberImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberImpl::~UFormattedNumberImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberImpl::~UFormattedNumberImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberImpl::setTo(icu_73::number::FormattedNumber)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberData::operator=(icu_73::number::impl::UFormattedNumberData&&)",
    "type": "CPP"
  },
  {
    "name": "T _unumf_openResult_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_resultAsValue_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_closeResult_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::validateUFormattedNumberToDecimalQuantity(UFormattedNumber const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _unumf_openForSkeletonAndLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_openForSkeletonAndLocaleWithError_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_formatInt_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_formatDouble_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_formatDecimal_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_resultToString_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_resultNextFieldPosition_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_resultGetAllFieldPositions_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_resultToDecimalNumber_73",
    "type": "CPP"
  },
  {
    "name": "T _unumf_close_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_openForInt64_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_setToInt64_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_multiplyByPowerOfTen_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_roundTo_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_setMinimumIntegerDigits_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_setMinimumFractionDigits_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_truncateStart_73",
    "type": "CPP"
  },
  {
    "name": "T _usnum_setSign_73",
    "type": "CPP"
  },
  {
    "name": "T _usnumf_openForLocale_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::SimpleNumberFormatter::operator=(icu_73::number::SimpleNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T _usnumf_openForLocaleAndGroupingStrategy_73",
    "type": "CPP"
  },
  {
    "name": "T _usnumf_format_73",
    "type": "CPP"
  },
  {
    "name": "T _usnumf_formatInt64_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::SimpleNumberFormatter::formatInt64(long long, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T _usnum_close_73",
    "type": "CPP"
  },
  {
    "name": "T _usnumf_close_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedValueStringBuilderImpl::operator=(icu_73::FormattedValueStringBuilderImpl&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackHeaderAndArray<decNumber, char, 34>::~MaybeStackHeaderAndArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::CompactData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::CompactData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::populate(icu_73::Locale const&, char const*, UNumberCompactStyle, icu_73::number::impl::CompactType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getResourceBundleKey(char const*, UNumberCompactStyle, icu_73::number::impl::CompactType, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::CompactDataSink::~CompactDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::getMultiplier(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::getPattern(int, icu_73::PluralRules const*, icu_73::number::impl::DecimalQuantity const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::getUniquePatterns(icu_73::UVector&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::CompactDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::CompactHandler(UNumberCompactStyle, icu_73::Locale const&, char const*, icu_73::number::impl::CompactType, icu_73::PluralRules const*, icu_73::number::impl::MutablePatternModifier*, bool, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::precomputeAllModifiers(icu_73::number::impl::MutablePatternModifier&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::~CompactData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::CompactHandler(UNumberCompactStyle, icu_73::Locale const&, char const*, icu_73::number::impl::CompactType, icu_73::PluralRules const*, icu_73::number::impl::MutablePatternModifier*, bool, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::~CompactHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::~CompactHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::~CompactHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::CompactDataSink::~CompactDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CompactData::~CompactData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ParsedPatternInfo::ParsedPatternInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ParsedPatternInfo::~ParsedPatternInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::number::impl::CompactModInfo, 12>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::CurrencySymbols(icu_73::CurrencyUnit, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::CurrencySymbols(icu_73::CurrencyUnit, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::CurrencySymbols(icu_73::CurrencyUnit, icu_73::Locale const&, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencySymbols::~CurrencySymbols()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::CurrencySymbols(icu_73::CurrencyUnit, icu_73::Locale const&, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getIsoCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getNarrowCurrencySymbol(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::loadSymbol(UCurrNameStyle, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getFormalCurrencySymbol(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getVariantCurrencySymbol(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getCurrencySymbol(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getIntlCurrencySymbol(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::getPluralName(icu_73::StandardPlural::Form, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySymbols::hasEmptyCurrencySymbol() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::resolveCurrency(icu_73::number::impl::DecimalFormatProperties const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IFixedDecimal::~IFixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IFixedDecimal::~IFixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IFixedDecimal::~IFixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setBcdToZero()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::~DecimalQuantity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::~DecimalQuantity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::~DecimalQuantity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity(icu_73::number::impl::DecimalQuantity const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::operator=(icu_73::number::impl::DecimalQuantity const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity(icu_73::number::impl::DecimalQuantity const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity(icu_73::number::impl::DecimalQuantity&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::operator=(icu_73::number::impl::DecimalQuantity&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::DecimalQuantity(icu_73::number::impl::DecimalQuantity&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::copyBcdFrom(icu_73::number::impl::DecimalQuantity const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::copyFieldsFrom(icu_73::number::impl::DecimalQuantity const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::moveBcdFrom(icu_73::number::impl::DecimalQuantity&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setMinInteger(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setMinFraction(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::applyMaxInteger(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getMagnitude() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::popFromLeft(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::compact()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getPositionFingerprint() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::roundToIncrement(unsigned long long, short, UNumberFormatRoundingMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setToLong(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::adjustMagnitude(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toDecNum(icu_73::number::impl::DecNum&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::divideBy(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::roundToMagnitude(int, UNumberFormatRoundingMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::multiplyBy(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::isZeroish() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setToDecNum(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::negate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::adjustToZeroScale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getPluralOperand(icu_73::PluralOperand) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::isNegative() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toLong(bool) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toFractionLong(bool) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::fractionCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::fractionCountWithoutTrailingZeros() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getExponent() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toDouble() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::adjustExponent(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::resetExponent()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::hasIntegerValue() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getUpperDisplayMagnitude() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getLowerDisplayMagnitude() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getDigit(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getDigitPos(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::signum() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::isInfinite() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::isNaN() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setToInt(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::_setToInt(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::readLongToBcd(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::readIntToBcd(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::_setToLong(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::readDecNumberToBcd(icu_73::number::impl::DecNum const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setToDouble(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::_setToDoubleFast(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::convertToAccurateDouble()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::readDoubleConversionToBcd(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setToDecNumber(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::_setToDecNum(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::fromExponentString(icu_73::UnicodeString, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::getVisibleFractionCount(icu_73::UnicodeString)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::fitsInLong(bool) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toScientificString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<unsigned char, 20>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::truncate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::shiftRight(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::roundToNickel(int, UNumberFormatRoundingMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::roundToMagnitude(int, UNumberFormatRoundingMode, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::setDigitPos(int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::roundToInfinity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::appendDigit(signed char, int, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::shiftLeft(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toPlainString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toExponentString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::ensureCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::switchStorage()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::ensureCapacity()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::checkHealth() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::operator==(icu_73::number::impl::DecimalQuantity const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalQuantity::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char, 30>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<unsigned char, 20>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char, 30>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::DecimalFormatProperties()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::DecimalFormatProperties()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::_equals(icu_73::number::impl::DecimalFormatProperties const&, bool) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::equalsDefaultExceptFastFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecimalFormatProperties::getDefault()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::notation(icu_73::number::Notation const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::notation(icu_73::number::Notation const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unit(icu_73::MeasureUnit const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unit(icu_73::MeasureUnit const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptUnit(icu_73::MeasureUnit*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptUnit(icu_73::MeasureUnit*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::perUnit(icu_73::MeasureUnit const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::perUnit(icu_73::MeasureUnit const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptPerUnit(icu_73::MeasureUnit*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptPerUnit(icu_73::MeasureUnit*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::precision(icu_73::number::Precision const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::precision(icu_73::number::Precision const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::roundingMode(UNumberFormatRoundingMode) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::roundingMode(UNumberFormatRoundingMode) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::grouping(UNumberGroupingStrategy) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::grouping(UNumberGroupingStrategy) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::integerWidth(icu_73::number::IntegerWidth const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::integerWidth(icu_73::number::IntegerWidth const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::symbols(icu_73::DecimalFormatSymbols const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::symbols(icu_73::DecimalFormatSymbols const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptSymbols(icu_73::NumberingSystem*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::adoptSymbols(icu_73::NumberingSystem*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unitWidth(UNumberUnitWidth) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unitWidth(UNumberUnitWidth) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::sign(UNumberSignDisplay) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::sign(UNumberSignDisplay) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::decimal(UNumberDecimalSeparatorDisplay) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::decimal(UNumberDecimalSeparatorDisplay) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::scale(icu_73::number::Scale const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::scale(icu_73::number::Scale const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::usage(icu_73::StringPiece) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::usage(icu_73::StringPiece) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::displayOptions(icu_73::DisplayOptions const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::displayOptions(icu_73::DisplayOptions const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unitDisplayCase(icu_73::StringPiece) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::unitDisplayCase(icu_73::StringPiece) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::padding(icu_73::number::impl::Padder const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::padding(icu_73::number::impl::Padder const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::threshold(int) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::threshold(int) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::clone() const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::clone() &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MacroProps::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::notation(icu_73::number::Notation const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::~LocalizedNumberFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::notation(icu_73::number::Notation const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unit(icu_73::MeasureUnit const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unit(icu_73::MeasureUnit const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptUnit(icu_73::MeasureUnit*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptUnit(icu_73::MeasureUnit*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::perUnit(icu_73::MeasureUnit const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::perUnit(icu_73::MeasureUnit const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptPerUnit(icu_73::MeasureUnit*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptPerUnit(icu_73::MeasureUnit*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::precision(icu_73::number::Precision const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::precision(icu_73::number::Precision const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::roundingMode(UNumberFormatRoundingMode) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::roundingMode(UNumberFormatRoundingMode) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::grouping(UNumberGroupingStrategy) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::grouping(UNumberGroupingStrategy) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::integerWidth(icu_73::number::IntegerWidth const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::integerWidth(icu_73::number::IntegerWidth const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::symbols(icu_73::DecimalFormatSymbols const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::symbols(icu_73::DecimalFormatSymbols const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptSymbols(icu_73::NumberingSystem*) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::adoptSymbols(icu_73::NumberingSystem*) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unitWidth(UNumberUnitWidth) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unitWidth(UNumberUnitWidth) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::sign(UNumberSignDisplay) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::sign(UNumberSignDisplay) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::decimal(UNumberDecimalSeparatorDisplay) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::decimal(UNumberDecimalSeparatorDisplay) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::scale(icu_73::number::Scale const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::scale(icu_73::number::Scale const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::usage(icu_73::StringPiece) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::usage(icu_73::StringPiece) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::displayOptions(icu_73::DisplayOptions const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::displayOptions(icu_73::DisplayOptions const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unitDisplayCase(icu_73::StringPiece) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::unitDisplayCase(icu_73::StringPiece) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::padding(icu_73::number::impl::Padder const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::padding(icu_73::number::impl::Padder const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::threshold(int) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::threshold(int) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::macros(icu_73::number::impl::MacroProps&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::clone() const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::clone() &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatter::with()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatter::withLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::locale(icu_73::Locale const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::UnlocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::UnlocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::UnlocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::UnlocalizedNumberFormatter(icu_73::number::UnlocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::operator=(icu_73::number::UnlocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::operator=(icu_73::number::UnlocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::LocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::LocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::lnfCopyHelper(icu_73::number::LocalizedNumberFormatter const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::LocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::LocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::lnfMoveHelper(icu_73::number::LocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::operator=(icu_73::number::LocalizedNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::operator=(icu_73::number::LocalizedNumberFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::resetCompiled()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AutoAffixPatternProvider::setTo(icu_73::number::impl::AffixPatternProvider const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::PluralRules>::adoptInsteadAndCheckErrorCode(icu_73::PluralRules*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::~LocalizedNumberFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::impl::MacroProps const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::impl::MacroProps const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::impl::MacroProps&&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::LocalizedNumberFormatter(icu_73::number::impl::MacroProps&&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberFormatter::locale(icu_73::Locale const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::formatInt(long long, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::formatImpl(icu_73::number::impl::UFormattedNumberData*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::formatDouble(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::formatDecimal(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::formatDecimalQuantity(icu_73::number::impl::DecimalQuantity const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::computeCompiled(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::getAffixImpl(bool, bool, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::getCompiled() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::getCallCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberFormatter::getDecimalFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MacroProps::MacroProps(icu_73::number::impl::MacroProps const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::~NumberFormatterImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::~MicroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::~MicroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long long, 2>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::operator=(icu_73::number::impl::MicroProps const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long long, 2>::copyFrom(icu_73::MaybeStackArray<long long, 2> const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::DecimalFormatWarehouse>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::NumberFormatterImpl(icu_73::number::impl::MacroProps const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::NumberFormatterImpl(icu_73::number::impl::MacroProps const&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::NumberFormatterImpl(icu_73::number::impl::MacroProps const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::NumberFormatterImpl(icu_73::number::impl::MacroProps const&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::formatStatic(icu_73::number::impl::MacroProps const&, icu_73::number::impl::UFormattedNumberData*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::preProcessUnsafe(icu_73::number::impl::DecimalQuantity&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::writeNumber(icu_73::number::impl::SimpleMicroProps const&, icu_73::number::impl::DecimalQuantity&, icu_73::FormattedStringBuilder&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::writeAffixes(icu_73::number::impl::MicroProps const&, icu_73::FormattedStringBuilder&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::getPrefixSuffixStatic(icu_73::number::impl::MacroProps const&, icu_73::number::impl::Signum, icu_73::StandardPlural::Form, icu_73::FormattedStringBuilder&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::getPrefixSuffixUnsafe(icu_73::number::impl::Signum, icu_73::StandardPlural::Form, icu_73::FormattedStringBuilder&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::format(icu_73::number::impl::UFormattedNumberData*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::preProcess(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::getPrefixSuffix(icu_73::number::impl::Signum, icu_73::StandardPlural::Form, icu_73::FormattedStringBuilder&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::macrosToMicroGenerator(icu_73::number::impl::MacroProps const&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::utils::unitIsBaseUnit(icu_73::MeasureUnit const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::UsagePrefsHandler const>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::UsagePrefsHandler const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::UnitConversionHandler const>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::UnitConversionHandler const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::resolvePluralRules(icu_73::PluralRules const*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::ImmutablePatternModifier>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::ImmutablePatternModifier*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::LongNameMultiplexer const>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::LongNameMultiplexer const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::MixedUnitLongNameHandler>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::MixedUnitLongNameHandler*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::LongNameHandler>::adoptInsteadAndCheckErrorCode(icu_73::number::impl::LongNameHandler*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::writeIntegerDigits(icu_73::number::impl::SimpleMicroProps const&, icu_73::number::impl::DecimalQuantity&, icu_73::FormattedStringBuilder&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberFormatterImpl::writeFractionDigits(icu_73::number::impl::SimpleMicroProps const&, icu_73::number::impl::DecimalQuantity&, icu_73::FormattedStringBuilder&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::MicroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MicroProps::'unnamed'::~()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificModifier::~ScientificModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificModifier::~ScientificModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NumberParseMatcher::isFlexible() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::EmptyModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::EmptyModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::EmptyModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::MixedUnitLongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::LongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::forStrategy(UNumberGroupingStrategy)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::forProperties(icu_73::number::impl::DecimalFormatProperties const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::setLocaleData(icu_73::number::impl::ParsedPatternInfo const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getMinGroupingForLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::groupAtPosition(int, icu_73::number::impl::DecimalQuantity const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::getPrimary() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Grouper::getSecondary() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::IntegerWidth(short, short, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::IntegerWidth(short, short, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::zeroFillTo(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::truncateAt(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::apply(icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IntegerWidth::operator==(icu_73::number::IntegerWidth const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::forMeasureUnit(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth const&, char const*, icu_73::PluralRules const*, icu_73::number::impl::MicroPropsGenerator const*, icu_73::number::impl::LongNameHandler*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getMeasureData(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth const&, char const*, icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::maybeCalculateGender(icu_73::Locale const&, icu_73::MeasureUnit const&, icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::simpleFormatsToModifiers(icu_73::UnicodeString const*, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getGenderString(icu_73::UnicodeString, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::forArbitraryUnit(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth const&, char const*, icu_73::number::impl::LongNameHandler*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::DerivedComponents::DerivedComponents(icu_73::Locale const&, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::processPatternTimes(icu_73::MeasureUnitImpl&&, icu_73::Locale, UNumberUnitWidth const&, char const*, icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getCompoundValue(icu_73::StringPiece, icu_73::Locale const&, UNumberUnitWidth const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getWithPlural(icu_73::UnicodeString const*, icu_73::StandardPlural::Form, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFormatter::getTextWithNoArguments() const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::trimSpaceChars(char16_t const*, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::multiSimpleFormatsToModifiers(icu_73::UnicodeString const*, icu_73::UnicodeString, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getDerivedGender(icu_73::Locale, char const*, icu_73::UnicodeString*, icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getGenderForBuiltin(icu_73::Locale const&, icu_73::MeasureUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getDeriveCompoundRule(icu_73::Locale, char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getIndex(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::getUnitDisplayName(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::getUnitPattern(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth, icu_73::StandardPlural::Form, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::forCurrencyLongNames(icu_73::Locale const&, icu_73::CurrencyUnit const&, icu_73::PluralRules const*, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::LongNameHandler::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::forMeasureUnit(icu_73::Locale const&, icu_73::MeasureUnit const&, UNumberUnitWidth const&, char const*, icu_73::PluralRules const*, icu_73::number::impl::MicroPropsGenerator const*, icu_73::number::impl::MixedUnitLongNameHandler*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString>::adoptInstead(icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::ListFormatter>::adoptInsteadAndCheckErrorCode(icu_73::ListFormatter*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::getMixedUnitModifier(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MixedUnitLongNameHandler::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameMultiplexer::forMeasureUnits(icu_73::Locale const&, icu_73::MaybeStackVector<icu_73::MeasureUnit, 8> const&, UNumberUnitWidth const&, char const*, icu_73::PluralRules const*, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::MeasureUnit>::adoptInstead(icu_73::MeasureUnit*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameMultiplexer::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::~LongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::~LongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::LongNameHandler::~LongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::LongNameHandler::~LongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::~MixedUnitLongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler::~MixedUnitLongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MixedUnitLongNameHandler::~MixedUnitLongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MixedUnitLongNameHandler::~MixedUnitLongNameHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameMultiplexer::~LongNameMultiplexer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameMultiplexer::~LongNameMultiplexer()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::PluralTableSink::PluralTableSink(icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::PluralTableSink::~PluralTableSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::PluralTableSink::~PluralTableSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::PluralTableSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::InflectedPluralSink::~InflectedPluralSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::InflectedPluralSink::~InflectedPluralSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::InflectedPluralSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::InflectedPluralSink::loadForGender(icu_73::ResourceTable const&, char const*, icu_73::ResourceTable&, icu_73::ResourceValue&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler::LongNameHandler(icu_73::PluralRules const*, icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::number::impl::MicroPropsGenerator*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::number::impl::MixedUnitLongNameHandler, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::number::impl::MixedUnitLongNameHandler*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::number::impl::LongNameHandler, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::number::impl::LongNameHandler*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::MeasureUnit>::~LocalArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MixedUnitLongNameHandler* icu_73::MemoryPool<icu_73::number::impl::MixedUnitLongNameHandler, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::LongNameHandler* icu_73::MemoryPool<icu_73::number::impl::LongNameHandler, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberPropertyMapper::create(icu_73::number::impl::DecimalFormatProperties const&, icu_73::DecimalFormatSymbols const&, icu_73::number::impl::DecimalFormatWarehouse&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberPropertyMapper::oldToNew(icu_73::number::impl::DecimalFormatProperties const&, icu_73::DecimalFormatSymbols const&, icu_73::number::impl::DecimalFormatWarehouse&, icu_73::number::impl::DecimalFormatProperties*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberPropertyMapper::create(icu_73::number::impl::DecimalFormatProperties const&, icu_73::DecimalFormatSymbols const&, icu_73::number::impl::DecimalFormatWarehouse&, icu_73::number::impl::DecimalFormatProperties&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::setTo(icu_73::number::impl::DecimalFormatProperties const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::charAt(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::getStringInternal(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::length(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::getString(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::positiveHasPlusSign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::hasNegativeSubpattern() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::negativeHasMinusSign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::hasCurrencySign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::containsSymbolType(icu_73::number::impl::AffixPatternType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::hasBody() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::currencyAsDecimal() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::setTo(icu_73::CurrencyPluralInfo const&, icu_73::number::impl::DecimalFormatProperties const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::charAt(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::length(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::getString(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::positiveHasPlusSign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::hasNegativeSubpattern() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::negativeHasMinusSign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::hasCurrencySign() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::containsSymbolType(icu_73::number::impl::AffixPatternType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::hasBody() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::currencyAsDecimal() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::~PropertiesAffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::PropertiesAffixPatternProvider::~PropertiesAffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::~CurrencyPluralInfoAffixProvider()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencyPluralInfoAffixProvider::~CurrencyPluralInfoAffixProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::~Modifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::~Modifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::~Modifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::Parameters::Parameters()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::Parameters::Parameters()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::Parameters::Parameters(icu_73::number::impl::ModifierStore const*, icu_73::number::impl::Signum, icu_73::StandardPlural::Form)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Modifier::Parameters::Parameters(icu_73::number::impl::ModifierStore const*, icu_73::number::impl::Signum, icu_73::StandardPlural::Form)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ModifierStore::~ModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ModifierStore::~ModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ModifierStore::~ModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AdoptingSignumModifierStore::~AdoptingSignumModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AdoptingSignumModifierStore::~AdoptingSignumModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AdoptingSignumModifierStore::~AdoptingSignumModifierStore()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AdoptingSignumModifierStore::operator=(icu_73::number::impl::AdoptingSignumModifierStore&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantAffixModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier(icu_73::SimpleFormatter const&, icu_73::FormattedStringBuilder::Field, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier(icu_73::SimpleFormatter const&, icu_73::FormattedStringBuilder::Field, bool, icu_73::number::impl::Modifier::Parameters)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier(icu_73::SimpleFormatter const&, icu_73::FormattedStringBuilder::Field, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier(icu_73::SimpleFormatter const&, icu_73::FormattedStringBuilder::Field, bool, icu_73::number::impl::Modifier::Parameters)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::SimpleModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::formatAsPrefixSuffix(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SimpleModifier::formatTwoArgPattern(icu_73::SimpleFormatter const&, icu_73::FormattedStringBuilder&, int, int*, int*, icu_73::FormattedStringBuilder::Field, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ConstantMultiFieldModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::CurrencySpacingEnabledModifier(icu_73::FormattedStringBuilder const&, icu_73::FormattedStringBuilder const&, bool, bool, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ConstantMultiFieldModifier::ConstantMultiFieldModifier(icu_73::FormattedStringBuilder const&, icu_73::FormattedStringBuilder const&, bool, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::getUnicodeSet(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::CurrencySpacingEnabledModifier::EPosition, icu_73::number::impl::CurrencySpacingEnabledModifier::EAffix, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::getInsertString(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::CurrencySpacingEnabledModifier::EAffix, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::CurrencySpacingEnabledModifier(icu_73::FormattedStringBuilder const&, icu_73::FormattedStringBuilder const&, bool, bool, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::applyCurrencySpacing(icu_73::FormattedStringBuilder&, int, int, int, int, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::CurrencySpacingEnabledModifier::applyCurrencySpacingAffix(icu_73::FormattedStringBuilder&, int, icu_73::number::impl::CurrencySpacingEnabledModifier::EAffix, icu_73::DecimalFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ConstantAffixModifier::~ConstantAffixModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ConstantAffixModifier::~ConstantAffixModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::ConstantAffixModifier::~ConstantAffixModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::ConstantAffixModifier::~ConstantAffixModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ConstantMultiFieldModifier::~ConstantMultiFieldModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ConstantMultiFieldModifier::~ConstantMultiFieldModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::SimpleModifier::~SimpleModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::SimpleModifier::~SimpleModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencySpacingEnabledModifier::~CurrencySpacingEnabledModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::CurrencySpacingEnabledModifier::~CurrencySpacingEnabledModifier()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::cleanupDefaultCurrencySpacing()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(int, icu_73::number::impl::DecNum*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(int, icu_73::number::impl::DecNum*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(icu_73::number::Scale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(icu_73::number::Scale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::operator=(icu_73::number::Scale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(icu_73::number::Scale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::Scale(icu_73::number::Scale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::operator=(icu_73::number::Scale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::~Scale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::~Scale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::none()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::powerOfTen(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::byDecimal(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::byDouble(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::byDoubleAndPowerOfTen(double, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::applyTo(icu_73::number::impl::DecimalQuantity&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Scale::applyReciprocalTo(icu_73::number::impl::DecimalQuantity&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MultiplierFormatHandler::setAndChain(icu_73::number::Scale const&, icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MultiplierFormatHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MultiplierFormatHandler::~MultiplierFormatHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MultiplierFormatHandler::~MultiplierFormatHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::number::impl::DecNum>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Notation::scientific()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Notation::engineering()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::ScientificNotation::ScientificNotation(signed char, bool, short, UNumberSignDisplay)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::ScientificNotation::ScientificNotation(signed char, bool, short, UNumberSignDisplay)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Notation::compactShort()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Notation::compactLong()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Notation::simple()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::ScientificNotation::withMinExponentDigits(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::ScientificNotation::withExponentSignDisplay(UNumberSignDisplay) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::FormattedNumber(icu_73::number::FormattedNumber&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::FormattedNumber(icu_73::number::FormattedNumber&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::~FormattedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::~FormattedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::~FormattedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::operator=(icu_73::number::FormattedNumber&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::toDecimalNumber(icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::getAllFieldPositionsImpl(icu_73::FieldPositionIteratorHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::getOutputUnit(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::getNounClass(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumber::getDecimalQuantity(icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UFormattedNumberData::~UFormattedNumberData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UFormattedNumberData::~UFormattedNumberData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UFormattedNumberData::~UFormattedNumberData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::FormattedNumberRange(icu_73::number::FormattedNumberRange&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::FormattedNumberRange(icu_73::number::FormattedNumberRange&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::~FormattedNumberRange()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::~FormattedNumberRange()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::~FormattedNumberRange()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::operator=(icu_73::number::FormattedNumberRange&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::getDecimalNumbers(icu_73::ByteSink&, icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::getIdentityResult(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FormattedNumberRange::getData(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeData::~UFormattedNumberRangeData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeData::~UFormattedNumberRangeData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeData::~UFormattedNumberRangeData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::Padder(int, int, UNumberFormatPadPosition)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::Padder(int, int, UNumberFormatPadPosition)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::Padder(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::Padder(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::none()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::codePoints(int, int, UNumberFormatPadPosition)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::forProperties(icu_73::number::impl::DecimalFormatProperties const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::Padder::padAndApply(icu_73::number::impl::Modifier const&, icu_73::number::impl::Modifier const&, icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixPatternProvider::~AffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixPatternProvider::~AffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::AffixPatternProvider::~AffixPatternProvider()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::MutablePatternModifier(bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::MutablePatternModifier(bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::setPatternInfo(icu_73::number::impl::AffixPatternProvider const*, icu_73::FormattedStringBuilder::Field)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::setPatternAttributes(UNumberSignDisplay, bool, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::setSymbols(icu_73::DecimalFormatSymbols const*, icu_73::CurrencyUnit const&, UNumberUnitWidth, icu_73::PluralRules const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::setNumberProperties(icu_73::number::impl::Signum, icu_73::StandardPlural::Form)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::needsPlurals() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::createImmutableForPlural(icu_73::StandardPlural::Form, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::createConstantModifier(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::createImmutable(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::ImmutablePatternModifier(icu_73::number::impl::AdoptingModifierStore*, icu_73::PluralRules const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::insertPrefix(icu_73::FormattedStringBuilder&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::insertSuffix(icu_73::FormattedStringBuilder&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::ImmutablePatternModifier(icu_73::number::impl::AdoptingModifierStore*, icu_73::PluralRules const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::applyToMicros(icu_73::number::impl::MicroProps&, icu_73::number::impl::DecimalQuantity const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ImmutablePatternModifier::addToChain(icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::addToChain(icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::prepareAffix(bool)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::getSymbol(icu_73::number::impl::AffixPatternType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::getCurrencySymbolForUnitWidth(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::number::impl::MutablePatternModifier::getSymbol(icu_73::number::impl::AffixPatternType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::MutablePatternModifier::toUnicodeString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ImmutablePatternModifier::~ImmutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ImmutablePatternModifier::~ImmutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AdoptingModifierStore::~AdoptingModifierStore()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AdoptingModifierStore::~AdoptingModifierStore()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AdoptingModifierStore::getModifier(icu_73::number::impl::Signum, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MutablePatternModifier::~MutablePatternModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::parseToPatternInfo(icu_73::UnicodeString const&, icu_73::number::impl::ParsedPatternInfo&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumePattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::parseToProperties(icu_73::UnicodeString const&, icu_73::number::impl::IgnoreRounding, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::parseToExistingPropertiesImpl(icu_73::UnicodeString const&, icu_73::number::impl::DecimalFormatProperties&, icu_73::number::impl::IgnoreRounding, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::parseToProperties(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::parseToExistingProperties(icu_73::UnicodeString const&, icu_73::number::impl::DecimalFormatProperties&, icu_73::number::impl::IgnoreRounding, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::charAt(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::getEndpoints(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::length(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::getLengthFromEndpoints(icu_73::number::impl::Endpoints const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::getString(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::positiveHasPlusSign() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::hasNegativeSubpattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::negativeHasMinusSign() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::hasCurrencySign() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::containsSymbolType(icu_73::number::impl::AffixPatternType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::hasBody() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::currencyAsDecimal() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::ParserState::peek()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::ParserState::peek2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::ParserState::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeSubpattern(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumePadding(UNumberFormatPadPosition, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeAffix(icu_73::number::impl::Endpoints&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeExponent(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeLiteral(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeIntegerFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ParsedPatternInfo::consumeFractionFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternParser::patternInfoToProperties(icu_73::number::impl::DecimalFormatProperties&, icu_73::number::impl::ParsedPatternInfo&, icu_73::number::impl::IgnoreRounding, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ParsedPatternInfo::~ParsedPatternInfo()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::ignoreRoundingIncrement(double, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::propertiesToPatternString(icu_73::number::impl::DecimalFormatProperties const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::AutoAffixPatternProvider::AutoAffixPatternProvider(icu_73::number::impl::DecimalFormatProperties const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::escapePaddingString(icu_73::UnicodeString, icu_73::UnicodeString&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::convertLocalized(icu_73::UnicodeString const&, icu_73::DecimalFormatSymbols const&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::patternInfoToStringBuilder(icu_73::number::impl::AffixPatternProvider const&, bool, icu_73::number::impl::PatternSignType, bool, icu_73::StandardPlural::Form, bool, bool, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::PatternStringUtils::resolveSignDisplay(UNumberSignDisplay, icu_73::number::impl::Signum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ParsedPatternInfo::~ParsedPatternInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::parseIncrementOption(icu_73::StringSegment const&, icu_73::number::Precision&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::incrementExact(unsigned long long, short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MultiplierProducer::~MultiplierProducer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MultiplierProducer::~MultiplierProducer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::MultiplierProducer::~MultiplierProducer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::unlimited()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::integer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::constructFraction(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::fixedFraction(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::minFraction(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::maxFraction(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::minMaxFraction(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::fixedSignificantDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::constructSignificant(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::minSignificantDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::maxSignificantDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::minMaxSignificantDigits(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::trailingZeroDisplay(UNumberTrailingZeroDisplay) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::increment(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::constructIncrement(unsigned long long, short)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::currency(UCurrencyUsage)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::constructCurrency(UCurrencyUsage)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FractionPrecision::withSignificantDigits(int, int, UNumberRoundingPriority) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::constructFractionSignificant(icu_73::number::FractionPrecision const&, int, int, UNumberRoundingPriority, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FractionPrecision::withMinDigits(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::FractionPrecision::withMaxDigits(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::Precision::withCurrency(icu_73::CurrencyUnit const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::CurrencyPrecision::withCurrency(icu_73::CurrencyUnit const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::IncrementPrecision::withMinFraction(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::RoundingImpl(icu_73::number::Precision const&, UNumberFormatRoundingMode, icu_73::CurrencyUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::RoundingImpl(icu_73::number::Precision const&, UNumberFormatRoundingMode, icu_73::CurrencyUnit const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::passThrough()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::isSignificantDigits() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::chooseMultiplierAndApply(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MultiplierProducer const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::apply(icu_73::number::impl::DecimalQuantity&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getRoundingMagnitudeSignificant(icu_73::number::impl::DecimalQuantity const&, int)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getDisplayMagnitudeSignificant(icu_73::number::impl::DecimalQuantity const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RoundingImpl::apply(icu_73::number::impl::DecimalQuantity&, int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::ScientificModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::ScientificModifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::set(int, icu_73::number::impl::ScientificHandler const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::apply(icu_73::FormattedStringBuilder&, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::getPrefixLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::getCodePointCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::isStrong() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::containsField(icu_73::FormattedStringBuilder::Field) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::getParameters(icu_73::number::impl::Modifier::Parameters&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::ScientificModifier::semanticallyEquivalent(icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::ScientificHandler(icu_73::number::Notation const*, icu_73::DecimalFormatSymbols const*, icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::ScientificHandler(icu_73::number::Notation const*, icu_73::DecimalFormatSymbols const*, icu_73::number::impl::MicroPropsGenerator const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::getMultiplier(int) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::ScientificHandler::getMultiplier(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::~ScientificHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::ScientificHandler::~ScientificHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::ScientificHandler::~ScientificHandler()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::number::impl::ScientificHandler::~ScientificHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::forInt64(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::SimpleNumber(icu_73::number::impl::UFormattedNumberData*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::SimpleNumber(icu_73::number::impl::UFormattedNumberData*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::multiplyByPowerOfTen(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::roundTo(int, UNumberFormatRoundingMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::setMinimumIntegerDigits(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::setMinimumFractionDigits(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::truncateStart(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumber::setSign(USimpleNumberSign, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::forLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::forLocaleAndGroupingStrategy(icu_73::Locale const&, UNumberGroupingStrategy, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::initialize(icu_73::Locale const&, icu_73::DecimalFormatSymbols const&, UNumberGroupingStrategy, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::forLocaleAndSymbolsAndGroupingStrategy(icu_73::Locale const&, icu_73::DecimalFormatSymbols const&, UNumberGroupingStrategy, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::format(icu_73::number::SimpleNumber, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::SimpleNumberFormatter::formatImpl(icu_73::number::impl::UFormattedNumberData*, USimpleNumberSign, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::notation(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::unit(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::precision(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::roundingMode(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::groupingStrategy(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::unitWidth(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::signDisplay(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::stem_to_object::decimalSeparatorDisplay(icu_73::number::impl::skeleton::StemEnum)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::enum_to_stem_string::roundingMode(UNumberFormatRoundingMode, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::enum_to_stem_string::groupingStrategy(UNumberGroupingStrategy, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::enum_to_stem_string::unitWidth(UNumberUnitWidth, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::enum_to_stem_string::signDisplay(UNumberSignDisplay, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::enum_to_stem_string::decimalSeparatorDisplay(UNumberDecimalSeparatorDisplay, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::skeleton::create(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::initNumberSkeletons(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::skeleton::parseSkeleton(icu_73::UnicodeString const&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::skeleton::generate(icu_73::number::impl::MacroProps const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::generateSkeleton(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::skeleton::parseStem(icu_73::StringSegment const&, icu_73::UCharsTrie const&, icu_73::number::impl::SeenMacroProps&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::skeleton::parseOption(icu_73::number::impl::skeleton::ParseState, icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseFractionStem(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseDigitsStem(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseScientificStem(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseIntegerStem(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseCurrencyOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseMeasureUnitOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseMeasurePerUnitOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseIdentifierUnitOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseUnitUsageOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseIncrementOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseIntegerWidthOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseNumberingSystemOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseScaleOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseExponentWidthOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseExponentSignOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseFracSigOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::parseTrailingZeroOption(icu_73::StringSegment const&, icu_73::number::impl::MacroProps&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::notation(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::unit(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::usage(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::precision(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::roundingMode(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::grouping(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::integerWidth(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::symbols(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::unitWidth(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::sign(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::decimal(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::GeneratorHelpers::scale(icu_73::number::impl::MacroProps const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::truncate(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateExponentWidthOption(int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateCurrencyOption(icu_73::CurrencyUnit const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateFractionStem(int, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateDigitsStem(int, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateIncrementOption(unsigned int, short, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateIntegerWidthOption(int, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateNumberingSystemOption(icu_73::NumberingSystem const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::blueprint_helpers::generateScaleOption(int, icu_73::number::impl::DecNum const*, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::UnlocalizedNumberFormatter>::toSkeleton(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatterSettings<icu_73::number::LocalizedNumberFormatter>::toSkeleton(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatter::forSkeleton(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberFormatter::forSkeleton(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::cleanupNumberSkeletons()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::SymbolsWrapper(icu_73::number::impl::SymbolsWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::doCopyFrom(icu_73::number::impl::SymbolsWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::SymbolsWrapper(icu_73::number::impl::SymbolsWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::SymbolsWrapper(icu_73::number::impl::SymbolsWrapper&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::doMoveFrom(icu_73::number::impl::SymbolsWrapper&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::SymbolsWrapper(icu_73::number::impl::SymbolsWrapper&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::operator=(icu_73::number::impl::SymbolsWrapper const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::doCleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::operator=(icu_73::number::impl::SymbolsWrapper&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::~SymbolsWrapper()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::~SymbolsWrapper()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::setTo(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::setTo(icu_73::NumberingSystem const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::isDecimalFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::isNumberingSystem() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::getDecimalFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::SymbolsWrapper::getNumberingSystem() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::StringProp(icu_73::number::impl::StringProp const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::operator=(icu_73::number::impl::StringProp const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::~StringProp()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::StringProp(icu_73::number::impl::StringProp const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::~StringProp()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::StringProp(icu_73::number::impl::StringProp&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::StringProp(icu_73::number::impl::StringProp&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::operator=(icu_73::number::impl::StringProp&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::StringProp::set(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "t mixedMeasuresToMicros(icu_73::MaybeStackVector<icu_73::Measure, 8> const&, icu_73::number::impl::DecimalQuantity*, icu_73::number::impl::MicroProps*, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UsagePrefsHandler::UsagePrefsHandler(icu_73::Locale const&, icu_73::MeasureUnit const&, icu_73::StringPiece, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UsagePrefsHandler::UsagePrefsHandler(icu_73::Locale const&, icu_73::MeasureUnit const&, icu_73::StringPiece, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UsagePrefsHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::RouteResult::~RouteResult()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UnitConversionHandler::UnitConversionHandler(icu_73::MeasureUnit const&, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::units::ComplexUnitsConverter>::adoptInsteadAndCheckErrorCode(icu_73::units::ComplexUnitsConverter*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UnitConversionHandler::UnitConversionHandler(icu_73::MeasureUnit const&, icu_73::number::impl::MicroPropsGenerator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::UnitConversionHandler::processQuantity(icu_73::number::impl::DecimalQuantity&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UsagePrefsHandler::~UsagePrefsHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UsagePrefsHandler::~UsagePrefsHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UnitConversionHandler::~UnitConversionHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UnitConversionHandler::~UnitConversionHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConversionRates::ConversionRates(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::units::ConversionRateInfo, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::units::ConversionRateInfo*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::Measure, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::Measure*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::units::ConverterPreference, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::units::UnitsConverter, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::units::UnitsConverter*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::units::ConverterPreference*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::MeasureUnit, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::MeasureUnit*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::units::ComplexUnitsConverter>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::utils::getPatternForStyle(icu_73::Locale const&, char const*, icu_73::number::impl::CldrPatternStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::doGetPattern(UResourceBundle*, char const*, char const*, UErrorCode&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::DecNum()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::DecNum()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::DecNum(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::DecNum(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::setTo(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::_setTo(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::setTo(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::setTo(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::setTo(unsigned char const*, int, int, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::normalize()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::multiplyBy(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::divideBy(icu_73::number::impl::DecNum const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::isNegative() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::isZero() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::isSpecial() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::isInfinity() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::isNaN() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::impl::DecNum::toString(icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormatFactory::~NumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormatFactory::~NumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormatFactory::~NumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::SimpleNumberFormatFactory(icu_73::Locale const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::~SimpleNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::~SimpleNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::~SimpleNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::visible() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleNumberFormatFactory::getSupportedIDs(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::NumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::~NumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::~NumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::~NumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedNumberFormat::~SharedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedNumberFormat::~SharedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedNumberFormat::~SharedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::NumberFormat(icu_73::NumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::operator=(icu_73::NumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(icu_73::StringPiece, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ArgExtractor::ArgExtractor(icu_73::NumberFormat const&, icu_73::Formattable const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ArgExtractor::ArgExtractor(icu_73::NumberFormat const&, icu_73::Formattable const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ArgExtractor::~ArgExtractor()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ArgExtractor::~ArgExtractor()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(icu_73::number::impl::DecimalQuantity const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(icu_73::number::impl::DecimalQuantity const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getCurrency() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::format(long long, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::parseCurrency(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setParseIntegerOnly(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createInstance(icu_73::Locale const&, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createCurrencyInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createCurrencyInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createPercentInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createPercentInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createScientificInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createScientificInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatFactory::~ICUNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatFactory::~ICUNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatFactory::~ICUNumberFormatFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFFactory::~NFFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFFactory::~NFFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFFactory::~NFFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::~ICUNumberFormatService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::~ICUNumberFormatService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::~ICUNumberFormatService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::registerFactory(icu_73::NumberFormatFactory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getNumberFormatService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::unregister(void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getAvailableLocales()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::internalCreateInstance(icu_73::Locale const&, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::makeInstance(icu_73::Locale const&, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::createSharedInstance(icu_73::Locale const&, UNumberFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::isGroupingUsed() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setGroupingUsed(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getMaximumIntegerDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setMaximumIntegerDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getMinimumIntegerDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setMinimumIntegerDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getMaximumFractionDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setMaximumFractionDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getMinimumFractionDigits() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setMinimumFractionDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setCurrency(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getEffectiveCurrency(char16_t*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getContext(UDisplayContextType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::SharedNumberFormat>(icu_73::Locale const&, icu_73::SharedNumberFormat const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::isStyleSupported(UNumberFormatStyle)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::makeInstance(icu_73::Locale const&, UNumberFormatStyle, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::DecimalFormatSymbols>::adoptInsteadAndCheckErrorCode(icu_73::DecimalFormatSymbols*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::setTo(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::setTo(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::compare(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::getRoundingMode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberFormat::setRoundingMode(icu_73::NumberFormat::ERoundingMode)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatFactory::handleCreate(icu_73::Locale const&, int, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFFactory::getSupportedIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::isDefault() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::cloneInstance(icu_73::UObject*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::handleDefault(icu_73::ICUServiceKey const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t numfmt_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUNumberFormatService::ICUNumberFormatService()",
    "type": "CPP"
  },
  {
    "name": "t deleteNumberingSystem(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::SharedNumberFormat>(icu_73::CacheKey<icu_73::SharedNumberFormat> const&, void const*, icu_73::SharedNumberFormat const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::SharedNumberFormat>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedNumberFormat>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::SharedNumberFormat> const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::AffixPatternMatcherBuilder(icu_73::UnicodeString const&, icu_73::numparse::impl::AffixTokenMatcherWarehouse&, icu_73::numparse::impl::IgnorablesMatcher*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::AffixPatternMatcherBuilder(icu_73::UnicodeString const&, icu_73::numparse::impl::AffixTokenMatcherWarehouse&, icu_73::numparse::impl::IgnorablesMatcher*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::consumeToken(icu_73::number::impl::AffixPatternType, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::minusSign()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::plusSign()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::percent()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::permille()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::currency(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::nextCodePointMatcher(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::addMatcher(icu_73::numparse::impl::NumberParseMatcher&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::numparse::impl::AffixPatternMatcherBuilder::addMatcher(icu_73::numparse::impl::NumberParseMatcher&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::build(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixPatternMatcher::AffixPatternMatcher(icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 3>&, int, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::AffixTokenMatcherWarehouse(icu_73::numparse::impl::AffixTokenMatcherSetupData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::AffixTokenMatcherWarehouse(icu_73::numparse::impl::AffixTokenMatcherSetupData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::ignorables()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CodePointMatcher* icu_73::MemoryPool<icu_73::numparse::impl::CodePointMatcher, 8>::create<int&>(int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixTokenMatcherWarehouse::hasEmptyCurrencySymbol() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CodePointMatcher::CodePointMatcher(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CodePointMatcher::CodePointMatcher(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CodePointMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CodePointMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CodePointMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixPatternMatcher::fromAffixPattern(icu_73::UnicodeString const&, icu_73::numparse::impl::AffixTokenMatcherWarehouse&, int, bool*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::~AffixPatternMatcherBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixPatternMatcher::AffixPatternMatcher(icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 3>&, int, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixPatternMatcher::getPattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::AffixPatternMatcher::operator==(icu_73::numparse::impl::AffixPatternMatcher const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CompactUnicodeString<4>::operator==(icu_73::numparse::impl::CompactUnicodeString<4> const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::AffixMatcherWarehouse(icu_73::numparse::impl::AffixTokenMatcherWarehouse*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcher::~AffixPatternMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::~AffixMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::AffixMatcherWarehouse(icu_73::numparse::impl::AffixTokenMatcherWarehouse*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::isInteresting(icu_73::number::impl::AffixPatternProvider const&, icu_73::numparse::impl::IgnorablesMatcher const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::createAffixMatchers(icu_73::number::impl::AffixPatternProvider const&, icu_73::numparse::impl::MutableMatcherCollection&, icu_73::numparse::impl::IgnorablesMatcher const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::AffixMatcher(icu_73::numparse::impl::AffixPatternMatcher*, icu_73::numparse::impl::AffixPatternMatcher*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::compareTo(icu_73::numparse::impl::AffixMatcher const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::AffixMatcher(icu_73::numparse::impl::AffixPatternMatcher*, icu_73::numparse::impl::AffixPatternMatcher*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::matched(icu_73::numparse::impl::AffixPatternMatcher const*, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::length(icu_73::numparse::impl::AffixPatternMatcher const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcherBuilder::~AffixPatternMatcherBuilder()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::numparse::impl::AffixPatternMatcherBuilder::~AffixPatternMatcherBuilder()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::numparse::impl::AffixPatternMatcherBuilder::~AffixPatternMatcherBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CodePointMatcher::~CodePointMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CodePointMatcher::~CodePointMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NumberParseMatcher::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcher::~AffixMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixPatternMatcher::~AffixPatternMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CombinedCurrencyMatcher::CombinedCurrencyMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char16_t, 4>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 3>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CompactUnicodeString<4>::CompactUnicodeString(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char16_t, 4>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SeriesMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ParsedNumber::operator=(icu_73::numparse::impl::ParsedNumber const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SeriesMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SeriesMatcher::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::ArraySeriesMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::ArraySeriesMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::ArraySeriesMatcher(icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 3>&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::ArraySeriesMatcher(icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 3>&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::length() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::begin() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::end() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ArraySeriesMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ArraySeriesMatcher::~ArraySeriesMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ArraySeriesMatcher::~ArraySeriesMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ParsedNumber::ParsedNumber(icu_73::numparse::impl::ParsedNumber const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::CombinedCurrencyMatcher(icu_73::number::impl::CurrencySymbols const&, icu_73::DecimalFormatSymbols const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::CombinedCurrencyMatcher(icu_73::number::impl::CurrencySymbols const&, icu_73::DecimalFormatSymbols const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::matchCurrency(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::CombinedCurrencyMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CombinedCurrencyMatcher::~CombinedCurrencyMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::CombinedCurrencyMatcher::~CombinedCurrencyMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::DecimalMatcher(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::Grouper const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet const>::adoptInstead(icu_73::UnicodeSet const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString const>::adoptInstead(icu_73::UnicodeString const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::DecimalMatcher(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::Grouper const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::validateGroup(int, int, bool) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::~DecimalMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::DecimalMatcher::~DecimalMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet const>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString const>::~LocalArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParseMatcher::~NumberParseMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParseMatcher::~NumberParseMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParseMatcher::~NumberParseMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::createSimpleParser(icu_73::Locale const&, icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::NumberParserImpl(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixTokenMatcherWarehouse::operator=(icu_73::numparse::impl::AffixTokenMatcherWarehouse&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::operator=(icu_73::numparse::impl::AffixMatcherWarehouse&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::~AffixMatcherWarehouse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::~ScientificMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::freeze()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::createParserFromProperties(icu_73::number::impl::DecimalFormatProperties const&, icu_73::DecimalFormatSymbols const&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::NumberParserImpl(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::~NumberParserImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::~NumberParserImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::~NumberParserImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::addMatcher(icu_73::numparse::impl::NumberParseMatcher&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::getParseFlags() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::parse(icu_73::UnicodeString const&, bool, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::parse(icu_73::UnicodeString const&, int, bool, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::parseGreedy(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::parseLongestRecursive(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::NumberParserImpl::toString() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<is_move_constructible<icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>>::value && is_move_assignable<icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>>::value, void>::type std::__1::swap[abi:v15006]<icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>>(icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>&, icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::numparse::impl::CodePointMatcher*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixTokenMatcherWarehouse::~AffixTokenMatcherWarehouse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::numparse::impl::CodePointMatcher, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet const>::operator=(icu_73::LocalPointer<icu_73::UnicodeSet const>&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString const>::operator=(icu_73::LocalArray<icu_73::UnicodeString const>&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NumberParserImpl::'unnamed'::()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixMatcherWarehouse::AffixMatcherWarehouse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::AffixTokenMatcherWarehouse::AffixTokenMatcherWarehouse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NumberParserImpl::'unnamed'::~()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::numparse::impl::NumberParseMatcher const*, 10>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::ParsedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::ParsedNumber()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::setCharsConsumed(icu_73::StringSegment const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::postProcess()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::success() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::seenNumber() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::getDouble(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::populateFormattable(icu_73::Formattable&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::ParsedNumber::isBetterThan(icu_73::numparse::impl::ParsedNumber const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::ScientificMatcher(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::Grouper const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::ScientificMatcher(icu_73::DecimalFormatSymbols const&, icu_73::number::impl::Grouper const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ScientificMatcher::~ScientificMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SymbolMatcher::SymbolMatcher(icu_73::UnicodeString const&, icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SymbolMatcher::getSet() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SymbolMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SymbolMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::SymbolMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::IgnorablesMatcher(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::IgnorablesMatcher(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::isFlexible() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::IgnorablesMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::InfinityMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::InfinityMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::MinusSignMatcher::MinusSignMatcher(icu_73::DecimalFormatSymbols const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::MinusSignMatcher::MinusSignMatcher(icu_73::DecimalFormatSymbols const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::MinusSignMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::MinusSignMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::NanMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::NanMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::PaddingMatcher(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::PaddingMatcher(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::isFlexible() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PercentMatcher::PercentMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PercentMatcher::PercentMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PercentMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PercentMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PermilleMatcher::PermilleMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PermilleMatcher::PermilleMatcher(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PermilleMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PermilleMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PlusSignMatcher::PlusSignMatcher(icu_73::DecimalFormatSymbols const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PlusSignMatcher::PlusSignMatcher(icu_73::DecimalFormatSymbols const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PlusSignMatcher::isDisabled(icu_73::numparse::impl::ParsedNumber const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::numparse::impl::PlusSignMatcher::accept(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::IgnorablesMatcher::~IgnorablesMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::IgnorablesMatcher::~IgnorablesMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::~InfinityMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::InfinityMatcher::~InfinityMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::~NanMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::NanMatcher::~NanMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::~PaddingMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::PaddingMatcher::~PaddingMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireAffixValidator::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireAffixValidator::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireCurrencyValidator::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireCurrencyValidator::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::RequireDecimalSeparatorValidator(bool)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::RequireDecimalSeparatorValidator(bool)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireNumberValidator::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireNumberValidator::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::MultiplierParseHandler(icu_73::number::Scale)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::MultiplierParseHandler(icu_73::number::Scale)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::postProcess(icu_73::numparse::impl::ParsedNumber&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::toString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireAffixValidator::~RequireAffixValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireAffixValidator::~RequireAffixValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ValidationMatcher::match(icu_73::StringSegment&, icu_73::numparse::impl::ParsedNumber&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::ValidationMatcher::smokeTest(icu_73::StringSegment const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireCurrencyValidator::~RequireCurrencyValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireCurrencyValidator::~RequireCurrencyValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::~RequireDecimalSeparatorValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireDecimalSeparatorValidator::~RequireDecimalSeparatorValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireNumberValidator::~RequireNumberValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::RequireNumberValidator::~RequireNumberValidator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::~MultiplierParseHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::numparse::impl::MultiplierParseHandler::~MultiplierParseHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeImpl::UFormattedNumberRangeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeImpl::UFormattedNumberRangeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeImpl::~UFormattedNumberRangeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeImpl::~UFormattedNumberRangeImpl()",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_openResult_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_resultAsValue_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_closeResult_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::validateUFormattedNumberRange(UFormattedNumberRange const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_openForSkeletonWithCollapseAndIdentityFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_formatDoubleRange_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_formatDecimalRange_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_resultGetIdentityResult_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_resultGetFirstDecimalNumber_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_resultGetSecondDecimalNumber_73",
    "type": "CPP"
  },
  {
    "name": "T _unumrf_close_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::UFormattedNumberRangeData::UFormattedNumberRangeData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RangeMacroProps::RangeMacroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::touchRangeLocales(icu_73::number::impl::RangeMacroProps&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::collapse(UNumberRangeCollapse) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::collapse(UNumberRangeCollapse) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::identityFallback(UNumberRangeIdentityFallback) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::identityFallback(UNumberRangeIdentityFallback) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::clone() const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::clone() &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RangeMacroProps::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::~LocalizedNumberRangeFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterBoth(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterFirst(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter&&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::numberFormatterSecond(icu_73::number::UnlocalizedNumberFormatter&&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::collapse(UNumberRangeCollapse) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::collapse(UNumberRangeCollapse) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::identityFallback(UNumberRangeIdentityFallback) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::identityFallback(UNumberRangeIdentityFallback) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::clone() const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::clone() &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatter::with()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::NumberRangeFormatter::withLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::locale(icu_73::Locale const&) &&",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::UnlocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::UnlocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::UnlocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::UnlocalizedNumberRangeFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::UnlocalizedNumberRangeFormatter(icu_73::number::UnlocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::operator=(icu_73::number::UnlocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::operator=(icu_73::number::UnlocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::LocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::LocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::LocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::NumberRangeFormatterSettings<icu_73::number::LocalizedNumberRangeFormatter>&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::LocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::~NumberRangeFormatterImpl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::operator=(icu_73::number::LocalizedNumberRangeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::operator=(icu_73::number::LocalizedNumberRangeFormatter&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::~LocalizedNumberRangeFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::impl::RangeMacroProps const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::impl::RangeMacroProps const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::impl::RangeMacroProps&&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::LocalizedNumberRangeFormatter(icu_73::number::impl::RangeMacroProps&&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::UnlocalizedNumberRangeFormatter::locale(icu_73::Locale const&) const &",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::formatFormattableRange(icu_73::Formattable const&, icu_73::Formattable const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::formatImpl(icu_73::number::impl::UFormattedNumberRangeData&, bool, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::number::LocalizedNumberRangeFormatter::getFormatter(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RangeMacroProps::~RangeMacroProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::RangeMacroProps::RangeMacroProps(icu_73::number::impl::RangeMacroProps const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::StandardPluralRanges::StandardPluralRangeTriple, 3>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::NumberRangeFormatterImpl(icu_73::number::impl::RangeMacroProps const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::NumberRangeFormatterImpl(icu_73::number::impl::RangeMacroProps const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::format(icu_73::number::impl::UFormattedNumberRangeData&, bool, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::formatRange(icu_73::number::impl::UFormattedNumberRangeData&, icu_73::number::impl::MicroProps&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::formatApproximately(icu_73::number::impl::UFormattedNumberRangeData&, icu_73::number::impl::MicroProps&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::formatSingleValue(icu_73::number::impl::UFormattedNumberRangeData&, icu_73::number::impl::MicroProps&, icu_73::number::impl::MicroProps&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::number::impl::NumberRangeFormatterImpl::resolveModifierPlurals(icu_73::number::impl::Modifier const&, icu_73::number::impl::Modifier const&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::NumberRangeDataSink::~NumberRangeDataSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::NumberRangeDataSink::~NumberRangeDataSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::NumberRangeDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::NumberRangeDataSink::hasRangeData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::NumberingSystem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::NumberingSystem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::NumberingSystem(icu_73::NumberingSystem const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::NumberingSystem(icu_73::NumberingSystem const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::createInstance(int, signed char, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::setRadix(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::setDesc(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::setAlgorithmic(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::setName(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::createInstanceByName(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::~NumberingSystem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::~NumberingSystem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::~NumberingSystem()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getRadix() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getDescription() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getName() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::isAlgorithmic() const",
    "type": "CPP"
  },
  {
    "name": "t _numSysCleanup_73",
    "type": "CPP"
  },
  {
    "name": "t _initNumsysNames_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::NumberingSystem::getAvailableNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::NumsysNameEnumeration(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::NumsysNameEnumeration(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::~NumsysNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::~NumsysNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NumsysNameEnumeration::~NumsysNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::constructEmpty()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::OlsonTimeZone(UResourceBundle const*, UResourceBundle const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::clearTransitionRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::OlsonTimeZone(UResourceBundle const*, UResourceBundle const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::OlsonTimeZone(icu_73::OlsonTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::operator=(icu_73::OlsonTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::OlsonTimeZone(icu_73::OlsonTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::~OlsonTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::deleteTransitionRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::~OlsonTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::~OlsonTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::operator==(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getHistoricalOffset(double, signed char, int, int, int&, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getOffset(double, signed char, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getOffsetFromLocal(double, UTimeZoneLocalOption, UTimeZoneLocalOption, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::setRawOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getRawOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::transitionTimeInSeconds(short) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::useDaylightTime() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getDSTSavings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::inDaylightTime(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::hasSameRules(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "t arrayEqual(void const*, void const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::checkTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::initTransitionRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getNextTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getPreviousTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::countTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::OlsonTimeZone::getTimeZoneRules(icu_73::InitialTimeZoneRule const*&, icu_73::TimeZoneRule const**, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::PersianCalendar(icu_73::PersianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::PersianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::PersianCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::PersianCalendar(icu_73::PersianCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::~PersianCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::~PersianCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::~PersianCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::isLeapYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::yearStart(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::monthStart(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleGetMonthLength(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleGetYearLength(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleComputeMonthStart(int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::getRelatedYear(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::setRelatedYear(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PersianCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PersianCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::forLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::copy(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::toPointer(UErrorCode&) &&",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::addPluralRange(icu_73::StandardPlural::Form, icu_73::StandardPlural::Form, icu_73::StandardPlural::Form)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::setCapacity(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StandardPluralRanges::resolve(icu_73::StandardPlural::Form, icu_73::StandardPlural::Form) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PluralRangesDataSink::~PluralRangesDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PluralRangesDataSink::~PluralRangesDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PluralRangesDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::init(icu_73::PluralRules const*, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralRules const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralRules const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::PluralRules const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::PluralRules const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralRules const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralRules const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::PluralRules const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, icu_73::PluralRules const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UPluralType, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::Locale const&, UPluralType, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::copyObjects(icu_73::PluralFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralFormat(icu_73::PluralFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::~PluralFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::~PluralFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::~PluralFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(icu_73::Formattable const&, double, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::findSubMessage(icu_73::MessagePattern const&, int, icu_73::PluralFormat::PluralSelector const&, void*, double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::toPattern(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::setLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelectorAdapter::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::setNumberFormat(icu_73::NumberFormat const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::operator=(icu_73::PluralFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::operator!=(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::parseType(icu_73::UnicodeString const&, icu_73::NFRule const*, icu_73::Formattable&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelector::~PluralSelector()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelector::~PluralSelector()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelector::~PluralSelector()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelectorAdapter::~PluralSelectorAdapter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralFormat::PluralSelectorAdapter::select(void*, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::PluralRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::PluralRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::PluralRules(icu_73::PluralRules const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::operator=(icu_73::PluralRules const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::PluralRules(icu_73::PluralRules const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::~PluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::~PluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::~PluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedPluralRules::~SharedPluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedPluralRules::~SharedPluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedPluralRules::~SharedPluralRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::clone(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::RuleChain(icu_73::RuleChain const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getAvailableLocales(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::createRules(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::PluralRuleParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::parse(icu_73::UnicodeString const&, icu_73::PluralRules*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::~PluralRuleParser()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::createDefaultRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::internalForLocale(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::createSharedInstance(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::SharedPluralRules>(icu_73::Locale const&, icu_73::SharedPluralRules const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::forLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::forLocale(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getRuleFromResource(icu_73::Locale const&, UPluralType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(icu_73::IFixedDecimal const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::~FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(icu_73::number::FormattedNumber const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::select(icu_73::IFixedDecimal const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(icu_73::number::FormattedNumberRange const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::select(icu_73::number::impl::UFormattedNumberRangeData const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getKeywords(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::PluralKeywordEnumeration(icu_73::RuleChain*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getUniqueKeywordValue(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getAllKeywordValues(icu_73::UnicodeString const&, double*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getSamples(icu_73::UnicodeString const&, double*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::rulesForKeyword(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getSamplesFromString(icu_73::UnicodeString const&, double*, icu_73::number::impl::DecimalQuantity*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getSamples(icu_73::UnicodeString const&, icu_73::number::impl::DecimalQuantity*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::isKeyword(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getKeywordOther() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::operator==(icu_73::PluralRules const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::getNextToken(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::checkSyntax(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::add(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::add(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::getNumberValue(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralRules::getRules() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::dumpRules(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::AndConstraint(icu_73::AndConstraint const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::AndConstraint(icu_73::AndConstraint const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::~AndConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::~AndConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::~AndConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::AndConstraint::isFulfilled(icu_73::IFixedDecimal const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tokenTypeToPluralOperand(icu_73::tokenType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::OrConstraint(icu_73::OrConstraint const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::OrConstraint(icu_73::OrConstraint const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::~OrConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::~OrConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::~OrConstraint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OrConstraint::isFulfilled(icu_73::IFixedDecimal const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::RuleChain(icu_73::RuleChain const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::~RuleChain()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::~RuleChain()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::~RuleChain()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tokenString(icu_73::tokenType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::getKeywords(int, icu_73::UnicodeString*, int&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleChain::isKeyword(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::PluralRuleParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::~PluralRuleParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::~PluralRuleParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::getKeyType(icu_73::UnicodeString const&, icu_73::tokenType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralRuleParser::charType(char16_t)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::PluralKeywordEnumeration(icu_73::RuleChain*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::~PluralKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::~PluralKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PluralKeywordEnumeration::~PluralKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::init(double, int, long long, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::init(double, int, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::init(double, int, long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int, long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::getFractionalDigits(double, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::init(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(icu_73::FixedDecimal const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::FixedDecimal(icu_73::FixedDecimal const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::~FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::FixedDecimal::~FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::~FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::FixedDecimal::~FixedDecimal()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::createWithExponent(double, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::decimals(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::quickInit(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::adjustForMinFractionDigits(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::getPluralOperand(icu_73::PluralOperand) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::longValue() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::isNaN() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::isInfinite() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::hasIntegerValue() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::isNanOrInfinity() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::getVisibleFractionDigitCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::operator==(icu_73::FixedDecimal const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::toString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FixedDecimal::doubleValue() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::PluralAvailableLocalesEnumeration(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::~PluralAvailableLocalesEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralAvailableLocalesEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::SharedPluralRules>(icu_73::CacheKey<icu_73::SharedPluralRules> const&, void const*, icu_73::SharedPluralRules const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::SharedPluralRules>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::SharedPluralRules>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::SharedPluralRules> const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::Quantifier(icu_73::UnicodeFunctor*, unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::Quantifier(icu_73::UnicodeFunctor*, unsigned int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::Quantifier(icu_73::Quantifier const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::Quantifier(icu_73::Quantifier const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::~Quantifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::~Quantifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::~Quantifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::~Quantifier()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::~Quantifier()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::toMatcher() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::Quantifier::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Quantifier::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::QuantityFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::QuantityFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::QuantityFormatter(icu_73::QuantityFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::QuantityFormatter(icu_73::QuantityFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::operator=(icu_73::QuantityFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::~QuantityFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::~QuantityFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::addIfAbsent(char const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::isValid() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::getByVariant(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::format(icu_73::Formattable const&, icu_73::NumberFormat const&, icu_73::PluralRules const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::selectPlural(icu_73::Formattable const&, icu_73::NumberFormat const&, icu_73::PluralRules const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::format(icu_73::SimpleFormatter const&, icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::QuantityFormatter::formatAndSelect(double, icu_73::NumberFormat const&, icu_73::PluralRules const&, icu_73::FormattedStringBuilder&, icu_73::StandardPlural::Form&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::~LocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::~LocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::~LocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::operator==(icu_73::LocalizationInfo const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::indexForLocale(char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalizationInfo::indexForRuleSet(char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocDataParser::parse(char16_t*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocDataParser::doParse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocDataParser::parseError(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DeleteFn(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocDataParser::nextArray(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VArray::add(void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocDataParser::nextString()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::create(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::~StringLocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::~StringLocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::~StringLocalizationInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::getRuleSetName(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::getLocaleName(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::getDisplayName(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::init(icu_73::UnicodeString const&, icu_73::LocalizationInfo*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::LocalizationInfo*, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::LocalizationInfo*, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::URBNFRuleSetTag, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::URBNFRuleSetTag, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::RuleBasedNumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::operator=(icu_73::RuleBasedNumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::RuleBasedNumberFormat(icu_73::RuleBasedNumberFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::dispose()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getDecimalFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::~RuleBasedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::~RuleBasedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::~RuleBasedNumberFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRules() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRuleSetName(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getNumberOfRuleSetNames() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getNumberOfRuleSetDisplayNameLocales() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRuleSetDisplayNameLocale(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRuleSetDisplayName(int, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRuleSetDisplayName(icu_73::UnicodeString const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::findRuleSet(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NFRuleSet::isNamed(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(icu_73::number::impl::DecimalQuantity const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(int, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(long long, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(long long, icu_73::NFRuleSet*, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(double, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(double, icu_73::NFRuleSet&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(int, icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(long long, icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::indexOf(char16_t const*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::format(double, icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::adjustForCapitalizationContext(int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::parse(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::setLenient(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::setDefaultRuleSet(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::initDefaultRuleSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getDefaultRuleSetName() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::initializeDecimalFormatSymbols(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::initializeDefaultInfinityRule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::initializeDefaultNaNRule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::stripWhitespace(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::initCapitalizationContextInfo(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getCollator() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getDefaultInfinityRule() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getDefaultNaNRule() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::adoptDecimalFormatSymbols(icu_73::DecimalFormatSymbols*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::setDecimalFormatSymbols(icu_73::DecimalFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::createPluralFormat(UPluralType, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::getRoundingMode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedNumberFormat::setRoundingMode(icu_73::NumberFormat::ERoundingMode)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::getNumberOfRuleSets() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringLocalizationInfo::getNumberOfDisplayLocales() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedNumberFormat::isLenient() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VArray::~VArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::_construct(icu_73::UnicodeString const&, UTransDirection, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection, icu_73::UnicodeFilter*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection, icu_73::UnicodeFilter*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::TransliterationRuleData const*, icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::TransliterationRuleData const*, icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::TransliterationRuleData*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::UnicodeString const&, icu_73::TransliterationRuleData*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::RuleBasedTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::RuleBasedTransliterator(icu_73::RuleBasedTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::~RuleBasedTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::~RuleBasedTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::~RuleBasedTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::toRules(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::handleGetSourceSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedTransliterator::getTargetSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::TransliterationRuleData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::TransliterationRuleData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::TransliterationRuleData(icu_73::TransliterationRuleData const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::TransliterationRuleData(icu_73::TransliterationRuleData const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::~TransliterationRuleData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::~TransliterationRuleData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::lookup(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::lookupMatcher(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleData::lookupReplacer(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::ParseData(icu_73::TransliterationRuleData const*, icu_73::UVector const*, icu_73::Hashtable const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::ParseData(icu_73::TransliterationRuleData const*, icu_73::UVector const*, icu_73::Hashtable const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::~ParseData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::~ParseData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::~ParseData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::lookup(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::lookupMatcher(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::parseReference(icu_73::UnicodeString const&, icu_73::ParsePosition&, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::isMatcher(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ParseData::isReplacer(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::RuleHalf(icu_73::TransliteratorParser&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::RuleHalf(icu_73::TransliteratorParser&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::~RuleHalf()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::~RuleHalf()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::parse(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::parseSection(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString&, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::parseSet(icu_73::UnicodeString const&, icu_73::ParsePosition&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::checkVariableRange(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::setSegmentObject(int, icu_73::StringMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::getSegmentStandin(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::~SingleID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::generateStandInFor(icu_73::UnicodeFunctor*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::appendVariableDef(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::getDotStandIn(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::removeContext()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::isValidOutput(icu_73::TransliteratorParser&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleHalf::isValidInput(icu_73::TransliteratorParser&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::TransliteratorParser(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::TransliteratorParser(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::~TransliteratorParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::~TransliteratorParser()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::parse(icu_73::UnicodeString const&, UTransDirection, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::parseRules(icu_73::UnicodeString const&, UTransDirection, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::orphanCompoundFilter()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::insert(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::syntaxError(UErrorCode, icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::setVariableRange(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::resemblesPragma(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::parsePragma(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::parseRule(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::pragmaMaximumBackup(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorParser::pragmaNormalizeRules(UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T _utrans_stripRules_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::TransliterationRule(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString const&, int, int, icu_73::UnicodeFunctor**, int, signed char, signed char, icu_73::TransliterationRuleData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::TransliterationRule(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString const&, int, int, icu_73::UnicodeFunctor**, int, signed char, signed char, icu_73::TransliterationRuleData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::TransliterationRule(icu_73::TransliterationRule&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::TransliterationRule(icu_73::TransliterationRule&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::~TransliterationRule()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::~TransliterationRule()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::~TransliterationRule()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::getContextLength() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::getIndexValue() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::masks(icu_73::TransliterationRule const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::matchAndReplace(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::toRule(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::addSourceSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRule::addTargetSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::TransliterationRuleSet(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _deleteRule(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::TransliterationRuleSet(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::TransliterationRuleSet(icu_73::TransliterationRuleSet const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::TransliterationRuleSet(icu_73::TransliterationRuleSet const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::~TransliterationRuleSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::~TransliterationRuleSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::~TransliterationRuleSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::getMaximumContextLength() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::addRule(icu_73::TransliterationRule*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::freeze(UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::transliterate(icu_73::Replaceable&, UTransPosition&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::toRules(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliterationRuleSet::getSourceTargetSet(icu_73::UnicodeSet&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::RuleBasedTimeZone(icu_73::UnicodeString const&, icu_73::InitialTimeZoneRule*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::RuleBasedTimeZone(icu_73::UnicodeString const&, icu_73::InitialTimeZoneRule*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::RuleBasedTimeZone(icu_73::RuleBasedTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::copyRules(icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::complete(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::RuleBasedTimeZone(icu_73::RuleBasedTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::~RuleBasedTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::deleteTransitions()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::deleteRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::~RuleBasedTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::~RuleBasedTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::operator=(icu_73::RuleBasedTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::operator==(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareRules(icu_73::UVector*, icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::operator!=(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::addTransitionRule(icu_73::TimeZoneRule*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::completeConst(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteTransition(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getOffsetInternal(double, signed char, int, int, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getOffset(double, signed char, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getOffsetFromLocal(double, UTimeZoneLocalOption, UTimeZoneLocalOption, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getTransitionTime(icu_73::Transition*, signed char, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::findRuleInFinal(double, signed char, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::setRawOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getRawOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::useDaylightTime() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::findNext(double, signed char, double&, icu_73::TimeZoneRule*&, icu_73::TimeZoneRule*&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::inDaylightTime(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::hasSameRules(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getNextTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getPreviousTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::findPrev(double, signed char, double&, icu_73::TimeZoneRule*&, icu_73::TimeZoneRule*&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::countTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getTimeZoneRules(icu_73::InitialTimeZoneRule const*&, icu_73::TimeZoneRule const**, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedTimeZone::getLocalDelta(int, int, int, int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::RegexCompile(icu_73::RegexPattern*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::RegexCompile(icu_73::RegexPattern*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::~RegexCompile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::~RegexCompile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::~RegexCompile()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::compile(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::compile(UText*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::nextChar(icu_73::RegexCompile::RegexPatternChar&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::doParseActions(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::error(UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::allocateStackData(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::stripNOPs()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::minMatchLength(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::matchStartType()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::appendOp(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::handleCloseParen()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::fixLiterals(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::buildOp(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UVector32::push(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::allocateData(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::blockTopLoc(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::appendOp(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::insertOp(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::compileInlineInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::compileInterval(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UVector64::push(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::literalChar(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::scanProp()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::compileSet(icu_73::UnicodeSet*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::scanNamedChar()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::peekCharLL()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::nextCharLL()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::addCategory(icu_73::UnicodeSet*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UStack::push(void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::setPushOp(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::setEval(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::scanPosixProp()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::maxMatchLength(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::findCaseInsensitiveStarters(int, icu_73::UnicodeSet*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexCompile::createSetForProperty(icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet>::adoptInsteadAndCheckErrorCode(icu_73::UnicodeSet*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::caseCompare(icu_73::ConstChar16Ptr, int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::addIdentifierIgnorable(icu_73::UnicodeSet*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::CaseFoldingUTextIterator(UText&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::CaseFoldingUTextIterator(UText&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::~CaseFoldingUTextIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::~CaseFoldingUTextIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUTextIterator::inExpansion()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::CaseFoldingUCharIterator(char16_t const*, long long, long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::CaseFoldingUCharIterator(char16_t const*, long long, long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::~CaseFoldingUCharIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::~CaseFoldingUCharIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::inExpansion()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CaseFoldingUCharIterator::getIndex()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexStaticSets::RegexStaticSets(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexStaticSets::RegexStaticSets(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexStaticSets::~RegexStaticSets()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexStaticSets::~RegexStaticSets()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexStaticSets::initGlobals(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::regex_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t _uregex_utext_unescape_charAt_73",
    "type": "CPP"
  },
  {
    "name": "t _uregex_ucstr_unescape_charAt_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::loadRegionData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t region_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::Region()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::cleanupRegionData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::Region()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::~Region()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::~Region()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::~Region()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::operator==(icu_73::Region const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::operator!=(icu_73::Region const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getInstance(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getPreferredValues(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getInstance(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getAvailable(URegionType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::RegionNameEnumeration(icu_73::UVector*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getContainingRegion() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getContainingRegion(URegionType) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getContainedRegions(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getContainedRegions(URegionType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::contains(icu_73::Region const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getRegionCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Region::getNumericCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::RegionNameEnumeration(icu_73::UVector*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::~RegionNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::~RegionNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegionNameEnumeration::~RegionNameEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUHashtablePointer::~LocalUHashtablePointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::~RelativeDateTimeCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::~RelativeDateTimeCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::~RelativeDateTimeCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::getAbsoluteUnitString(int, UDateAbsoluteUnit, UDateDirection) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::getRelativeUnitFormatter(int, UDateRelativeUnit, int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::getRelativeDateTimeUnitFormatter(int, URelativeDateTimeUnit, int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::adoptCombinedDateAndTime(icu_73::SimpleFormatter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTimeData::~FormattedRelativeDateTimeData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTimeData::~FormattedRelativeDateTimeData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTimeData::~FormattedRelativeDateTimeData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::FormattedRelativeDateTime(icu_73::FormattedRelativeDateTime&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::FormattedRelativeDateTime(icu_73::FormattedRelativeDateTime&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::~FormattedRelativeDateTime()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::~FormattedRelativeDateTime()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::~FormattedRelativeDateTime()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::operator=(icu_73::FormattedRelativeDateTime&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::toString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::toTempString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::appendTo(icu_73::Appendable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FormattedRelativeDateTime::nextPosition(icu_73::ConstrainedFieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::init(icu_73::NumberFormat*, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, icu_73::NumberFormat*, UDateRelativeDateTimeFormatterStyle, UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::Locale const&, icu_73::NumberFormat*, UDateRelativeDateTimeFormatterStyle, UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::RelativeDateTimeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::RelativeDateTimeFormatter(icu_73::RelativeDateTimeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::operator=(icu_73::RelativeDateTimeFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::RelativeDateTimeCacheData>(icu_73::RelativeDateTimeCacheData const*, icu_73::RelativeDateTimeCacheData const*&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedBreakIterator>(icu_73::SharedBreakIterator const*, icu_73::SharedBreakIterator const*&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::~RelativeDateTimeFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::~RelativeDateTimeFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::~RelativeDateTimeFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::getNumberFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::getCapitalizationContext() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::getFormatStyle() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::format(double, UDateDirection, UDateRelativeUnit, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString& icu_73::RelativeDateTimeFormatter::doFormat<void (icu_73::RelativeDateTimeFormatter::*)(double, UDateDirection, UDateRelativeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, double, UDateDirection, UDateRelativeUnit>(void (icu_73::RelativeDateTimeFormatter::*)(double, UDateDirection, UDateRelativeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, icu_73::UnicodeString&, UErrorCode&, double, UDateDirection, UDateRelativeUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatImpl(double, UDateDirection, UDateRelativeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatToValue(double, UDateDirection, UDateRelativeUnit, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTime icu_73::RelativeDateTimeFormatter::doFormatToValue<void (icu_73::RelativeDateTimeFormatter::*)(double, UDateDirection, UDateRelativeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, double, UDateDirection, UDateRelativeUnit>(void (icu_73::RelativeDateTimeFormatter::*)(double, UDateDirection, UDateRelativeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, UErrorCode&, double, UDateDirection, UDateRelativeUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatNumeric(double, URelativeDateTimeUnit, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString& icu_73::RelativeDateTimeFormatter::doFormat<void (icu_73::RelativeDateTimeFormatter::*)(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, double, URelativeDateTimeUnit>(void (icu_73::RelativeDateTimeFormatter::*)(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, icu_73::UnicodeString&, UErrorCode&, double, URelativeDateTimeUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatNumericImpl(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatNumericToValue(double, URelativeDateTimeUnit, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTime icu_73::RelativeDateTimeFormatter::doFormatToValue<void (icu_73::RelativeDateTimeFormatter::*)(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, double, URelativeDateTimeUnit>(void (icu_73::RelativeDateTimeFormatter::*)(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, UErrorCode&, double, URelativeDateTimeUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::format(UDateDirection, UDateAbsoluteUnit, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString& icu_73::RelativeDateTimeFormatter::doFormat<void (icu_73::RelativeDateTimeFormatter::*)(UDateDirection, UDateAbsoluteUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, UDateDirection, UDateAbsoluteUnit>(void (icu_73::RelativeDateTimeFormatter::*)(UDateDirection, UDateAbsoluteUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, icu_73::UnicodeString&, UErrorCode&, UDateDirection, UDateAbsoluteUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatAbsoluteImpl(UDateDirection, UDateAbsoluteUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatToValue(UDateDirection, UDateAbsoluteUnit, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FormattedRelativeDateTime icu_73::RelativeDateTimeFormatter::doFormatToValue<void (icu_73::RelativeDateTimeFormatter::*)(UDateDirection, UDateAbsoluteUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, UDateDirection, UDateAbsoluteUnit>(void (icu_73::RelativeDateTimeFormatter::*)(UDateDirection, UDateAbsoluteUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const, UErrorCode&, UDateDirection, UDateAbsoluteUnit) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::format(double, URelativeDateTimeUnit, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatRelativeImpl(double, URelativeDateTimeUnit, icu_73::FormattedRelativeDateTimeData&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::formatToValue(double, URelativeDateTimeUnit, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::combineDateAndTime(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::adjustForContext(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateTimeFormatter::checkNoAdjustForContext(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::getByLocale<icu_73::RelativeDateTimeCacheData>(icu_73::Locale const&, icu_73::RelativeDateTimeCacheData const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedRelativeDateTimeImpl::UFormattedRelativeDateTimeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedRelativeDateTimeImpl::UFormattedRelativeDateTimeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedRelativeDateTimeImpl::~UFormattedRelativeDateTimeImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedRelativeDateTimeImpl::~UFormattedRelativeDateTimeImpl()",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_openResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_resultAsValue_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_closeResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_formatNumeric_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_formatNumericToResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_format_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_formatToResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ureldatefmt_combineDateAndTime_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateTimeCacheData::RelativeDateTimeCacheData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::~RelDateTimeFmtDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::~RelDateTimeFmtDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::styleFromString(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::absUnitFromGeneric(icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::RelAbsUnit)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::relUnitFromGeneric(icu_73::(anonymous namespace)::RelDateTimeFmtDataSink::RelAbsUnit)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::RelativeDateTimeCacheData>(icu_73::CacheKey<icu_73::RelativeDateTimeCacheData> const&, void const*, icu_73::RelativeDateTimeCacheData const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::RelativeDateTimeCacheData>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::RelativeDateTimeCacheData> const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RelativeDateFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::RelativeDateFormat(icu_73::RelativeDateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::RelativeDateFormat(icu_73::RelativeDateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::RelativeDateFormat(UDateFormatStyle, UDateFormatStyle, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::initializeCalendar(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::loadDates(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::RelativeDateFormat(UDateFormatStyle, UDateFormatStyle, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::~RelativeDateFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::~RelativeDateFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::~RelativeDateFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::format(icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::dayDifference(icu_73::Calendar&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::getStringForDay(int, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::parse(icu_73::UnicodeString const&, icu_73::Calendar&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::parse(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::parse(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::toPattern(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::toPatternDate(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::toPatternTime(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::applyPatterns(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::getDateFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RelativeDateFormat::initCapitalizationContextInfo(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateFmtDataSink::~RelDateFmtDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateFmtDataSink::~RelDateFmtDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::RelDateFmtDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::RegexPattern const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::init(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::init2(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::RegexPattern const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::UnicodeString const&, icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::UnicodeString const&, icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(UText*, UText*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(UText*, UText*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(UText*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::RegexMatcher(UText*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::~RegexMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::~RegexMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::~RegexMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::reset(UText*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::setStackLimit(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::appendReplacement(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::appendReplacement(UText*, UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::appendGroup(int, UText*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::appendTail(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::appendTail(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::end(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::end(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::end64(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::end64(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::find()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::find(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::findUsingChunk(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::MatchAt(long long, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isLineTerminator(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::find(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::MatchChunkAt(int, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::group(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::group(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::group(UText*, long long&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::group(int, UText*, long long&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::start64(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::groupCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::hasAnchoringBounds() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::hasTransparentBounds() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::hitEnd() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::input() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::inputText() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getInput(UText*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::lookingAt(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compat_SyncMutableUTextContents(UText*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::resetPreserveRegion()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::lookingAt(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::matches(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::matches(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::pattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::region(long long, long long, long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::region(long long, long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::regionEnd() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::regionEnd64() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::regionStart() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::regionStart64() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::replaceAll(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::replaceAll(UText*, UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::replaceFirst(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::replaceFirst(UText*, UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::requireEnd() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::reset(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::reset(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::refreshInputText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::setTrace(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::split(icu_73::UnicodeString const&, icu_73::UnicodeString*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::split(UText*, UText**, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::start(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::start(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::start64(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::useAnchoringBounds(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::useTransparentBounds(signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::setTimeLimit(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getTimeLimit() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getStackLimit() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::setMatchCallback(signed char (*)(void const*, int), void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getMatchCallback(signed char (*&)(void const*, int), void const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::setFindProgressCallback(signed char (*)(void const*, long long), void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getFindProgressCallback(signed char (*&)(void const*, long long), void const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::resetStack()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::isWordBoundary(long long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::isChunkWordBoundary(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::isUWordBoundary(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::followingGCBoundary(long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::IncrementTime(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexMatcher::StateSave(icu_73::REStackFrame*, long long, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexMatcher::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char16_t, 40>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RemoveTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::registerIDs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator_create(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::RemoveTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::RemoveTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::~RemoveTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::~RemoveTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::~RemoveTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RemoveTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::RegexPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::init()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::RegexPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::RegexPattern(icu_73::RegexPattern const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::operator=(icu_73::RegexPattern const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::RegexPattern(icu_73::RegexPattern const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::zap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::initNamedCaptureMap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::~RegexPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::~RegexPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::~RegexPattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::operator==(icu_73::RegexPattern const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(icu_73::UnicodeString const&, unsigned int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(UText*, unsigned int, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(UText*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(icu_73::UnicodeString const&, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::compile(UText*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::flags() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::matcher(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::matcher(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::matches(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::matches(UText*, UText*, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::pattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::patternText(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::groupNumberFromName(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::groupNumberFromName(char const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::split(icu_73::UnicodeString const&, icu_73::UnicodeString*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::split(UText*, UText**, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::dumpOp(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::dumpPattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RegexPattern::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationKeyByteSink::~CollationKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationKeyByteSink::~CollationKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationKeyByteSink::~CollationKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationKeyByteSink::AppendBeyondCapacity(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationKeyByteSink::Resize(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::RuleBasedCollator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::RuleBasedCollator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(unsigned char const*, int, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::adoptTailoring(icu_73::CollationTailoring*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(unsigned char const*, int, icu_73::RuleBasedCollator const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::CollationCacheEntry const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::RuleBasedCollator(icu_73::CollationCacheEntry const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::~RuleBasedCollator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::~RuleBasedCollator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::~RuleBasedCollator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::operator=(icu_73::RuleBasedCollator const&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::CollationSettings>(icu_73::CollationSettings const*, icu_73::CollationSettings const*&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::CollationCacheEntry>(icu_73::CollationCacheEntry const*, icu_73::CollationCacheEntry const*&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::operator==(icu_73::Collator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getTailoredSet(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setLocales(icu_73::Locale const&, icu_73::Locale const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalGetLocaleID(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getRules() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getRules(UColRuleOption, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getVersion(unsigned char*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalGetContractionsAndExpansions(icu_73::UnicodeSet*, icu_73::UnicodeSet*, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalAddContractions(int, icu_73::UnicodeSet&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getDefaultSettings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getAttribute(UColAttribute, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setAttribute(UColAttribute, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setFastLatinOptions(icu_73::CollationSettings&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setMaxVariable(UColReorderCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getMaxVariable() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getVariableTop(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setVariableTop(char16_t const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setVariableTop(unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setVariableTop(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getReorderCodes(int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::setReorderCodes(int const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::compare(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::doCompare(char16_t const*, int, char16_t const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::compare(icu_73::UnicodeString const&, icu_73::UnicodeString const&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::compare(char16_t const*, int, char16_t const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::compareUTF8(icu_73::StringPiece const&, icu_73::StringPiece const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::doCompare(unsigned char const*, int, unsigned char const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalCompareUTF8(char const*, int, char const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::compareNFDIter(icu_73::Normalizer2Impl const&, icu_73::(anonymous namespace)::NFDIterator&, icu_73::(anonymous namespace)::NFDIterator&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF16NFDIterator::~UTF16NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF16NFDIterator::FCDUTF16NFDIterator(icu_73::Normalizer2Impl const&, char16_t const*, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF16NFDIterator::~FCDUTF16NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF8NFDIterator::~UTF8NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF8NFDIterator::~FCDUTF8NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::compare(UCharIterator&, UCharIterator&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UIterNFDIterator::~UIterNFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUIterNFDIterator::~FCDUIterNFDIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getCollationKey(icu_73::UnicodeString const&, icu_73::CollationKey&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getCollationKey(char16_t const*, int, icu_73::CollationKey&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::writeSortKey(char16_t const*, int, icu_73::SortKeyByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getSortKey(icu_73::UnicodeString const&, unsigned char*, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getSortKey(char16_t const*, int, unsigned char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FixedSortKeyByteSink::~FixedSortKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::writeIdenticalLevel(char16_t const*, char16_t const*, icu_73::SortKeyByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalNextSortKeyPart(UCharIterator*, unsigned int*, unsigned char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PartLevelCallback::~PartLevelCallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalGetCEs(icu_73::UnicodeString const&, icu_73::UVector64&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::internalGetShortDefinitionString(char const*, char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::appendAttribute(icu_73::CharString&, char, UColAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::appendSubtag(icu_73::CharString&, char, char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::isUnsafe(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::computeMaxExpansions(icu_73::CollationTailoring const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::initMaxExpansions(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::createCollationElementIterator(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::createCollationElementIterator(icu_73::CharacterIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedCollator::getMaxExpansion(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF16NFDIterator::~UTF16NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF16NFDIterator::nextRawCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::NFDIterator::nextCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::NFDIterator::nextDecomposedCodePoint(icu_73::Normalizer2Impl const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF16NFDIterator::~FCDUTF16NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReorderingBuffer::~ReorderingBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF8NFDIterator::~UTF8NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UTF8NFDIterator::nextRawCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF8NFDIterator::~FCDUTF8NFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUTF8NFDIterator::nextRawCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UIterNFDIterator::~UIterNFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UIterNFDIterator::nextRawCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUIterNFDIterator::~FCDUIterNFDIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FCDUIterNFDIterator::nextRawCodePoint()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FixedSortKeyByteSink::~FixedSortKeyByteSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FixedSortKeyByteSink::AppendBeyondCapacity(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::FixedSortKeyByteSink::Resize(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PartLevelCallback::~PartLevelCallback()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::PartLevelCallback::needToWrite(icu_73::Collation::Level)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::createSuperscriptInstance(icu_73::DecimalFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::createInstance(icu_73::DecimalFormat*, icu_73::ScientificNumberFormatter::Style*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::createSuperscriptInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::createMarkupInstance(icu_73::DecimalFormat*, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::createMarkupInstance(icu_73::Locale const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::ScientificNumberFormatter(icu_73::DecimalFormat*, icu_73::ScientificNumberFormatter::Style*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::SuperscriptStyle::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::SuperscriptStyle::format(icu_73::UnicodeString const&, icu_73::FieldPositionIterator&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::MarkupStyle::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::MarkupStyle::format(icu_73::UnicodeString const&, icu_73::FieldPositionIterator&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::ScientificNumberFormatter(icu_73::DecimalFormat*, icu_73::ScientificNumberFormatter::Style*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::getPreExponent(icu_73::DecimalFormatSymbols const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::ScientificNumberFormatter(icu_73::ScientificNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::ScientificNumberFormatter(icu_73::ScientificNumberFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::~ScientificNumberFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::~ScientificNumberFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::~ScientificNumberFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScientificNumberFormatter::format(icu_73::Formattable const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScientificNumberFormatter::MarkupStyle::~MarkupStyle()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScientificNumberFormatter::MarkupStyle::~MarkupStyle()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScientificNumberFormatter::SuperscriptStyle::~SuperscriptStyle()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScientificNumberFormatter::SuperscriptStyle::~SuperscriptStyle()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ScientificNumberFormatter::MarkupStyle::MarkupStyle(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::ScriptSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::ScriptSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::~ScriptSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::~ScriptSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::ScriptSet(icu_73::ScriptSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::operator=(icu_73::ScriptSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::ScriptSet(icu_73::ScriptSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::operator==(icu_73::ScriptSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::test(UScriptCode, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::set(UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::reset(UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::Union(icu_73::ScriptSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::intersect(icu_73::ScriptSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::intersect(UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::intersects(icu_73::ScriptSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::contains(icu_73::ScriptSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::setAll()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::resetAll()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::countMembers() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::nextSetBit(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::isEmpty() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::displayScripts(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::parseScripts(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ScriptSet::setScriptExtensions(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_equalsScriptSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareScriptSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashScriptSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_deleteScriptSet_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<UScriptCode, 20>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::SearchIterator(icu_73::SearchIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::~SearchIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::~SearchIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::~SearchIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setAttribute(USearchAttribute, USearchAttributeValue, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getAttribute(USearchAttribute) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getMatchedStart() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getMatchedLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getMatchedText(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setBreakIterator(icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getBreakIterator() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setText(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setText(icu_73::CharacterIterator&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::getText() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::operator==(icu_73::SearchIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::first(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::following(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::last(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::preceding(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::next(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setMatchNotFound()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::previous(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::SearchIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::SearchIterator(icu_73::UnicodeString const&, icu_73::BreakIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::SearchIterator(icu_73::CharacterIterator&, icu_73::BreakIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::operator=(icu_73::SearchIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setMatchLength(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SearchIterator::setMatchStart(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::SelectFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::SelectFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::SelectFormat(icu_73::SelectFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::SelectFormat(icu_73::SelectFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::~SelectFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::~SelectFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::~SelectFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::format(icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::findSubMessage(icu_73::MessagePattern const&, int, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::toPattern(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::operator=(icu_73::SelectFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::operator!=(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SelectFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedBreakIterator::SharedBreakIterator(icu_73::BreakIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedBreakIterator::SharedBreakIterator(icu_73::BreakIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedBreakIterator::~SharedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedBreakIterator::~SharedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedBreakIterator::~SharedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::clearTransitionRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, signed char, signed char, signed char, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::construct(int, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, signed char, signed char, signed char, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, signed char, signed char, signed char, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, signed char, signed char, signed char, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(int, icu_73::UnicodeString const&, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, signed char, signed char, signed char, int, icu_73::SimpleTimeZone::TimeMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::decodeRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::~SimpleTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::deleteTransitionRules()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::~SimpleTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::~SimpleTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(icu_73::SimpleTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::operator=(icu_73::SimpleTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::SimpleTimeZone(icu_73::SimpleTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::operator==(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setStartYear(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setStartRule(int, int, int, int, icu_73::SimpleTimeZone::TimeMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::decodeStartRule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setStartRule(int, int, int, icu_73::SimpleTimeZone::TimeMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setStartRule(int, int, int, int, icu_73::SimpleTimeZone::TimeMode, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setEndRule(int, int, int, int, icu_73::SimpleTimeZone::TimeMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::decodeEndRule(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setEndRule(int, int, int, icu_73::SimpleTimeZone::TimeMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setEndRule(int, int, int, int, icu_73::SimpleTimeZone::TimeMode, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::compareToRule(signed char, signed char, signed char, signed char, signed char, int, int, icu_73::SimpleTimeZone::EMode, signed char, signed char, signed char, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getOffsetFromLocal(double, UTimeZoneLocalOption, UTimeZoneLocalOption, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getRawOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setRawOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::setDSTSavings(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getDSTSavings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::useDaylightTime() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::inDaylightTime(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::hasSameRules(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getNextTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::checkTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getPreviousTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::initTransitionRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::countTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleTimeZone::getTimeZoneRules(icu_73::InitialTimeZoneRule const*&, icu_73::TimeZoneRule const**, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleTimeZone::getOffset(double, signed char, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::NSOverride::~NSOverride()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::NSOverride::~NSOverride()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::NSOverride::free()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getNumberFormatByIndex(UDateFormatField) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::~SimpleDateFormat()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::freeSharedNumberFormatters(icu_73::SharedNumberFormat const**)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::~SimpleDateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::~SimpleDateFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initializeBooleanAttributes()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::construct(icu_73::DateFormat::EStyle, icu_73::DateFormat::EStyle, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initializeDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initializeCalendar(icu_73::TimeZone*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initialize(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::processOverrideString(icu_73::Locale const&, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::DateFormatSymbols*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::DateFormatSymbols*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::DateFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::UnicodeString const&, icu_73::DateFormatSymbols const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::DateFormat::EStyle, icu_73::DateFormat::EStyle, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::DateFormat::EStyle, icu_73::DateFormat::EStyle, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::SimpleDateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::operator=(icu_73::SimpleDateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::SimpleDateFormat(icu_73::SimpleDateFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initSimpleNumberFormatter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::parsePattern()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::fixNumberFormatForDates(icu_73::NumberFormat&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::initNumberFormatters(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::parseAmbiguousDatesAsAfter(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::format(icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::_format(icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPositionHandler&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::format(icu_73::Calendar&, icu_73::UnicodeString&, icu_73::FieldPositionIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::subFormat(icu_73::UnicodeString&, char16_t, int, UDisplayContext, int, char16_t, icu_73::FieldPositionHandler&, icu_73::Calendar&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isSyntaxChar(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getLevelFromChar(char16_t)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createSharedNumberFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::zeroPaddingNumber(icu_73::NumberFormat const*, icu_73::UnicodeString&, int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_appendSymbol(icu_73::UnicodeString&, int, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_appendSymbolWithMonthPattern(icu_73::UnicodeString&, int, icu_73::UnicodeString const*, int, icu_73::UnicodeString const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::tzFormat(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getSmpFmtLocale() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::replaceBetween(int, int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::adoptNumberFormat(icu_73::NumberFormat*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::adoptNumberFormat(icu_73::UnicodeString const&, icu_73::NumberFormat*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createSharedNumberFormat(icu_73::NumberFormat*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getNumberFormatForField(char16_t) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isNumeric(char16_t, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isAtNumericField(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isAfterNonNumericField(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::parse(icu_73::UnicodeString const&, icu_73::Calendar&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::subParse(icu_73::UnicodeString const&, int&, char16_t, int, signed char, signed char, signed char*, int&, icu_73::Calendar&, int, icu_73::MessageFormat*, UTimeZoneFormatTimeType*, int*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::matchLiterals(icu_73::UnicodeString const&, int&, icu_73::UnicodeString const&, int&, signed char, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::matchQuarterString(icu_73::UnicodeString const&, int, UCalendarDateFields, icu_73::UnicodeString const*, int, icu_73::Calendar&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::matchStringWithOptionalDot(icu_73::UnicodeString const&, int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::matchDayPeriodStrings(icu_73::UnicodeString const&, int, icu_73::UnicodeString const*, int, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::matchAlphaMonthStrings(icu_73::UnicodeString const&, int, icu_73::UnicodeString const*, icu_73::UnicodeString const*, int, icu_73::Calendar&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::matchString(icu_73::UnicodeString const&, int, UCalendarDateFields, icu_73::UnicodeString const*, int, icu_73::UnicodeString const*, icu_73::Calendar&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::set2DigitYearStart(double, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::parseInt(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&, signed char, icu_73::NumberFormat const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::checkIntSuffix(icu_73::UnicodeString const&, int, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::countDigits(icu_73::UnicodeString const&, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::parseInt(icu_73::UnicodeString const&, icu_73::Formattable&, int, icu_73::ParsePosition&, signed char, icu_73::NumberFormat const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::translatePattern(icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::toPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::toLocalizedPattern(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::applyPattern(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::applyLocalizedPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getDateFormatSymbols() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::adoptDateFormatSymbols(icu_73::DateFormatSymbols*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::setDateFormatSymbols(icu_73::DateFormatSymbols const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::getTimeZoneFormat() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::adoptTimeZoneFormat(icu_73::TimeZoneFormat*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::setTimeZoneFormat(icu_73::TimeZoneFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::adoptCalendar(icu_73::Calendar*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::setContext(UDisplayContext, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isFieldUnitIgnored(UCalendarDateFields) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::isFieldUnitIgnored(icu_73::UnicodeString const&, UCalendarDateFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::compareSimpleAffix(icu_73::UnicodeString const&, icu_73::UnicodeString const&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::skipPatternWhiteSpace(icu_73::UnicodeString const&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleDateFormat::skipUWhiteSpace(icu_73::UnicodeString const&, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::SimpleDateFormat::NSOverride>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::SimpleDateFormatStaticSets(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::SimpleDateFormatStaticSets(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::~SimpleDateFormatStaticSets()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::~SimpleDateFormatStaticSets()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleDateFormatStaticSets::getIgnorables(UDateFormatField)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::smpdtfmt_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey(unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::reallocate(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::setToBogus()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey(unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey(icu_73::CollationKey const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::CollationKey(icu_73::CollationKey const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::~CollationKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::~CollationKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::~CollationKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::setLength(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::operator==(icu_73::CollationKey const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::operator=(icu_73::CollationKey const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::compareTo(icu_73::CollationKey const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::compareTo(icu_73::CollationKey const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CollationKey::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T _ucol_keyHashCode_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StandardPlural::getKeyword(icu_73::StandardPlural::Form)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StandardPlural::indexOrNegativeFromString(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StandardPlural::indexOrNegativeFromString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StandardPlural::indexFromString(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StandardPlural::indexFromString(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::StringSegment(icu_73::UnicodeString const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::StringSegment(icu_73::UnicodeString const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::setOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::adjustOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::adjustOffsetByCodePoint()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::getCodePoint() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::setLength(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::resetLength()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::length() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::charAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::codePointAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::toUnicodeString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::toTempUnicodeString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::startsWith(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::codePointsEqual(int, int, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::startsWith(icu_73::UnicodeSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::startsWith(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::getCommonPrefixLength(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::getPrefixLengthInternal(icu_73::UnicodeString const&, bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::getCaseSensitivePrefixLength(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSegment::operator==(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::StringMatcher(icu_73::UnicodeString const&, int, int, int, icu_73::TransliterationRuleData const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::StringMatcher(icu_73::UnicodeString const&, int, int, int, icu_73::TransliterationRuleData const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::StringMatcher(icu_73::StringMatcher const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::StringMatcher(icu_73::StringMatcher const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::~StringMatcher()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::toMatcher() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::toReplacer() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::resetMatch()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringMatcher::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringMatcher::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeReplacer::~UnicodeReplacer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeReplacer::~UnicodeReplacer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeReplacer::~UnicodeReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::UnicodeString const&, int, icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::UnicodeString const&, int, icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::UnicodeString const&, icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::UnicodeString const&, icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::StringReplacer const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::StringReplacer(icu_73::StringReplacer const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::~StringReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::~StringReplacer()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringReplacer::~StringReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::~StringReplacer()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringReplacer::~StringReplacer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::toReplacer() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringReplacer::replace(icu_73::Replaceable&, int, int, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringReplacer::toReplacerPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to icu_73::StringReplacer::addReplacementSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringReplacer::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::RuleBasedCollator*, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::RuleBasedCollator*, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::CharacterIterator&, icu_73::Locale const&, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::CharacterIterator&, icu_73::Locale const&, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::CharacterIterator&, icu_73::RuleBasedCollator*, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::UnicodeString const&, icu_73::CharacterIterator&, icu_73::RuleBasedCollator*, icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::StringSearch const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::StringSearch(icu_73::StringSearch const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::~StringSearch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::~StringSearch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::~StringSearch()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::operator=(icu_73::StringSearch const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::operator==(icu_73::SearchIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::setOffset(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::setText(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::setText(icu_73::CharacterIterator&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::getCollator() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::setCollator(icu_73::RuleBasedCollator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::setPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::getPattern() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::safeClone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::handleNext(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringSearch::handlePrev(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TaiwanCalendar::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::TaiwanCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::TaiwanCalendar(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::~TaiwanCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::~TaiwanCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::~TaiwanCalendar()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::TaiwanCalendar(icu_73::TaiwanCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::TaiwanCalendar(icu_73::TaiwanCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::operator=(icu_73::TaiwanCalendar const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::handleGetExtendedYear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::handleComputeFields(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::handleGetLimit(UCalendarDateFields, icu_73::Calendar::ELimitType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::haveDefaultCentury() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::defaultCenturyStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initializeSystemDefaultCentury()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TaiwanCalendar::defaultCenturyStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::loadRule(UResourceBundle const*, icu_73::UnicodeString const&, UResourceBundle*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getUnknown()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::initStaticTimeZones()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getGMT()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::TimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::TimeZone(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::~TimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::~TimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::~TimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::TimeZone(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::operator=(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::operator==(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createTimeZone(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createCustomTimeZone(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::detectHostTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createDefault()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::forLocaleOrDefault(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::adoptDefault(icu_73::TimeZone*)",
    "type": "CPP"
  },
  {
    "name": "t timeZone_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::setDefault(icu_73::TimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getOffset(double, signed char, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::~TZEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::~TZEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::~TZEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createTimeZoneIDEnumeration(USystemTimeZoneType, char const*, int const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::create(USystemTimeZoneType, char const*, int const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumeration(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumerationForRawOffset(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumerationForRegion(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumeration(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::createEnumeration(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::countEquivalentIDs(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::openOlsonResource(icu_73::UnicodeString const&, UResourceBundle&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getEquivalentID(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::findID(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::findInStringArray(UResourceBundle*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::dereferOlsonLink(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getRegion(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getRegion(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getRegion(icu_73::UnicodeString const&, char*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getDisplayName(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getDisplayName(signed char, icu_73::TimeZone::EDisplayType, icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getDisplayName(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getDisplayName(signed char, icu_73::TimeZone::EDisplayType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getDSTSavings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::parseCustomID(icu_73::UnicodeString const&, int&, int&, int&, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::formatCustomID(int, int, int, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getCustomID(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::hasSameRules(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getTZDataVersion(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getCanonicalID(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getCanonicalID(icu_73::UnicodeString const&, icu_73::UnicodeString&, signed char&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getWindowsID(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZone::getIDForWindowsID(icu_73::UnicodeString const&, char const*, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::createSystemTimeZone(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::getMap(USystemTimeZoneType, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::umtx_initOnce<USystemTimeZoneType>(icu_73::UInitOnce&, void (*)(USystemTimeZoneType, UErrorCode&), USystemTimeZoneType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initMap(USystemTimeZoneType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::TZEnumeration(icu_73::TZEnumeration const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZEnumeration::getID(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TitlecaseTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::TitlecaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::TitlecaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::~TitlecaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::~TitlecaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::~TitlecaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::TitlecaseTransliterator(icu_73::TitlecaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::TitlecaseTransliterator(icu_73::TitlecaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TitlecaseTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::createInstance(icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::TimeUnit(icu_73::TimeUnit::UTimeUnitFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::TimeUnit(icu_73::TimeUnit::UTimeUnitFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::TimeUnit(icu_73::TimeUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::TimeUnit(icu_73::TimeUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::operator=(icu_73::TimeUnit const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::getTimeUnitField() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::~TimeUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::~TimeUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnit::~TimeUnit()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(icu_73::Formattable const&, icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(icu_73::Formattable const&, icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(double, icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(double, icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(icu_73::TimeUnitAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::TimeUnitAmount(icu_73::TimeUnitAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::operator=(icu_73::TimeUnitAmount const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::operator==(icu_73::UObject const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::~TimeUnitAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::~TimeUnitAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::~TimeUnitAmount()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::getTimeUnit() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitAmount::getTimeUnitField() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::create(UTimeUnitFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::Locale const&, UTimeUnitFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::Locale const&, UTimeUnitFormatStyle, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::TimeUnitFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::initHash(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::copyHash(icu_73::Hashtable const*, icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::TimeUnitFormat(icu_73::TimeUnitFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::~TimeUnitFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::deleteHash(icu_73::Hashtable*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::~TimeUnitFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::~TimeUnitFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::operator=(icu_73::TimeUnitFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::setup(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::initDataMembers(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::readFromCurrentLocale(UTimeUnitFormatStyle, char const*, icu_73::UVector const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::checkConsistency(UTimeUnitFormatStyle, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeUnitFormatReadSink::~TimeUnitFormatReadSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeUnitFormatReadSink::~TimeUnitFormatReadSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeUnitFormatReadSink::~TimeUnitFormatReadSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::searchInLocaleChain(UTimeUnitFormatStyle, char const*, char const*, icu_73::TimeUnit::UTimeUnitFields, icu_73::UnicodeString const&, char const*, icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::getTimeUnitName(icu_73::TimeUnit::UTimeUnitFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::setLocale(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeUnitFormat::setNumberFormat(icu_73::NumberFormat const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tmutfmtHashTableValueComparator(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeUnitFormatReadSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::Hashtable>::adoptInsteadAndCheckErrorCode(icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LowercaseTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::LowercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::LowercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::~LowercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::~LowercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::~LowercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::LowercaseTransliterator(icu_73::LowercaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::LowercaseTransliterator(icu_73::LowercaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LowercaseTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UppercaseTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::UppercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::UppercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::~UppercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::~UppercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::~UppercaseTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::UppercaseTransliterator(icu_73::UppercaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::UppercaseTransliterator(icu_73::UppercaseTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UppercaseTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::Transliterator(icu_73::UnicodeString const&, icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::~Transliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::~Transliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::~Transliterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::Transliterator(icu_73::Transliterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::operator=(icu_73::Transliterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::adoptFilter(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::transliterate(icu_73::Replaceable&, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::transliterate(icu_73::Replaceable&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::transliterate(icu_73::Replaceable&, UTransPosition&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_transliterate(icu_73::Replaceable&, UTransPosition&, icu_73::UnicodeString const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::transliterate(icu_73::Replaceable&, UTransPosition&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::transliterate(icu_73::Replaceable&, UTransPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::finishTransliteration(icu_73::Replaceable&, UTransPosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::filteredTransliterate(icu_73::Replaceable&, UTransPosition&, signed char, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::filteredTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::setMaximumContextLength(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getDisplayName(icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getDisplayName(icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getFilter() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::orphanFilter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::createInverse(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::createInstance(icu_73::UnicodeString const&, UTransDirection, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::createInstance(icu_73::UnicodeString const&, UTransDirection, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::createBasicInstance(icu_73::UnicodeString const&, icu_73::UnicodeString const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::initializeRegistry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::createFromRules(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::toRules(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::countElements() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getElement(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getSourceSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::handleGetSourceSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getTargetSet(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::registerFactory(icu_73::UnicodeString const&, icu_73::Transliterator* (*)(icu_73::UnicodeString const&, icu_73::Transliterator::Token), icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_registerFactory(icu_73::UnicodeString const&, icu_73::Transliterator* (*)(icu_73::UnicodeString const&, icu_73::Transliterator::Token), icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_registerSpecialInverse(icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::registerInstance(icu_73::Transliterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_registerInstance(icu_73::Transliterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::registerAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_registerAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::unregister(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::countAvailableIDs()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getAvailableID(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getAvailableIDs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::countAvailableSources()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_countAvailableSources()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getAvailableSource(int, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_getAvailableSource(int, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::countAvailableTargets(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_countAvailableTargets(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getAvailableTarget(int, icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_getAvailableTarget(int, icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::countAvailableVariants(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_countAvailableVariants(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::getAvailableVariant(int, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Transliterator::_getAvailableVariant(int, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t _utrans_transliterator_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeSet const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeSet const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UVector*, icu_73::UnicodeSet const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UVector*, icu_73::UnicodeSet const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::TransliteratorAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::~TransliteratorAlias()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::~TransliteratorAlias()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::create(UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::isRuleBased() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorAlias::parse(icu_73::TransliteratorParser&, UParseError&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::TransliteratorSpec(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::reset()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::TransliteratorSpec(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::~TransliteratorSpec()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::~TransliteratorSpec()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::hasFallback() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::setupNext()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::get() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::isLocale() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorSpec::getBundle() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::TransliteratorEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::TransliteratorEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::~TransliteratorEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::~TransliteratorEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::adoptPrototype(icu_73::Transliterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorEntry::setFactory(icu_73::Transliterator* (*)(icu_73::UnicodeString const&, icu_73::Transliterator::Token), icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::TransliteratorRegistry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteEntry(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::TransliteratorRegistry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::~TransliteratorRegistry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::~TransliteratorRegistry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::get(icu_73::UnicodeString const&, icu_73::TransliteratorAlias*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::find(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::instantiateEntry(icu_73::UnicodeString const&, icu_73::TransliteratorEntry*, icu_73::TransliteratorAlias*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::reget(icu_73::UnicodeString const&, icu_73::TransliteratorParser&, icu_73::TransliteratorAlias*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::put(icu_73::Transliterator*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::registerEntry(icu_73::UnicodeString const&, icu_73::TransliteratorEntry*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::put(icu_73::UnicodeString const&, icu_73::Transliterator* (*)(icu_73::UnicodeString const&, icu_73::Transliterator::Token), icu_73::Transliterator::Token, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::put(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UTransDirection, signed char, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::put(icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::remove(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::removeSTV(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::countAvailableIDs() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::getAvailableID(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::getAvailableIDs() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::Enumeration(icu_73::TransliteratorRegistry const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::countAvailableSources() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::getAvailableSource(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::countAvailableTargets(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::getAvailableTarget(int, icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::countAvailableVariants(icu_73::UnicodeString const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::getAvailableVariant(int, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::Enumeration(icu_73::TransliteratorRegistry const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::~Enumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::~Enumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::~Enumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::Enumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::registerEntry(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::TransliteratorEntry*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::registerEntry(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::TransliteratorEntry*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::registerSTV(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::findInDynamicStore(icu_73::TransliteratorSpec const&, icu_73::TransliteratorSpec const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::findInStaticStore(icu_73::TransliteratorSpec const&, icu_73::TransliteratorSpec const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::findInBundle(icu_73::TransliteratorSpec const&, icu_73::TransliteratorSpec const&, icu_73::UnicodeString const&, UTransDirection)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorRegistry::find(icu_73::UnicodeString&, icu_73::UnicodeString&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::Specs::Specs(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::Specs::Specs(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::SingleID(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::SingleID(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::SingleID(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::SingleID(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::SingleID::createInstance()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::createBasicInstance(icu_73::UnicodeString const&, icu_73::UnicodeString const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::parseSingleID(icu_73::UnicodeString const&, int&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::parseFilterID(icu_73::UnicodeString const&, int&, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::specsToID(icu_73::TransliteratorIDParser::Specs const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::specsToSpecialInverse(icu_73::TransliteratorIDParser::Specs const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::parseFilterID(icu_73::UnicodeString const&, int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::parseGlobalFilter(icu_73::UnicodeString const&, int&, int, int&, icu_73::UnicodeString*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::parseCompoundID(icu_73::UnicodeString const&, int, icu_73::UnicodeString&, icu_73::UVector&, icu_73::UnicodeSet*&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_deleteSingleID(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::instantiateList(icu_73::UVector&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_deleteTransliteratorTrIDPars(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::IDtoSTV(icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::UnicodeString&, icu_73::UnicodeString&, signed char&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::STVtoID(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::registerSpecialInverse(icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::init(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TransliteratorIDParser::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::GMTOffsetField()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::GMTOffsetField()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::~GMTOffsetField()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::~GMTOffsetField()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::~GMTOffsetField()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::createText(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::createTimeField(icu_73::GMTOffsetField::FieldType, unsigned char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::isValid(icu_73::GMTOffsetField::FieldType, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GMTOffsetField::getTypeByLetter(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::TimeZoneFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::initGMTPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::expandOffsetPattern(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::truncateOffsetPattern(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::initGMTOffsetPatterns(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::toCodePoints(icu_73::UnicodeString const&, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::TimeZoneFormat(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::TimeZoneFormat(icu_73::TimeZoneFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::operator=(icu_73::TimeZoneFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::TimeZoneFormat(icu_73::TimeZoneFormat const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::~TimeZoneFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::~TimeZoneFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::~TimeZoneFormat()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::operator==(icu_73::Format const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getTimeZoneNames() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::adoptTimeZoneNames(icu_73::TimeZoneNames*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setTimeZoneNames(icu_73::TimeZoneNames const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setDefaultParseOptions(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getDefaultParseOptions() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getGMTPattern(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setGMTPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getGMTOffsetPattern(UTimeZoneFormatGMTOffsetPatternType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setGMTOffsetPattern(UTimeZoneFormatGMTOffsetPatternType, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetPattern(icu_73::UnicodeString const&, icu_73::TimeZoneFormat::OffsetFields, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::checkAbuttingHoursAndMinutes()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getGMTOffsetDigits(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setGMTOffsetDigits(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getGMTZeroFormat(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::setGMTZeroFormat(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::format(UTimeZoneFormatStyle, icu_73::TimeZone const&, double, icu_73::UnicodeString&, UTimeZoneFormatTimeType*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatGeneric(icu_73::TimeZone const&, int, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatSpecific(icu_73::TimeZone const&, UTimeZoneNameType, UTimeZoneNameType, double, icu_73::UnicodeString&, UTimeZoneFormatTimeType*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatExemplarLocation(icu_73::TimeZone const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetLocalizedGMT(int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetShortLocalizedGMT(int, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetISO8601Basic(int, signed char, signed char, signed char, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetISO8601Extended(int, signed char, signed char, signed char, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::format(icu_73::Formattable const&, icu_73::UnicodeString&, icu_73::FieldPosition&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parse(UTimeZoneFormatStyle, icu_73::UnicodeString const&, icu_73::ParsePosition&, UTimeZoneFormatTimeType*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parse(UTimeZoneFormatStyle, icu_73::UnicodeString const&, icu_73::ParsePosition&, int, UTimeZoneFormatTimeType*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetLocalizedGMT(icu_73::UnicodeString const&, icu_73::ParsePosition&, signed char, signed char*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::createTimeZoneForOffset(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetLocalizedGMT(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetShortLocalizedGMT(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetISO8601(icu_73::UnicodeString const&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetISO8601(icu_73::UnicodeString const&, icu_73::ParsePosition&, signed char, signed char*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getTimeType(UTimeZoneNameType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getTimeZoneID(icu_73::TimeZoneNames::MatchInfoCollection const*, int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getTZDBTimeZoneNames(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::getTimeZoneGenericNames(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseZoneID(icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseShortZoneID(icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseExemplarLocation(icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseObject(icu_73::UnicodeString const&, icu_73::Formattable&, icu_73::ParsePosition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetISO8601(int, signed char, signed char, signed char, signed char, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetLocalizedGMT(int, signed char, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::appendOffsetDigits(icu_73::UnicodeString&, int, unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseAsciiOffsetFields(icu_73::UnicodeString const&, icu_73::ParsePosition&, char16_t, icu_73::TimeZoneFormat::OffsetFields, icu_73::TimeZoneFormat::OffsetFields)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseAbuttingAsciiOffsetFields(icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::TimeZoneFormat::OffsetFields, icu_73::TimeZoneFormat::OffsetFields, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetLocalizedGMTPattern(icu_73::UnicodeString const&, int, signed char, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetDefaultLocalizedGMT(icu_73::UnicodeString const&, int, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetFields(icu_73::UnicodeString const&, int, signed char, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetFieldsWithPattern(icu_73::UnicodeString const&, int, icu_73::UVector*, signed char, int&, int&, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseOffsetFieldWithLocalizedDigits(icu_73::UnicodeString const&, int, unsigned char, unsigned char, unsigned short, unsigned short, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseAbuttingOffsetFields(icu_73::UnicodeString const&, int, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseSingleLocalizedDigit(icu_73::UnicodeString const&, int, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::parseDefaultOffsetFields(icu_73::UnicodeString const&, int, char16_t, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::formatOffsetWithAsciiDigits(int, char16_t, icu_73::TimeZoneFormat::OffsetFields, icu_73::TimeZoneFormat::OffsetFields, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneFormat::unquote(icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteGMTOffsetField(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::ZoneIdMatchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::ZoneIdMatchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::~ZoneIdMatchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::~ZoneIdMatchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::~ZoneIdMatchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::handleMatch(int, icu_73::CharacterNode const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::getID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZoneIdMatchHandler::getMatchLen()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tzfmt_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::TimeZoneGenericNameMatchInfo(icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::TimeZoneGenericNameMatchInfo(icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::~TimeZoneGenericNameMatchInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::~TimeZoneGenericNameMatchInfo()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::size() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::getGenericNameType(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::getMatchLength(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNameMatchInfo::getTimeZoneID(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::GNameSearchHandler(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::GNameSearchHandler(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::~GNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::~GNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::~GNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::handleMatch(int, icu_73::CharacterNode const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GNameSearchHandler::getMatches(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::TZGNCore(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteGNameInfo(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::initialize(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::TZGNCore(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::~TZGNCore()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::~TZGNCore()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::~TZGNCore()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::hashPartialLocationKey(UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::comparePartialLocationKey(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::loadStrings(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::getDisplayName(icu_73::TimeZone const&, UTimeZoneGenericNameType, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::getGenericLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::formatGenericNonLocationName(icu_73::TimeZone const&, UTimeZoneGenericNameType, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::getGenericLocationName(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::caseCompare(icu_73::UnicodeString const&, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::getPartialLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::getPartialLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString const&, signed char, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::findBestMatch(icu_73::UnicodeString const&, int, unsigned int, icu_73::UnicodeString&, UTimeZoneFormatTimeType&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::findTimeZoneNames(icu_73::UnicodeString const&, int, unsigned int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZGNCore::findLocal(icu_73::UnicodeString const&, int, unsigned int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::TimeZoneGenericNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::TimeZoneGenericNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::~TimeZoneGenericNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::~TimeZoneGenericNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::~TimeZoneGenericNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteTZGNCoreRef(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tzgnCore_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::operator==(icu_73::TimeZoneGenericNames const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::getDisplayName(icu_73::TimeZone const&, UTimeZoneGenericNameType, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::getGenericLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneGenericNames::findBestMatch(icu_73::UnicodeString const&, int, unsigned int, icu_73::UnicodeString&, UTimeZoneFormatTimeType&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneGenericNames::operator!=(icu_73::TimeZoneGenericNames const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::TimeZoneNamesDelegate()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::TimeZoneNamesDelegate()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::TimeZoneNamesDelegate(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteTimeZoneNamesCacheEntry(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::timeZoneNames_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::~TimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::TimeZoneNamesDelegate(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::~TimeZoneNamesDelegate()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::~TimeZoneNamesDelegate()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::~TimeZoneNamesDelegate()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::operator==(icu_73::TimeZoneNames const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getAvailableMetaZoneIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getAvailableMetaZoneIDs(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getMetaZoneID(icu_73::UnicodeString const&, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getReferenceZoneID(icu_73::UnicodeString const&, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getMetaZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getTimeZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getExemplarLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::loadAllDisplayNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::getDisplayNames(icu_73::UnicodeString const&, UTimeZoneNameType const*, int, double, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::find(icu_73::UnicodeString const&, int, unsigned int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::~TimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::~TimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::createTZDBInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::getExemplarLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::getDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::loadAllDisplayNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::getDisplayNames(icu_73::UnicodeString const&, UTimeZoneNameType const*, int, double, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::MatchInfoCollection()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::MatchInfoCollection()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::~MatchInfoCollection()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::addZone(UTimeZoneNameType, int, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::matches(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::addMetaZone(UTimeZoneNameType, int, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::size() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::getNameTypeAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::getMatchLengthAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::getTimeZoneIDAt(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneNames::MatchInfoCollection::getMetaZoneIDAt(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteMatchInfo(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesDelegate::operator!=(icu_73::TimeZoneNames const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MatchInfo::MatchInfo(UTimeZoneNameType, int, icu_73::UnicodeString const*, icu_73::UnicodeString const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::MatchInfo>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharacterNode::clear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharacterNode::deleteValues(void (*)(void*))",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharacterNode::addValue(void*, void (*)(void*), UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TextTrieMapSearchResultHandler::~TextTrieMapSearchResultHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TextTrieMapSearchResultHandler::~TextTrieMapSearchResultHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TextTrieMapSearchResultHandler::~TextTrieMapSearchResultHandler()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::TextTrieMap(signed char, void (*)(void*))",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::TextTrieMap(signed char, void (*)(void*))",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::~TextTrieMap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::~TextTrieMap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::~TextTrieMap()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::isEmpty() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::put(icu_73::UnicodeString const&, void*, icu_73::ZNStringPool&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::get(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::put(char16_t const*, void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::putImpl(icu_73::UnicodeString const&, void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::addChildNode(icu_73::CharacterNode*, char16_t, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::growNodes()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::getChildNode(icu_73::CharacterNode*, char16_t) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::buildTrie(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::search(icu_73::UnicodeString const&, int, icu_73::TextTrieMapSearchResultHandler*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TextTrieMap::search(icu_73::CharacterNode*, icu_73::UnicodeString const&, int, int, icu_73::TextTrieMapSearchResultHandler*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNStringPoolChunk::ZNStringPoolChunk()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNStringPoolChunk::ZNStringPoolChunk()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::ZNStringPool(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::ZNStringPool(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::~ZNStringPool()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::~ZNStringPool()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::get(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::adopt(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ZNStringPool::freeze()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::~ZNamesLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::~ZNamesLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::~ZNamesLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration(icu_73::UVector const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration(icu_73::UVector const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration(icu_73::LocalPointer<icu_73::UVector>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::MetaZoneIDsEnumeration(icu_73::LocalPointer<icu_73::UVector>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::~MetaZoneIDsEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::~MetaZoneIDsEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MetaZoneIDsEnumeration::~MetaZoneIDsEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::ZNameSearchHandler(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::ZNameSearchHandler(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::~ZNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::~ZNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::~ZNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::handleMatch(int, icu_73::CharacterNode const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNameSearchHandler::getMatches(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::TimeZoneNamesImpl(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteZNameInfo(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::initialize(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::TimeZoneNamesImpl(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteZNames(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::loadStrings(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::loadTimeZoneNames(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::loadMetaZoneNames(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::~TimeZoneNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::~TimeZoneNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::~TimeZoneNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::operator==(icu_73::TimeZoneNames const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getAvailableMetaZoneIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::_getAvailableMetaZoneIDs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getAvailableMetaZoneIDs(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::_getAvailableMetaZoneIDs(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getMetaZoneID(icu_73::UnicodeString const&, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::_getMetaZoneID(icu_73::UnicodeString const&, double, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getReferenceZoneID(icu_73::UnicodeString const&, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::_getReferenceZoneID(icu_73::UnicodeString const&, char const*, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getMetaZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getTimeZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getExemplarLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::loadMetaZone(UResourceBundle const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::createMetaZoneAndPutInCache(UHashtable*, char16_t const**, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::loadTimeZone(UResourceBundle const*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::createTimeZoneAndPutInCache(UHashtable*, char16_t const**, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::find(icu_73::UnicodeString const&, int, unsigned int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::doFind(icu_73::ZNameSearchHandler&, icu_73::UnicodeString const&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::addAllNamesIntoTrie(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::internalLoadAllDisplayNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::~ZoneStringsLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::~ZoneStringsLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::~ZoneStringsLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::loadAllDisplayNames(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getDisplayNames(icu_73::UnicodeString const&, UTimeZoneNameType const*, int, double, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::load(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::getDefaultExemplarLocationName(icu_73::UnicodeString const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::TZDBNames(char16_t const**, char**, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::TZDBNames(char16_t const**, char**, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::~TZDBNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::~TZDBNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::~TZDBNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::createInstance(UResourceBundle*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::getName(UTimeZoneNameType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNames::getParseRegions(int&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::TZDBNameSearchHandler(unsigned int, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::TZDBNameSearchHandler(unsigned int, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::~TZDBNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::~TZDBNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::~TZDBNameSearchHandler()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::handleMatch(int, icu_73::CharacterNode const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBNameSearchHandler::getMatches(int&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::TZDBTimeZoneNames(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::TZDBTimeZoneNames(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::~TZDBTimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::~TZDBTimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::~TZDBTimeZoneNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::operator==(icu_73::TimeZoneNames const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getAvailableMetaZoneIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getAvailableMetaZoneIDs(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getMetaZoneID(icu_73::UnicodeString const&, double, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getReferenceZoneID(icu_73::UnicodeString const&, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getMetaZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getMetaZoneNames(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::getTimeZoneDisplayName(icu_73::UnicodeString const&, UTimeZoneNameType, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TZDBTimeZoneNames::find(icu_73::UnicodeString const&, int, unsigned int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::mergeTimeZoneKey(icu_73::UnicodeString const&, char*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::~ZNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::getTZNameTypeIndex(UTimeZoneNameType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::addNamesIntoTrie(char16_t const*, char16_t const*, icu_73::TextTrieMap&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::ZoneStringsLoader(icu_73::TimeZoneNamesImpl&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteZNamesLoader(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::isMetaZone(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::tzIDFromKey(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteTZDBNameInfo(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::tzdbTimeZoneNames_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteTZDBNames(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::setNameIfEmpty(char const*, icu_73::ResourceValue const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ZNames::ZNamesLoader::nameTypeFromKey(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::consumeNamesTable(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::TimeZoneNamesImpl::ZoneStringsLoader::createKey(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::TimeZoneRule(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::TimeZoneRule(icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::~TimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::~TimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::~TimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::operator=(icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::operator==(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::operator!=(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::getName(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::getRawOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::getDSTSavings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneRule::isEquivalentTo(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::InitialTimeZoneRule(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::InitialTimeZoneRule(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::InitialTimeZoneRule(icu_73::InitialTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::InitialTimeZoneRule(icu_73::InitialTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::~InitialTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::~InitialTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::~InitialTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::operator=(icu_73::InitialTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::operator==(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::operator!=(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::isEquivalentTo(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getFirstStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getFinalStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getNextStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::InitialTimeZoneRule::getPreviousStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::UnicodeString const&, int, int, icu_73::DateTimeRule const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::UnicodeString const&, int, int, icu_73::DateTimeRule const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::UnicodeString const&, int, int, icu_73::DateTimeRule*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::UnicodeString const&, int, int, icu_73::DateTimeRule*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::AnnualTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::AnnualTimeZoneRule(icu_73::AnnualTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::~AnnualTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::~AnnualTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::~AnnualTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::operator=(icu_73::AnnualTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::operator==(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::operator!=(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getRule() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getStartYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getEndYear() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getStartInYear(int, int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::isEquivalentTo(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getFirstStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getFinalStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getNextStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::AnnualTimeZoneRule::getPreviousStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule(icu_73::UnicodeString const&, int, int, double const*, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::initStartTimes(double const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule(icu_73::UnicodeString const&, int, int, double const*, int, icu_73::DateTimeRule::TimeRuleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule(icu_73::TimeArrayTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::TimeArrayTimeZoneRule(icu_73::TimeArrayTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::~TimeArrayTimeZoneRule()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::operator=(icu_73::TimeArrayTimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::operator==(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::operator!=(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getTimeType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getStartTimeAt(int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::countStartTimes() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::isEquivalentTo(icu_73::TimeZoneRule const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getFirstStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getUTC(double, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getFinalStart(int, int, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getNextStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeArrayTimeZoneRule::getPreviousStart(double, int, int, signed char, double&) const",
    "type": "CPP"
  },
  {
    "name": "t compareDates(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition(double, icu_73::TimeZoneRule const&, icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition(double, icu_73::TimeZoneRule const&, icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition(icu_73::TimeZoneTransition const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::TimeZoneTransition(icu_73::TimeZoneTransition const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::~TimeZoneTransition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::~TimeZoneTransition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::~TimeZoneTransition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::operator=(icu_73::TimeZoneTransition const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::setFrom(icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::setTo(icu_73::TimeZoneRule const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::operator==(icu_73::TimeZoneTransition const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::operator!=(icu_73::TimeZoneTransition const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::setTime(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::adoptFrom(icu_73::TimeZoneRule*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::adoptTo(icu_73::TimeZoneRule*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::getTime() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::getTo() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::TimeZoneTransition::getFrom() const",
    "type": "CPP"
  },
  {
    "name": "T _ucal_openTimeZoneIDEnumeration_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_openTimeZones_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_openCountryTimeZones_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getDefaultTimeZone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setDefaultTimeZone_73",
    "type": "CPP"
  },
  {
    "name": "t _createTimeZone(char16_t const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getHostTimeZone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getDSTSavings_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getNow_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setTimeZone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTimeZoneID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTimeZoneDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_inDaylightTime_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setGregorianChange_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getGregorianChange_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getMillis_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setMillis_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setDate_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_setDateTime_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_equivalentTo_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_add_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_roll_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_get_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_set_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_isSet_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_clearField_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_clear_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getLimit_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTZDataVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getCanonicalTimeZoneID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getDayOfWeekType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getWeekendTransition_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_isWeekend_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getFieldDifference_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getKeywordValuesForLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTimeZoneTransitionDate_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getWindowsTimeZoneID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTimeZoneIDForWindowsID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucal_getTimeZoneOffsetFromLocal_73",
    "type": "CPP"
  },
  {
    "name": "t _ucln_i18n_registerCleanup_73",
    "type": "CPP"
  },
  {
    "name": "t i18n_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _ucol_openBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_cloneBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_safeClone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_mergeSortkeys_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getSortKey_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_nextSortKeyPart_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getBound_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setMaxVariable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getMaxVariable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setVariableTop_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getVariableTop_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_restoreVariableTop_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setStrength_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getStrength_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getReorderCodes_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setReorderCodes_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getEquivalentReorderCodes_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_strcollIter_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_strcoll_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_strcollUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_greater_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_greaterOrEqual_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_equal_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getUCAVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getRules_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getRulesEx_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getTailoredSet_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_equals_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadRootRules(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ucol_res_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::appendRootRules(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadRules(char const*, char const*, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::createObject(void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::createCacheEntry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadTailoring(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::CollationLoader(icu_73::CollationCacheEntry const*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::getCacheEntry(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::~CollationLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::CollationLoader(icu_73::CollationCacheEntry const*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::~CollationLoader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadFromLocale(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadFromBundle(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadFromCollations(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::loadFromData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::makeCacheEntryFromRoot(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CollationLoader::makeCacheEntry(icu_73::Locale const&, icu_73::CollationCacheEntry const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::UnifiedCache::get<icu_73::CollationCacheEntry>(icu_73::CacheKey<icu_73::CollationCacheEntry> const&, void const*, icu_73::CollationCacheEntry const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "T _ucol_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_openAvailableLocales_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getKeywords_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getKeywordValues_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getKeywordValuesForLocale_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::KeywordsSink::~KeywordsSink()",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getFunctionalEquivalent_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::KeywordsSink::~KeywordsSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::KeywordsSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::LocaleCacheKey(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::~LocaleCacheKey()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::writeDescription(char*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheKey<icu_73::CollationCacheEntry>::equals(icu_73::CacheKeyBase const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleCacheKey<icu_73::CollationCacheEntry>::LocaleCacheKey(icu_73::LocaleCacheKey<icu_73::CollationCacheEntry> const&)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_prepareShortStringOpen_73",
    "type": "CPP"
  },
  {
    "name": "t ucol_sit_readSpecs(CollatorSpec*, char const*, UParseError*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucol_sit_calculateWholeLocale(CollatorSpec*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t CollatorSpec::~CollatorSpec()",
    "type": "CPP"
  },
  {
    "name": "T _ucol_openFromShortString_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getShortDefinitionString_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_normalizeShortDefinitionString_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getContractions_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getContractionsAndExpansions_73",
    "type": "CPP"
  },
  {
    "name": "t _processCollatorOption(CollatorSpec*, unsigned int, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _processVariableTop(CollatorSpec*, unsigned int, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _processLocaleElement(CollatorSpec*, unsigned int, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _processRFC3066Locale(CollatorSpec*, unsigned int, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t readHexCodeUnit(char const**, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::RCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::RCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::~RCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::~RCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::isEmpty() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::put(unsigned int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RCEBuffer::get()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::PCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::PCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::~PCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::~PCEBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::reset()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::isEmpty() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::put(unsigned long long, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PCEBuffer::get()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::UCollationPCE(UCollationElements*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::init(UCollationElements*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::UCollationPCE(UCollationElements*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::UCollationPCE(icu_73::CollationElementIterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::init(icu_73::CollationElementIterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::UCollationPCE(icu_73::CollationElementIterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::init(icu_73::Collator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::~UCollationPCE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::~UCollationPCE()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::processCE(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_tertiaryOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_secondaryOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_primaryOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_openElements_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_closeElements_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_reset_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_next_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::nextProcessed(int*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_previous_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCollationPCE::previousProcessed(int*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getMaxExpansion_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setText_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_getOffset_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_setOffset_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_setText_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getConfidence_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getLanguage_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_detect_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_setDeclaredEncoding_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_detectAll_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_isInputFilterEnabled_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_enableInputFilter_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_setDetectableCharset_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getAllDetectableCharsets_73",
    "type": "CPP"
  },
  {
    "name": "T _ucsdet_getDetectableCharsets_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_toCalendarDateField_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_registerOpener_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_unregisterOpener_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_open_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_close_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_format_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_formatCalendar_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_formatForFields_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_formatCalendarForFields_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_parse_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_parseCalendar_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_isLenient_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setLenient_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getBooleanAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setBooleanAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getCalendar_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setCalendar_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getNumberFormatForField_73",
    "type": "CPP"
  },
  {
    "name": "t verifyIsSimpleDateFormat(void* const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udat_getNumberFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_adoptNumberFormatForFields_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setNumberFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_adoptNumberFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_get2DigitYearStart_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_set2DigitYearStart_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_toPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_applyPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getSymbols_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_countSymbols_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setSymbols_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_setContext_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_getContext_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_toPatternRelativeDate_73",
    "type": "CPP"
  },
  {
    "name": "t verifyIsRelativeDateFormat(void* const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udat_toPatternRelativeTime_73",
    "type": "CPP"
  },
  {
    "name": "T _udat_applyPatternRelative_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DateFormatSymbolsSingleSetter::setSymbol(icu_73::UnicodeString*, int, int, char16_t const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedDateIntervalImpl::UFormattedDateIntervalImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedDateIntervalImpl::UFormattedDateIntervalImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedDateIntervalImpl::~UFormattedDateIntervalImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedDateIntervalImpl::~UFormattedDateIntervalImpl()",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_openResult_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_resultAsValue_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_closeResult_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_open_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_close_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_format_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_formatToResult_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_formatCalendarToResult_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_setContext_73",
    "type": "CPP"
  },
  {
    "name": "T _udtitvfmt_getContext_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_open_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_openEmpty_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_close_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getBestPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getBestPatternWithOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getSkeleton_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getBaseSkeleton_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_addPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_setAppendItemFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getAppendItemFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_setAppendItemName_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getAppendItemName_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getFieldDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_setDateTimeFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getDateTimeFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getDateTimeFormatForStyle_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_setDateTimeFormatForStyle_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_setDecimal_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getDecimal_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_replaceFieldTypes_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_replaceFieldTypesWithOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_openSkeletons_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_openBaseSkeletons_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getPatternForSkeleton_73",
    "type": "CPP"
  },
  {
    "name": "T _udatpg_getDefaultHourCycle_73",
    "type": "CPP"
  },
  {
    "name": "T _ufieldpositer_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ufieldpositer_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ufieldpositer_next_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::~UIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::~UIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::~UIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::handleGetTrailSurrogate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UIterCollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::~FCDUIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::~FCDUIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::~FCDUIterCollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::nextSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::switchToForward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::handleGetTrailSurrogate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::previousSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::switchToBackward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUIterCollationIterator::normalize(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_openForType_73",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_close_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedListImpl::UFormattedListImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedListImpl::UFormattedListImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedListImpl::~UFormattedListImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UFormattedListImpl::~UFormattedListImpl()",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_openResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_resultAsValue_73",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_closeResult_73",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_format_73",
    "type": "CPP"
  },
  {
    "name": "t getUnicodeStrings(char16_t const* const*, int const*, int, icu_73::UnicodeString*, icu_73::LocalArray<icu_73::UnicodeString>&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ulistfmt_formatStringsToResult_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString>::adoptInsteadAndCheckErrorCode(icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_setNoSubstitute_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getNoSubstitute_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getExemplarSet_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getDelimiter_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getMeasurementSystem_73",
    "type": "CPP"
  },
  {
    "name": "t measurementTypeBundleForLocale(char const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getPaperSize_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getCLDRVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getLocaleDisplayPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocdata_getLocaleSeparator_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessageFormatAdapter::getArgTypeList(icu_73::MessageFormat const&, int&)",
    "type": "CPP"
  },
  {
    "name": "T _u_formatMessage_73",
    "type": "CPP"
  },
  {
    "name": "T _u_vformatMessage_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_open_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_vformat_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_close_73",
    "type": "CPP"
  },
  {
    "name": "T _u_formatMessageWithError_73",
    "type": "CPP"
  },
  {
    "name": "T _u_vformatMessageWithError_73",
    "type": "CPP"
  },
  {
    "name": "T _u_parseMessage_73",
    "type": "CPP"
  },
  {
    "name": "T _u_vparseMessage_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_vparse_73",
    "type": "CPP"
  },
  {
    "name": "T _u_parseMessageWithError_73",
    "type": "CPP"
  },
  {
    "name": "T _u_vparseMessageWithError_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_setLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_getLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_applyPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_toPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_format_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_parse_73",
    "type": "CPP"
  },
  {
    "name": "T _umsg_autoQuoteApostrophe_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnescapeTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::registerIDs()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createUnicode(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createJava(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createC(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createXML(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createXML10(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createPerl(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_createAny(icu_73::UnicodeString const&, icu_73::Transliterator::Token)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::UnescapeTransliterator(icu_73::UnicodeString const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::copySpec(char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::UnescapeTransliterator(icu_73::UnicodeString const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::UnescapeTransliterator(icu_73::UnescapeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::UnescapeTransliterator(icu_73::UnescapeTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::~UnescapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::~UnescapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::~UnescapeTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnescapeTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeNameTransliterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::UnicodeNameTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::UnicodeNameTransliterator(icu_73::UnicodeFilter*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::~UnicodeNameTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::~UnicodeNameTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::~UnicodeNameTransliterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::UnicodeNameTransliterator(icu_73::UnicodeNameTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::UnicodeNameTransliterator(icu_73::UnicodeNameTransliterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeNameTransliterator::handleTransliterate(icu_73::Replaceable&, UTransPosition&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferenceMetadata::UnitPreferenceMetadata(icu_73::StringPiece, icu_73::StringPiece, icu_73::StringPiece, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferenceMetadata::UnitPreferenceMetadata(icu_73::StringPiece, icu_73::StringPiece, icu_73::StringPiece, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferenceMetadata::compareTo(icu_73::units::UnitPreferenceMetadata const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferenceMetadata::compareTo(icu_73::units::UnitPreferenceMetadata const&, bool*, bool*, bool*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::getAllConversionRates(icu_73::MaybeStackVector<icu_73::units::ConversionRateInfo, 8>&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::ConversionRateDataSink::~ConversionRateDataSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ConversionRates::extractConversionInfo(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferences::UnitPreferences(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::UnitPreferencesSink::~UnitPreferencesSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferences::UnitPreferences(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::getKeyWordValue(icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitPreferences::getPreferencesFor(icu_73::StringPiece, icu_73::StringPiece, icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::ConversionRateDataSink::~ConversionRateDataSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::ConversionRateDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConversionRateInfo* icu_73::MemoryPool<icu_73::units::ConversionRateInfo, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::UnitPreferencesSink::~UnitPreferencesSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::UnitPreferencesSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreferenceMetadata* icu_73::MemoryPool<icu_73::units::UnitPreferenceMetadata, 8>::create<char const*&, char const*&, char const*&, int&, int&, UErrorCode&>(char const*&, char const*&, char const*&, int&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreference* icu_73::MemoryPool<icu_73::units::UnitPreference, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::units::UnitPreference, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::units::UnitPreference*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::units::UnitPreferenceMetadata, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreferenceMetadata::~UnitPreferenceMetadata()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::units::UnitPreferenceMetadata*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::binarySearch(icu_73::MaybeStackVector<icu_73::units::UnitPreferenceMetadata, 8> const*, icu_73::units::UnitPreferenceMetadata const&, bool*, bool*, bool*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreference* icu_73::MemoryPool<icu_73::units::UnitPreference, 8>::create<icu_73::units::UnitPreference&>(icu_73::units::UnitPreference&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreference::UnitPreference(icu_73::units::UnitPreference const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitPreference* icu_73::MemoryPool<icu_73::units::UnitPreference, 8>::create<icu_73::units::UnitPreference const&>(icu_73::units::UnitPreference const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::init(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::ComplexUnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::greaterThanOrEqual(double, double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::convert(double, icu_73::number::impl::RoundingImpl*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long long, 5>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::ComplexUnitsConverter::applyRounder(icu_73::MaybeStackArray<long long, 5>&, double&, icu_73::number::impl::RoundingImpl*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::Measure*, 4>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<is_move_constructible<icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>>::value && is_move_assignable<icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>>::value, void>::type std::__1::swap[abi:v15006]<icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>>(icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>&, icu_73::MaybeStackArray<icu_73::MeasureUnitImplWithIndex*, 8>&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ComplexUnitsConverter::init(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)::$_0::__invoke(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitsConverter* icu_73::MemoryPool<icu_73::units::UnitsConverter, 8>::create<icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl&, icu_73::units::ConversionRates const&, UErrorCode&>(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::UnitsConverter* icu_73::MemoryPool<icu_73::units::UnitsConverter, 8>::create<icu_73::MeasureUnitImpl&, icu_73::MeasureUnitImpl&, icu_73::units::ConversionRates const&, UErrorCode&>(icu_73::MeasureUnitImpl&, icu_73::MeasureUnitImpl&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long long, 5>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::Measure*, 4>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Measure* icu_73::MemoryPool<icu_73::Measure, 8>::create<icu_73::Measure&>(icu_73::Measure&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::Factor::multiplyBy(icu_73::units::Factor const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::Factor::divideBy(icu_73::units::Factor const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::Factor::power(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::Factor::applyPrefix(icu_73::UMeasurePrefix)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::Factor::substituteConstants()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::addSingleFactorConstant(icu_73::StringPiece, int, icu_73::units::Signum, icu_73::units::Factor&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::strToDouble(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::extractCompoundBaseUnit(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::extractConvertibility(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::mergeUnitsAndDimensions(icu_73::MaybeStackVector<icu_73::units::(anonymous namespace)::UnitIndexAndDimension, 8>&, icu_73::MeasureUnitImpl const&, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackVector<icu_73::units::(anonymous namespace)::UnitIndexAndDimension, 8>::~MaybeStackVector()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::UnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::init(icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConversionRate::~ConversionRate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::UnitsConverter(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::UnitsConverter(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::UnitsConverter(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::loadConversionRate(icu_73::units::ConversionRate&, icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::Convertibility, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::compareTwoUnits(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::loadCompoundFactor(icu_73::MeasureUnitImpl const&, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::convert(double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::convertInverse(double) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsConverter::getConversionInfo() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConversionRate::ConversionRate(icu_73::MeasureUnitImpl&&, icu_73::MeasureUnitImpl&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::(anonymous namespace)::addFactorElement(icu_73::units::Factor&, icu_73::StringPiece, icu_73::units::Signum, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::parseSkeletonToPrecision(icu_73::UnicodeString, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::UnitsRouter(icu_73::StringPiece, icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::init(icu_73::MeasureUnit const&, icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::UnitsRouter(icu_73::StringPiece, icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::UnitsRouter(icu_73::MeasureUnit const&, icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::UnitsRouter(icu_73::MeasureUnit const&, icu_73::Locale const&, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::route(double, icu_73::number::impl::RoundingImpl*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::units::UnitsRouter::getOutputUnits() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::RouteResult::RouteResult(icu_73::MaybeStackVector<icu_73::Measure, 8>, icu_73::MeasureUnitImpl)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::Measure, 8>::MemoryPool(icu_73::MemoryPool<icu_73::Measure, 8>&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MeasureUnit* icu_73::MemoryPool<icu_73::MeasureUnit, 8>::create<icu_73::MeasureUnit&>(icu_73::MeasureUnit&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConverterPreference* icu_73::MemoryPool<icu_73::units::ConverterPreference, 8>::create<icu_73::MeasureUnitImpl&, icu_73::MeasureUnitImpl&, double const&, icu_73::UnicodeString&, icu_73::units::ConversionRates&, UErrorCode&>(icu_73::MeasureUnitImpl&, icu_73::MeasureUnitImpl&, double const&, icu_73::UnicodeString&, icu_73::units::ConversionRates&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::units::ConverterPreference::ConverterPreference(icu_73::MeasureUnitImpl const&, icu_73::MeasureUnitImpl const&, double, icu_73::UnicodeString, icu_73::units::ConversionRates const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _unum_open_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_close_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_format_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatInt64_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatDouble_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatDoubleForFields_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatDecimal_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatDoubleCurrency_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_parse_73",
    "type": "CPP"
  },
  {
    "name": "t parseRes(icu_73::Formattable&, void* const*, char16_t const*, int, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _unum_parseInt64_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_parseDouble_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_parseDecimal_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_parseDoubleCurrency_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_hasAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_setAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getDoubleAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_setDoubleAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getTextAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_setTextAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_toPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getSymbol_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_setSymbol_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_applyPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_setContext_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_getContext_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_parseToUFormattable_73",
    "type": "CPP"
  },
  {
    "name": "T _unum_formatUFormattable_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_open_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_openByName_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_close_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_openAvailableNames_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_getRadix_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_isAlgorithmic_73",
    "type": "CPP"
  },
  {
    "name": "T _unumsys_getDescription_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_openForType_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_select_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_selectFormatted_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_selectForRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_selectWithFormat_73",
    "type": "CPP"
  },
  {
    "name": "T _uplrules_getKeywords_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegularExpression::RegularExpression()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegularExpression::RegularExpression()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegularExpression::~RegularExpression()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegularExpression::~RegularExpression()",
    "type": "CPP"
  },
  {
    "name": "T _uregex_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_openUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_pattern_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_patternUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_flags_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_refreshUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_matches_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_matches64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_lookingAt_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_lookingAt64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_find_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_find64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_findNext_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_groupCount_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_groupNumberFromName_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_groupNumberFromCName_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_group_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_groupUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_start_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_start64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_end_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_end64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_reset_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_reset64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setRegion_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setRegion64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setRegionAndStart_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_regionStart_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_regionStart64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_regionEnd_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_regionEnd64_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_hasTransparentBounds_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_useTransparentBounds_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_hasAnchoringBounds_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_useAnchoringBounds_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_hitEnd_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_requireEnd_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setTimeLimit_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getTimeLimit_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setStackLimit_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getStackLimit_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setMatchCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getMatchCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_setFindProgressCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_getFindProgressCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_replaceAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_appendReplacement_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_appendTail_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_replaceAllUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_replaceFirst_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_replaceFirstUText_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexCImpl::appendReplacement(icu_73::RegularExpression*, char16_t const*, int, char16_t**, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uregex_appendReplacementUText_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexCImpl::appendTail(icu_73::RegularExpression*, char16_t**, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uregex_appendTailUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_split_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RegexCImpl::split(icu_73::RegularExpression*, char16_t*, int, int*, char16_t**, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uregex_splitUText_73",
    "type": "CPP"
  },
  {
    "name": "T _uregex_openC_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getRegionFromCode_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getRegionFromNumericCode_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_areEqual_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getContainingRegion_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getContainingRegionOfType_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getContainedRegions_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getContainedRegionsOfType_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_contains_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getPreferredValues_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getRegionCode_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getNumericCode_73",
    "type": "CPP"
  },
  {
    "name": "T _uregion_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_open_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_openFromCollator_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_close_73",
    "type": "CPP"
  },
  {
    "name": "t initialize(UStringSearch*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setOffset_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getOffset_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getAttribute_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getMatchedStart_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getMatchedText_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getMatchedLength_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setBreakIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getBreakIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setText_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getText_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setCollator_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getCollator_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_setPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_getPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_first_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_next_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_following_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_last_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_previous_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_preceding_73",
    "type": "CPP"
  },
  {
    "name": "t setMatchNotFound(UStringSearch*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _usearch_handleNextCanonical_73",
    "type": "CPP"
  },
  {
    "name": "t _usearch_handleNextExact_73",
    "type": "CPP"
  },
  {
    "name": "t _usearch_handlePreviousCanonical_73",
    "type": "CPP"
  },
  {
    "name": "t _usearch_handlePreviousExact_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_reset_73",
    "type": "CPP"
  },
  {
    "name": "T _usearch_search_73",
    "type": "CPP"
  },
  {
    "name": "t initializePatternPCETable(UStringSearch*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CEIBuffer::CEIBuffer(UStringSearch*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CEIBuffer::get(int)",
    "type": "CPP"
  },
  {
    "name": "t compareCE64s(long long, long long, short)",
    "type": "CPP"
  },
  {
    "name": "t isBreakBoundary(UStringSearch*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::codePointAt(USearch const&, int)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::codePointBefore(USearch const&, int)",
    "type": "CPP"
  },
  {
    "name": "t nextBoundaryAfter(UStringSearch*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t checkIdentical(UStringSearch const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CEIBuffer::~CEIBuffer()",
    "type": "CPP"
  },
  {
    "name": "T _usearch_searchBackwards_73",
    "type": "CPP"
  },
  {
    "name": "t getBreakIterator(UStringSearch*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::CEIBuffer::getPrevious(int)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::initTextProcessedIter(UStringSearch*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t usearch_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::nextFCD16(char16_t const*&, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "t _uspoof_internalInitStatics_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::initializeStatics(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_openFromSerialized_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_setChecks_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getChecks_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_setRestrictionLevel_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getRestrictionLevel_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_setAllowedLocales_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getAllowedLocales_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getAllowedChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getAllowedUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_setAllowedChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_setAllowedUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_check_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_check2_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_check2UnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_checkUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_check2UTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_areConfusable_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_areConfusableUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_areConfusableUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T uspoof_getSkeletonUnicodeString_73(USpoofChecker const*, unsigned int, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_checkUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::checkImpl(icu_73::SpoofImpl const*, icu_73::UnicodeString const&, icu_73::CheckResult*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getSkeleton_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getSkeletonUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_serialize_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getInclusionSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getRecommendedSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getInclusionUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getRecommendedUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_openCheckResult_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_closeCheckResult_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getCheckResultChecks_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getCheckResultRestrictionLevel_73",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_getCheckResultNumerics_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uspoof_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_openFromSource_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUString::SPUString(icu_73::LocalPointer<icu_73::UnicodeString>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUString::SPUString(icu_73::LocalPointer<icu_73::UnicodeString>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUString::~SPUString()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUString::~SPUString()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::SPUStringPool(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::SPUStringPool(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::~SPUStringPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::~SPUStringPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::size()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::getByIndex(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::sort(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t SPUStringCompare(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::addString(icu_73::UnicodeString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::ConfusabledataBuilder(icu_73::SpoofImpl*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::ConfusabledataBuilder(icu_73::SpoofImpl*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::~ConfusabledataBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::~ConfusabledataBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::buildConfusableData(icu_73::SpoofImpl*, char const*, int, int*, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::build(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConfusabledataBuilder::outputData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SPUStringPool::SPUStringPool(UErrorCode&)::$_0::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::SPUString>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(icu_73::SpoofData*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::construct(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(icu_73::SpoofData*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::getDefault(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(icu_73::SpoofImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::addReference()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::SpoofImpl(icu_73::SpoofImpl const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::~SpoofImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::removeReference()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::~SpoofImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::~SpoofImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::asUSpoofChecker()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::validateThis(USpoofChecker const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::validateDataVersion(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::validateThis(USpoofChecker*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::setAllowedLocales(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::addScriptChars(char const*, icu_73::UnicodeSet*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getAllowedLocales(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getAugmentedScriptSet(int, icu_73::ScriptSet&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getResolvedScriptSet(icu_73::UnicodeString const&, icu_73::ScriptSet&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getResolvedScriptSetWithout(icu_73::UnicodeString const&, UScriptCode, icu_73::ScriptSet&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getNumerics(icu_73::UnicodeString const&, icu_73::UnicodeSet&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::getRestrictionLevel(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::findHiddenOverlay(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::isIllegalCombiningDotLeadCharacter(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::confusableLookup(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofImpl::ScanHex(char16_t const*, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::CheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::clear()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::CheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::asUSpoofCheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::validateThis(USpoofCheckResult const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::validateThis(USpoofCheckResult*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::toCombinedBitmask(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::~CheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::~CheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CheckResult::~CheckResult()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::reset()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::initPtrs(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(void const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(void const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::SpoofData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::~SpoofData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::~SpoofData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::reserveSpace(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::serialize(void*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::size() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::length() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::codePointAt(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SpoofData::appendValueTo(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uspoof_swap_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::spoofDataIsAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uspoof_cleanupDefaultData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::UTF16CollationIterator(icu_73::UTF16CollationIterator const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::UTF16CollationIterator(icu_73::UTF16CollationIterator const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::~UTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::~UTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::~UTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::operator==(icu_73::CollationIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::handleGetTrailSurrogate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::foundNULTerminator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF16CollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::FCDUTF16CollationIterator(icu_73::FCDUTF16CollationIterator const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::FCDUTF16CollationIterator(icu_73::FCDUTF16CollationIterator const&, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::~FCDUTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::~FCDUTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::~FCDUTF16CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::operator==(icu_73::CollationIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::nextSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::switchToForward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::foundNULTerminator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::previousSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::switchToBackward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF16CollationIterator::normalize(char16_t const*, char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::previousFCD16(char16_t const*, char16_t const*&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::~UTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::~UTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::~UTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::foundNULTerminator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::forbidSurrogateCodePoints() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UTF8CollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::~FCDUTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::~FCDUTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::~FCDUTF8CollationIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::resetToOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::getOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::handleNextCE32(int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::nextHasLccc() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::nextSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::switchToForward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::previousHasTccc() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::handleGetTrailSurrogate()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::foundNULTerminator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::nextCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::previousCodePoint(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::previousSegment(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::switchToBackward()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::forwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::backwardNumCodePoints(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FCDUTF8CollationIterator::normalize(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _utmscale_getTimeScaleValue_73",
    "type": "CPP"
  },
  {
    "name": "T _utmscale_fromInt64_73",
    "type": "CPP"
  },
  {
    "name": "T _utmscale_toInt64_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::ReplaceableGlue(void**, UReplaceableCallbacks const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::ReplaceableGlue(void**, UReplaceableCallbacks const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::~ReplaceableGlue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::~ReplaceableGlue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::~ReplaceableGlue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::getLength() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::getCharAt(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::getChar32At(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::handleReplaceBetween(int, int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::extractBetween(int, int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReplaceableGlue::copy(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T _utrans_openU_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_open_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_openInverse_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_close_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_getUnicodeID_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_getID_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_register_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_unregisterID_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_unregister_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_setFilter_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_countAvailableIDs_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_getAvailableID_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_openIDs_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_trans_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_transIncremental_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_transUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_transIncrementalUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_toRules_73",
    "type": "CPP"
  },
  {
    "name": "T _utrans_getSourceSet_73",
    "type": "CPP"
  },
  {
    "name": "t utrans_enum_close(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t utrans_enum_count(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t utrans_enum_unext(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t utrans_enum_reset(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::VTZWriter(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::VTZWriter(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::~VTZWriter()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::~VTZWriter()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::write(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::write(char16_t)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZWriter::write(char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZReader::VTZReader(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZReader::VTZReader(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZReader::~VTZReader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZReader::~VTZReader()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::VTZReader::read()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::VTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::VTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::VTimeZone(icu_73::VTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::VTimeZone(icu_73::VTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::~VTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::~VTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::~VTimeZone()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::operator=(icu_73::VTimeZone const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::operator==(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::operator!=(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::createVTimeZoneByID(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::createVTimeZoneFromBasicTimeZone(icu_73::BasicTimeZone const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::createVTimeZone(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::load(icu_73::VTZReader&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getTZURL(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::setTZURL(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getLastModified(double&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::setLastModified(double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::write(icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::write(icu_73::VTZWriter&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::write(double, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::write(double, icu_73::VTZWriter&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeSimple(double, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeSimple(double, icu_73::VTZWriter&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getOffset(unsigned char, int, int, int, unsigned char, int, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getOffset(double, signed char, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getOffsetFromLocal(double, UTimeZoneLocalOption, UTimeZoneLocalOption, int&, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::setRawOffset(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getRawOffset() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::useDaylightTime() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::inDaylightTime(double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::hasSameRules(icu_73::TimeZone const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getNextTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getPreviousTransition(double, signed char, icu_73::TimeZoneTransition&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::countTransitionRules(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::getTimeZoneRules(icu_73::InitialTimeZoneRule const*&, icu_73::TimeZoneRule const**, int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::parse(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::parseDateTimeString(icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getDefaultTZName(icu_73::UnicodeString const&, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::offsetStrToMillis(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::TimeZoneRule>::adoptInsteadAndCheckErrorCode(icu_73::TimeZoneRule*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createRuleByRRULE(icu_73::UnicodeString const&, int, int, double, icu_73::UVector*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createRuleByRDATE(icu_73::UnicodeString const&, int, int, double, icu_73::UVector*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZone(icu_73::VTZWriter&, icu_73::BasicTimeZone&, icu_73::UVector*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::appendMillis(double, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeHeaders(icu_73::VTZWriter&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByTime(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, double, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByDOW(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, int, int, int, double, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeFinalRule(icu_73::VTZWriter&, signed char, icu_73::AnnualTimeZoneRule const*, int, int, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isEquivalentDateRule(int, int, int, icu_73::DateTimeRule const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeFooter(icu_73::VTZWriter&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::beginZoneProps(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getDateTimeString(double, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::endZoneProps(icu_73::VTZWriter&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByDOM(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, int, int, double, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::beginRRULE(icu_73::VTZWriter&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::appendAsciiDigits(int, unsigned char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::appendUNTIL(icu_73::VTZWriter&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByDOW_GEQ_DOM(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, int, int, int, double, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByDOW_GEQ_DOM_sub(icu_73::VTZWriter&, int, int, int, int, double, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::VTimeZone::writeZonePropsByDOW_LEQ_DOM(icu_73::VTZWriter&, signed char, icu_73::UnicodeString const&, int, int, int, int, int, double, double, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::millisToOffset(int, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::parseAsciiDigits(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::parseRRULE(icu_73::UnicodeString const&, int&, int&, int&, int*, int&, double&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _vzone_openID_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_openData_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_close_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_equals_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_getTZURL_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_setTZURL_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_getLastModified_73",
    "type": "CPP"
  },
  {
    "name": "T _vzone_setLastModified_73",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/icu4c/73.2/lib/libicuuc.73.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T icu_73::Appendable::~Appendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::~Appendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::~Appendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::appendCodePoint(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::appendString(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::reserveAppendCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Appendable::getAppendBuffer(int, int, char16_t*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::BMPSet(int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::findCodePoint(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::initBits()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::overrideIllegal()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::BMPSet(int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::BMPSet(icu_73::BMPSet const&, int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::BMPSet(icu_73::BMPSet const&, int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::~BMPSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::~BMPSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::~BMPSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::set32x64Bits(unsigned int*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::contains(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::span(char16_t const*, char16_t const*, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::spanBack(char16_t const*, char16_t const*, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::spanUTF8(unsigned char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BMPSet::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakEngine::LanguageBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakEngine::~LanguageBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakEngine::~LanguageBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakEngine::~LanguageBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakFactory::LanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakFactory::~LanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakFactory::~LanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LanguageBreakFactory::~LanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::UnhandledEngine(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::UnhandledEngine(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::~UnhandledEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::~UnhandledEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::~UnhandledEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::handles(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::findBreaks(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnhandledEngine::handleCharacter(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::ICULanguageBreakFactory(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::ICULanguageBreakFactory(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::~ICULanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::~ICULanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::~ICULanguageBreakFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::getEngineFor(int)",
    "type": "CPP"
  },
  {
    "name": "t _deleteEngine(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::loadEngineFor(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICULanguageBreakFactory::loadDictionaryMatcherFor(UScriptCode)",
    "type": "CPP"
  },
  {
    "name": "t ___clang_call_terminate",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<char, 40>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::buildInstance(icu_73::Locale const&, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createWordInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createInstance(icu_73::Locale const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createLineInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createCharacterInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createSentenceInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::createTitleInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::BreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::BreakIterator(icu_73::BreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::operator=(icu_73::BreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::~BreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::~BreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::~BreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorFactory::~ICUBreakIteratorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorFactory::~ICUBreakIteratorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorFactory::~ICUBreakIteratorFactory()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::~ICUBreakIteratorService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::~ICUBreakIteratorService()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::~ICUBreakIteratorService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::registerInstance(icu_73::BreakIterator*, icu_73::Locale const&, UBreakIteratorType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::unregister(void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getAvailableLocales()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::makeInstance(icu_73::Locale const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getLocaleID(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getRuleStatus() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getRuleStatusVec(int*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::BreakIterator(icu_73::Locale const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorFactory::handleCreate(icu_73::Locale const&, int, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::isDefault() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::cloneInstance(icu_73::UObject*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::handleDefault(icu_73::ICUServiceKey const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t breakiterator_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUBreakIteratorService::ICUBreakIteratorService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendChange(int, char16_t const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendChange(unsigned char const*, unsigned char const*, char16_t const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendCodePoint(int, int, icu_73::ByteSink&, icu_73::Edits*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendTwoBytes(int, icu_73::ByteSink&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendNonEmptyUnchanged(unsigned char const*, int, icu_73::ByteSink&, unsigned int, icu_73::Edits*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSinkUtil::appendUnchanged(unsigned char const*, unsigned char const*, icu_73::ByteSink&, unsigned int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::CharStringByteSink(icu_73::CharString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::CharStringByteSink(icu_73::CharString*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::~CharStringByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::~CharStringByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::~CharStringByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::Append(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharStringByteSink::GetAppendBuffer(int, int, char*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSink::~ByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSink::~ByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSink::~ByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSink::GetAppendBuffer(int, int, char*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ByteSink::Flush()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::CheckedArrayByteSink(char*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::CheckedArrayByteSink(char*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::~CheckedArrayByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::~CheckedArrayByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::~CheckedArrayByteSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::Reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::Append(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CheckedArrayByteSink::GetAppendBuffer(int, int, char*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::~BytesTrie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::~BytesTrie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::readValue(unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::jumpByDelta(unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::current() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::branchNext(unsigned char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::nextImpl(unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::next(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::next(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::findUniqueValueFromBranch(unsigned char const*, int, signed char, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::findUniqueValue(unsigned char const*, signed char, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::getNextBytes(icu_73::ByteSink&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::append(icu_73::ByteSink&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::getNextBranchBytes(unsigned char const*, int, icu_73::ByteSink&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BytesTrieElement::setTo(icu_73::StringPiece, int, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BytesTrieElement::compareStringTo(icu_73::BytesTrieElement const&, icu_73::CharString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BytesTrieElement::getString(icu_73::CharString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BytesTrieBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BytesTrieBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::~BytesTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::~BytesTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::~BytesTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::add(icu_73::StringPiece, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::buildBytes(UStringTrieBuildOption, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::buildStringPiece(UStringTrieBuildOption, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareElementStrings(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::getElementStringLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::getElementUnit(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::getElementValue(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::getLimitOfLinearMatch(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::countElementUnits(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::skipElementsBySomeUnits(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::indexOfElementWithNextUnit(int, int, char16_t) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BTLinearMatchNode::BTLinearMatchNode(char const*, int, icu_73::StringTrieBuilder::Node*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BTLinearMatchNode::BTLinearMatchNode(char const*, int, icu_73::StringTrieBuilder::Node*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BTLinearMatchNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::BTLinearMatchNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::write(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::createLinearMatchNode(int, int, int, icu_73::StringTrieBuilder::Node*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::ensureCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::write(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::writeElementUnits(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::writeValueAndFinal(int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::writeValueAndType(signed char, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::writeDeltaTo(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrieBuilder::internalEncodeDelta(int, char*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BytesTrieBuilder::matchNodesCanHaveValues() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::getMaxBranchLinearSubNodeLength() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::getMaxLinearMatchLength() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::UCTLinearMatchNode::~UCTLinearMatchNode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::UCTLinearMatchNode::~UCTLinearMatchNode()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::Iterator(void const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::Iterator(void const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::Iterator(icu_73::BytesTrie const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::Iterator(icu_73::BytesTrie const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::next(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::branchNext(unsigned char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::truncateAndStop()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesTrie::Iterator::getString() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::CanonicalIterator(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::setSource(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::CanonicalIterator(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::~CanonicalIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::cleanPieces()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::~CanonicalIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::~CanonicalIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::getSource()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::getEquivalents(icu_73::UnicodeString const&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::permute(icu_73::UnicodeString&, signed char, icu_73::Hashtable*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable::put(icu_73::UnicodeString const&, void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Hashtable::~Hashtable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::getEquivalents2(icu_73::Hashtable*, char16_t const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CanonicalIterator::extract(icu_73::Hashtable*, int, char16_t const*, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::compare(icu_73::ConstChar16Ptr, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharacterProperties::getInclusionsForProperty(UProperty, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::umtx_initOnce<UProperty>(icu_73::UInitOnce&, void (*)(UProperty, UErrorCode&), UProperty, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::initIntPropInclusion(UProperty, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getInclusionsForSource(UPropertySource, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharacterProperties::getBinaryPropertySet(UProperty, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _u_getBinaryPropertySet_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getIntPropertyMap_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::characterproperties_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UnicodeSet>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::umtx_initOnce<UPropertySource>(icu_73::UInitOnce&, void (*)(UPropertySource, UErrorCode&), UPropertySource, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::initInclusion(UPropertySource, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::_set_add(USet*, int)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::_set_addRange(USet*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::_set_addString(USet*, char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUMutableCPTriePointer::~LocalUMutableCPTriePointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ForwardCharacterIterator::~ForwardCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ForwardCharacterIterator::~ForwardCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ForwardCharacterIterator::~ForwardCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ForwardCharacterIterator::ForwardCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ForwardCharacterIterator::ForwardCharacterIterator(icu_73::ForwardCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::CharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::CharacterIterator(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::CharacterIterator(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::CharacterIterator(int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::~CharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::~CharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::~CharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::CharacterIterator(icu_73::CharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::operator=(icu_73::CharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::firstPostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharacterIterator::first32PostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::CharString(icu_73::CharString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::CharString(icu_73::CharString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::operator=(icu_73::CharString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::cloneData(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::extract(char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::copyFrom(icu_73::CharString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::ensureCapacity(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::lastIndexOf(char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::contains(icu_73::StringPiece) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::truncate(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::append(char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::append(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::appendNumber(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::getAppendBuffer(int, int, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::appendInvariantChars(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::appendInvariantChars(char16_t const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::appendPathPart(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::getDirSepChar() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CharString::ensureEndsWithFileSeparator(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_malloc_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_realloc_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_free_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_calloc_73",
    "type": "CPP"
  },
  {
    "name": "T _u_setMemoryFunctions_73",
    "type": "CPP"
  },
  {
    "name": "t _cmemory_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CStr::CStr(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CStr::CStr(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CStr::~CStr()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CStr::~CStr()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CStr::operator()() const",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isASCIILetter_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_toupper_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_asciitolower_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_ebcdictolower_73",
    "type": "CPP"
  },
  {
    "name": "T _T_CString_toLowerCase_73",
    "type": "CPP"
  },
  {
    "name": "T _T_CString_toUpperCase_73",
    "type": "CPP"
  },
  {
    "name": "T _T_CString_integerToString_73",
    "type": "CPP"
  },
  {
    "name": "T _T_CString_int64ToString_73",
    "type": "CPP"
  },
  {
    "name": "T _T_CString_stringToInteger_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_stricmp_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_strnicmp_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_strdup_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_strndup_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::DictionaryBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::~DictionaryBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::~DictionaryBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::~DictionaryBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::handles(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::findBreaks(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DictionaryBreakEngine::setCharacters(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PossibleWord::candidates(UText*, icu_73::DictionaryMatcher*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PossibleWord::acceptMarked(UText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PossibleWord::backUp(UText*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::ThaiBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::ThaiBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::~ThaiBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::~ThaiBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::~ThaiBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ThaiBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::LaoBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::LaoBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::~LaoBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::~LaoBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::~LaoBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LaoBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::BurmeseBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::BurmeseBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::~BurmeseBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::~BurmeseBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::~BurmeseBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BurmeseBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::KhmerBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::KhmerBreakEngine(icu_73::DictionaryMatcher*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::~KhmerBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::~KhmerBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::~KhmerBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KhmerBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::CjkBreakEngine(icu_73::DictionaryMatcher*, icu_73::LanguageType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::initJapanesePhraseParameter(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::CjkBreakEngine(icu_73::DictionaryMatcher*, icu_73::LanguageType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::~CjkBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::~CjkBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::~CjkBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UVector32>::adoptInsteadAndCheckErrorCode(icu_73::UVector32*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UVector32::addElement(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::loadJapaneseExtensions(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CjkBreakEngine::loadHiragana(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DictionaryMatcher::~DictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DictionaryMatcher::~DictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DictionaryMatcher::~DictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsDictionaryMatcher::~UCharsDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsDictionaryMatcher::~UCharsDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsDictionaryMatcher::~UCharsDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsDictionaryMatcher::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsDictionaryMatcher::matches(UText*, int, int, int*, int*, int*, int*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::~BytesDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::~BytesDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::~BytesDictionaryMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::transform(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BytesDictionaryMatcher::matches(UText*, int, int, int*, int*, int*, int*) const",
    "type": "CPP"
  },
  {
    "name": "T _udict_swap_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::DateInterval(double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::DateInterval(double, double)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::~DateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::~DateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::~DateInterval()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::DateInterval(icu_73::DateInterval const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::operator=(icu_73::DateInterval const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::DateInterval(icu_73::DateInterval const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::DateInterval::operator==(icu_73::DateInterval const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::releaseArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::copyArray(icu_73::Edits const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::moveArray(icu_73::Edits&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::operator=(icu_73::Edits const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::operator=(icu_73::Edits&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::~Edits()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::~Edits()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::addUnchanged(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::append(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::addReplace(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::growArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::mergeAndAppend(icu_73::Edits const&, icu_73::Edits const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::Iterator(unsigned short const*, int, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::Iterator(unsigned short const*, int, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::readLength(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::updateNextIndexes()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::updatePreviousIndexes()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::noNext()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::next(signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::previous(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::findIndex(int, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::destinationIndexFromSourceIndex(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::sourceIndexFromDestinationIndex(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Edits::Iterator::toString(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::~EmojiProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::~EmojiProps()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::getSingleton(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::load(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::addPropertyStarts(USetAdder const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::hasBinaryProperty(int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::hasBinaryPropertyImpl(int, UProperty) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::hasBinaryProperty(char16_t const*, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::hasBinaryPropertyImpl(char16_t const*, int, UProperty) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EmojiProps::addStrings(USetAdder const*, UProperty, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::emojiprops_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::~ErrorCode()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::~ErrorCode()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::~ErrorCode()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::assertSuccess() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ErrorCode::errorName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ErrorCode::handleFailure() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UStringSet::~UStringSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UStringSet::~UStringSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UStringSet::~UStringSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakData::~SimpleFilteredSentenceBreakData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakData::~SimpleFilteredSentenceBreakData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakData::~SimpleFilteredSentenceBreakData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::SimpleFilteredSentenceBreakIterator(icu_73::SimpleFilteredSentenceBreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::SimpleFilteredSentenceBreakIterator(icu_73::SimpleFilteredSentenceBreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::SimpleFilteredSentenceBreakIterator(icu_73::BreakIterator*, icu_73::UCharsTrie*, icu_73::UCharsTrie*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::SimpleFilteredSentenceBreakIterator(icu_73::BreakIterator*, icu_73::UCharsTrie*, icu_73::UCharsTrie*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::~SimpleFilteredSentenceBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::~SimpleFilteredSentenceBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::~SimpleFilteredSentenceBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::resetState(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::breakExceptionAt(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::internalNext(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::internalPrev(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::first()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::preceding(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::previous()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::isBoundary(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::next(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::following(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::last()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::~SimpleFilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::~FilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::~SimpleFilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::~SimpleFilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::FilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::SimpleFilteredBreakIteratorBuilder(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::suppressBreakAfter(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::unsuppressBreakAfter(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredBreakIteratorBuilder::build(icu_73::BreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::~FilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::~FilteredBreakIteratorBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::createInstance(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::createInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredBreakIteratorBuilder::createEmptyInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::operator==(icu_73::BreakIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::getText() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::getUText(UText*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::setText(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::setText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::adoptText(icu_73::CharacterIterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::current() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::createBufferClone(void*, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::SimpleFilteredSentenceBreakIterator::refreshInputText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUTextPointer::~LocalUTextPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUResourceBundlePointer::~LocalUResourceBundlePointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareUnicodeString(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::UCharsTrie>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalArray<icu_73::UnicodeString>::~LocalArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::~FilteredNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::~FilteredNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::~FilteredNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalize(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalize(icu_73::UnicodeString const&, icu_73::UnicodeString&, USetSpanCondition, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalizeUTF8(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalizeUTF8(unsigned int, char const*, int, icu_73::ByteSink&, icu_73::Edits*, USetSpanCondition, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalizeSecondAndAppend(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::normalizeSecondAndAppend(icu_73::UnicodeString&, icu_73::UnicodeString const&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::append(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::getDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::getRawDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::composePair(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::getCombiningClass(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::isNormalized(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::isNormalizedUTF8(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::quickCheck(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::spanQuickCheckYes(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::hasBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::hasBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FilteredNormalizer2::isInert(int) const",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_openFiltered_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getDataVersion_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LoadedNormalizer2Impl::~LoadedNormalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LoadedNormalizer2Impl::~LoadedNormalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LoadedNormalizer2Impl::~LoadedNormalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LoadedNormalizer2Impl::isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LoadedNormalizer2Impl::load(char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::createInstance(char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::getNFKCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::umtx_initOnce<char const*>(icu_73::UInitOnce&, void (*)(char const*, UErrorCode&), char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::initSingletons(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::getNFKC_CFInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getNFKCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getNFKDInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getNFKCCasefoldInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getInstance(char const*, char const*, UNormalization2Mode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uprv_loaded_normalizer2_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::deleteNorm2AllModes(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getInstance(UNormalizationMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getNFKCImpl(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getNFKC_CFImpl(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getNFKCInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getNFKDInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getNFKCCasefoldInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getInstance_73",
    "type": "CPP"
  },
  {
    "name": "t _unorm_getQuickCheck_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::Norm2AllModes>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::LocaleBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::LocaleBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::~LocaleBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::~LocaleBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::~LocaleBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setLanguage(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setScript(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setRegion(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setVariant(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setLanguageTag(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setExtension(char, icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_isExtensionSubtags(char, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_setUnicodeExtensions(icu_73::Locale&, icu_73::CharString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::setUnicodeLocaleKeyword(icu_73::StringPiece, icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::addUnicodeLocaleAttribute(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::removeUnicodeLocaleAttribute(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::clearExtensions()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::makeBogusLocale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::copyExtensionsFrom(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_copyExtensions(icu_73::Locale const&, icu_73::StringEnumeration*, icu_73::Locale&, bool, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::build(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBuilder::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::Result(icu_73::LocaleMatcher::Result&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::Result(icu_73::LocaleMatcher::Result&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::~Result()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::~Result()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::operator=(icu_73::LocaleMatcher::Result&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Result::makeResolvedLocale(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::Builder(icu_73::LocaleMatcher::Builder&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::Builder(icu_73::LocaleMatcher::Builder&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::~Builder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::~Builder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::operator=(icu_73::LocaleMatcher::Builder&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::clearSupportedLocales()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::ensureSupportedLocaleVector()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setSupportedLocalesFromListString(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setSupportedLocales(icu_73::Locale::Iterator&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::addSupportedLocale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setNoDefaultLocale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setDefaultLocale(icu_73::Locale const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setFavorSubtag(ULocMatchFavorSubtag)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setDemotionPerDesiredLocale(ULocMatchDemotion)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::setMaxDistance(icu_73::Locale const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::copyErrorTo(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::Builder::build(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::LocaleMatcher(icu_73::LocaleMatcher::Builder const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::putIfAbsent(icu_73::LSR const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::LocaleMatcher(icu_73::LocaleMatcher::Builder const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::getMaximalLsrOrUnd(icu_73::XLikelySubtags const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::~LSR()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::hashLSR(UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::compareLSRs(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<signed char, 100>::MaybeStackArray(int, UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::LocaleMatcher(icu_73::LocaleMatcher&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::LocaleMatcher(icu_73::LocaleMatcher&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::~LocaleMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::~LocaleMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::operator=(icu_73::LocaleMatcher&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestMatch(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestSuppIndex(icu_73::LSR, icu_73::LocaleLsrIterator*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestMatch(icu_73::Locale::Iterator&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestMatchForListString(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalePriorityList::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestMatchResult(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::getBestMatchResult(icu_73::Locale::Iterator&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleLsrIterator::rememberCurrent(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::isMatch(icu_73::Locale const&, icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleMatcher::internalMatch(icu_73::Locale const&, icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_acceptLanguage_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::acceptLanguage(UEnumeration&, icu_73::Locale::Iterator&, char*, int, UAcceptResult*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::~ConvertingIterator()",
    "type": "CPP"
  },
  {
    "name": "T _uloc_acceptLanguageFromHTTP_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalePriorityList::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalePriorityList::Iterator::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalePriorityList::Iterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::~ConvertingIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Locale::ConvertingIterator<char const**, (anonymous namespace)::LocaleFromTag>::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<signed char, 100>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::LocalePriorityList(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::parseWeight(char const*&, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::add(icu_73::Locale const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::sort(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::LocalePriorityList(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::~LocalePriorityList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::~LocalePriorityList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::localeAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocalePriorityList::orphanLocaleAt(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::hashLocale(UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::compareLocales(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::compareLocaleAndWeight(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::locale_available_init()",
    "type": "CPP"
  },
  {
    "name": "T _uloc_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "t locale_available_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getAvailableLocales(int&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::_load_installedLocales(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_openAvailableByType_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uloc_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesSink::~AvailableLocalesSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesSink::~AvailableLocalesSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesStringEnumeration::~AvailableLocalesStringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesStringEnumeration::~AvailableLocalesStringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesStringEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesStringEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::AvailableLocalesStringEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBased::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBased::getLocaleID(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBased::setLocaleIDs(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleBased::setLocaleIDs(icu_73::Locale const&, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayLanguage(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayLanguage(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayLanguage_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayScript(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayScript(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayScript_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayCountry(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayCountry(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayCountry_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayVariant(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayVariant(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayVariant_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayName(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDisplayName(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getDisplayName(icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::BreakIterator::getDisplayName(icu_73::Locale const&, icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayKeyword_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDisplayKeywordValue_73",
    "type": "CPP"
  },
  {
    "name": "t _getStringOrCopyKey(char const*, char const*, char const*, char const*, char const*, char const*, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUEnumerationPointer::~LocalUEnumerationPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::initLocaleDistance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::LocaleDistance(icu_73::LocaleDistanceData const&, icu_73::XLikelySubtags const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::getSingleton(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::LocaleDistance(icu_73::LocaleDistanceData const&, icu_73::XLikelySubtags const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::getBestIndexAndDistance(icu_73::LSR const&, icu_73::LSR const**, int, int, ULocMatchFavorSubtag, ULocMatchDirection) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::trieNext(icu_73::BytesTrie&, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::getDesSuppScriptDistance(icu_73::BytesTrie&, unsigned long long, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::getRegionPartitionsDistance(icu_73::BytesTrie&, unsigned long long, char const*, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::getFallbackRegionDistance(icu_73::BytesTrie&, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistance::isParadigmLSR(icu_73::LSR const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::ICUDataTable(char const*, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::ICUDataTable(char const*, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::~ICUDataTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::~ICUDataTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::getLocale()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::get(char const*, char const*, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ICUDataTable::getNoFallback(char const*, char const*, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleDisplayNames::~LocaleDisplayNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleDisplayNames::~LocaleDisplayNames()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleDisplayNames::~LocaleDisplayNames()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_73::Locale const&, UDialectHandling)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::initialize()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_73::Locale const&, UDialectHandling)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_73::Locale const&, UDisplayContext*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::LocaleDisplayNamesImpl(icu_73::Locale const&, UDisplayContext*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::CapitalizationContextSink::~CapitalizationContextSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::CapitalizationContextSink::~CapitalizationContextSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::CapitalizationContextSink::~CapitalizationContextSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::~LocaleDisplayNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::~LocaleDisplayNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::~LocaleDisplayNamesImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::getLocale() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::getDialectHandling() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::getContext(UDisplayContextType) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::adjustForUsageAndContext(icu_73::LocaleDisplayNamesImpl::CapContextUsage, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::localeDisplayName(icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t ncat(char*, unsigned int, ...)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::localeIdName(char const*, icu_73::UnicodeString&, bool) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::scriptDisplayName(char const*, icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::regionDisplayName(char const*, icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::appendWithSep(icu_73::UnicodeString&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::variantDisplayName(char const*, icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::keyDisplayName(char const*, icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::keyValueDisplayName(char const*, char const*, icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::localeDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::languageDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::scriptDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::scriptDisplayName(UScriptCode, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::regionDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::variantDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::keyDisplayName(char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::keyValueDisplayName(char const*, char const*, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleDisplayNames::createInstance(icu_73::Locale const&, UDialectHandling)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleDisplayNames::createInstance(icu_73::Locale const&, UDisplayContext*, int)",
    "type": "CPP"
  },
  {
    "name": "T _uldn_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_openForContext_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_getLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_getDialectHandling_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_getContext_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_localeDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_languageDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_scriptDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_scriptCodeDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_regionDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_variantDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_keyDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "T _uldn_keyValueDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDisplayNamesImpl::CapitalizationContextSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::locale_set_default_internal(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t deleteLocale(void*)",
    "type": "CPP"
  },
  {
    "name": "t locale_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale::ELocaleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::init(char const*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t _locale_set_default_73",
    "type": "CPP"
  },
  {
    "name": "t _locale_get_default_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDefault()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::~Locale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::~Locale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::~Locale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale::ELocaleType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setToBogus()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::operator=(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::operator=(icu_73::Locale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Locale(icu_73::Locale&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::operator==(icu_73::Locale const&) const",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_getKnownCanonicalizedLocaleForTest_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_isCanonicalizedLocaleForTest_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::canonicalizeLocale(icu_73::Locale const&, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::initBaseName(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setDefault(icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::addLikelySubtags(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::minimizeSubtags(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::canonicalize(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::forLanguageTag(icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::toLanguageTag(icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::createFromName(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::createCanonical(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getISO3Language() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getISO3Country() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getLCID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getISOCountries()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getISOLanguages()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setFromPOSIXID(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getRoot()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getLocale(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getEnglish()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getFrench()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getGerman()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getItalian()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getJapanese()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getKorean()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getChinese()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getSimplifiedChinese()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getTraditionalChinese()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getFrance()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getGermany()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getItaly()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getJapan()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getKorea()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getChina()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getPRC()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getTaiwan()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getUK()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getUS()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getCanada()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getCanadaFrench()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getLocaleCache()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::~KeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::~KeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::~KeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeKeywordEnumeration::~UnicodeKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeKeywordEnumeration::~UnicodeKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeKeywordEnumeration::~UnicodeKeywordEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::createKeywords(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::createUnicodeKeywords(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getKeywordValue(char const*, char*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getKeywordValue(icu_73::StringPiece, icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getUnicodeKeywordValue(icu_73::StringPiece, icu_73::ByteSink&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setKeywordValue(char const*, char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setKeywordValue(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::setUnicodeKeywordValue(icu_73::StringPiece, icu_73::StringPiece, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::getBaseName() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeKeywordEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replaceLanguage(bool, bool, bool, icu_73::UVector&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replaceSubdivision(icu_73::StringPiece, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replaceTransformedExtensions(icu_73::CharString&, icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasData::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UniqueCharStrings::UniqueCharStrings(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, void (*)(char const*), void (*)(icu_73::UnicodeString const&), UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UniqueCharStrings::add(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readLanguageAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_2::__invoke(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readLanguageAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_3::__invoke(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readScriptAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_4::__invoke(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readScriptAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_5::__invoke(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readTerritoryAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_6::__invoke(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readTerritoryAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_7::__invoke(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readVariantAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_8::__invoke(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readVariantAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_9::__invoke(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readSubdivisionAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_10::__invoke(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasDataBuilder::readSubdivisionAlias(UResourceBundle*, icu_73::UniqueCharStrings*, icu_73::LocalMemory<char const*>&, icu_73::LocalMemory<int>&, int&, UErrorCode&)::$_11::__invoke(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UniqueCharStrings::~UniqueCharStrings()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replace(icu_73::Locale const&, icu_73::CharString&, UErrorCode&)::$_0::__invoke(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replace(icu_73::Locale const&, icu_73::CharString&, UErrorCode&)::$_1::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::CharString>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::CharString>::adoptInsteadAndCheckErrorCode(icu_73::CharString*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::outputToString(icu_73::CharString&, UErrorCode)::$_12::__invoke(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::AliasReplacer::replaceTransformedExtensions(icu_73::CharString&, icu_73::CharString&, UErrorCode&)::$_13::__invoke(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::cleanupKnownCanonicalized()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUHashtablePointer::~LocalUHashtablePointer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::KeywordEnumeration::KeywordEnumeration(char const*, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_addLikelySubtags_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_addLikelySubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_addLikelySubtags(char const*, icu_73::ByteSink&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_minimizeSubtags_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_minimizeSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t PreflightingLocaleIDBuffer::needToTryAgain(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_isRightToLeft_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Locale::isRightToLeft() const",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_getRegionForSupplementalData_73",
    "type": "CPP"
  },
  {
    "name": "t parseTagString(char const*, char*, int*, char*, int*, char*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t createLikelySubtagsString(char const*, int, char const*, int, char const*, int, char const*, int, icu_73::ByteSink&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t findLikelySubtags(char const*, char*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t createTagStringWithAlternates(char const*, int, char const*, int, char const*, int, char const*, int, char const*, icu_73::ByteSink&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistanceData::LocaleDistanceData(icu_73::LocaleDistanceData&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistanceData::LocaleDistanceData(icu_73::LocaleDistanceData&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistanceData::~LocaleDistanceData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocaleDistanceData::~LocaleDistanceData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::initLikelySubtags(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtagsData::load(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::XLikelySubtags(icu_73::XLikelySubtagsData&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::getSingleton(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::XLikelySubtags(icu_73::XLikelySubtagsData&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharStringMap::~CharStringMap()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::~XLikelySubtags()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::~XLikelySubtags()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::makeMaximizedLsrFrom(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::makeMaximizedLsr(char const*, char const*, char const*, char const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::maximize(char const*, char const*, char const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::trieNext(icu_73::BytesTrie&, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::compareLikely(icu_73::LSR const&, icu_73::LSR const&, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtags::getLikelyIndex(char const*, char const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtagsData::readStrings(icu_73::ResourceTable const&, char const*, icu_73::ResourceValue&, icu_73::LocalMemory<int>&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XLikelySubtagsData::~XLikelySubtagsData()",
    "type": "CPP"
  },
  {
    "name": "T _uprv_convertToPosix_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_convertToLCIDPlatform_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_convertToLCID_73",
    "type": "CPP"
  },
  {
    "name": "t getHostID(ILcidPosixMap const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getTableStringWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getCharacterOrientation_73",
    "type": "CPP"
  },
  {
    "name": "t _uloc_getOrientationHelper(char const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getLineOrientation_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleUtility::canonicalLocaleString(icu_73::UnicodeString const*, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleUtility::initLocaleFromName(icu_73::UnicodeString const&, icu_73::Locale&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleUtility::initNameFromLocale(icu_73::Locale const&, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleUtility::getAvailableLocaleNames(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleUtility::isFallbackOf(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t service_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::LSR(char, char const*, char const*, char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::indexForRegion(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::LSR(char, char const*, char const*, char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::LSR(icu_73::LSR&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::LSR(icu_73::LSR&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::deleteOwned()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::operator=(icu_73::LSR&&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::isEquivalentTo(icu_73::LSR const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::operator==(icu_73::LSR const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSR::setHashCode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray1D::~ReadArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray1D::~ReadArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray1D::~ReadArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray2D::~ReadArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray2D::~ReadArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReadArray2D::~ReadArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray1D::~ConstArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray1D::~ConstArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray1D::~ConstArray1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::~ConstArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::~ConstArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::~ConstArray2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array1D::~Array1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array1D::~Array1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array1D::~Array1D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::~Array2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::~Array2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::~Array2D()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMData::LSTMData(UResourceBundle*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMData::LSTMData(UResourceBundle*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMData::~LSTMData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMData::~LSTMData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Vectorizer::~Vectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Vectorizer::~Vectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Vectorizer::~Vectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CodePointsVectorizer::~CodePointsVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CodePointsVectorizer::~CodePointsVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CodePointsVectorizer::~CodePointsVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CodePointsVectorizer::vectorize(UText*, int, int, icu_73::UVector32&, icu_73::UVector32&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Vectorizer::stringToIndex(char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GraphemeClusterVectorizer::~GraphemeClusterVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GraphemeClusterVectorizer::~GraphemeClusterVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GraphemeClusterVectorizer::~GraphemeClusterVectorizer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GraphemeClusterVectorizer::vectorize(UText*, int, int, icu_73::UVector32&, icu_73::UVector32&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compute(int, icu_73::ReadArray2D const&, icu_73::ReadArray2D const&, icu_73::ReadArray1D const&, icu_73::ReadArray1D const&, icu_73::Array1D&, icu_73::Array1D&, icu_73::Array1D&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::divideUpDictionaryRange(UText*, int, int, icu_73::UVector32&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::d1() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::createVectorizer(icu_73::LSTMData const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::LSTMBreakEngine(icu_73::LSTMData const*, icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::LSTMBreakEngine(icu_73::LSTMData const*, icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::~LSTMBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::~LSTMBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::~LSTMBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LSTMBreakEngine::name() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::defaultLSTM(UScriptCode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _CreateLSTMDataForScript_73",
    "type": "CPP"
  },
  {
    "name": "T _CreateLSTMData_73",
    "type": "CPP"
  },
  {
    "name": "T _CreateLSTMBreakEngine_73",
    "type": "CPP"
  },
  {
    "name": "T _DeleteLSTMData_73",
    "type": "CPP"
  },
  {
    "name": "T _LSTMDataName_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray1D::d1() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray1D::get(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::d2() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ConstArray2D::get(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array1D::d1() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array1D::get(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::d1() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::d2() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Array2D::get(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::init(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(UMessagePatternApostropheMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(UMessagePatternApostropheMode, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parse(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(icu_73::MessagePattern const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::copyStorage(icu_73::MessagePattern const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::MessagePattern(icu_73::MessagePattern const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::operator=(icu_73::MessagePattern const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePatternList<icu_73::MessagePattern::Part, 32>::copyFrom(icu_73::MessagePatternList<icu_73::MessagePattern::Part, 32> const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePatternList<double, 8>::copyFrom(icu_73::MessagePatternList<double, 8> const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::~MessagePattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::~MessagePattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::~MessagePattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::preParse(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseMessage(int, int, int, UMessagePatternArgType, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::postParse()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseChoiceStyle(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseChoiceStyle(int, int, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parsePluralStyle(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parsePluralOrSelectStyle(UMessagePatternArgType, int, int, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseSelectStyle(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::operator==(icu_73::MessagePattern const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePatternList<icu_73::MessagePattern::Part, 32>::equals(icu_73::MessagePatternList<icu_73::MessagePattern::Part, 32> const&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::validateArgumentName(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseArgNumber(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::autoQuoteApostropheDeep() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::getNumericValue(icu_73::MessagePattern::Part const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::getPluralOffset(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::Part::operator==(icu_73::MessagePattern::Part const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::addPart(UMessagePatternPartType, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseArg(int, int, int, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::addLimitPart(int, UMessagePatternPartType, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::inTopLevelChoiceMessage(int, UMessagePatternArgType)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::setParseError(UParseError*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::skipWhiteSpace(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::skipIdentifier(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::isArgTypeChar(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::isChoice(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::isPlural(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::isSelect(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::isOrdinal(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseSimpleStyle(int, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::skipDouble(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::parseDouble(int, int, signed char, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::inMessageFormatPattern(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessagePattern::addArgDoublePart(double, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePatternList<icu_73::MessagePattern::Part, 32>::ensureCapacityForOneMore(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MessagePatternList<double, 8>::ensureCapacityForOneMore(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageImpl::appendReducedApostrophes(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::MessageImpl::appendSubMessageWithoutSkipSyntax(icu_73::MessagePattern const&, int, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::MessagePattern::Part, 32>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<double, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::MlBreakEngine(icu_73::UnicodeSet const&, icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::loadMLModel(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::MlBreakEngine(icu_73::UnicodeSet const&, icu_73::UnicodeSet const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::~MlBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::~MlBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::~MlBreakEngine()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::divideUpRange(UText*, int, int, icu_73::UVector32&, icu_73::UnicodeString const&, icu_73::LocalPointer<icu_73::UVector32> const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::initIndexList(icu_73::UnicodeString const&, int*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::evaluateBreakpoint(icu_73::UnicodeString const&, int*, int, int, int, icu_73::UVector32&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MlBreakEngine::initKeyValue(UResourceBundle*, char const*, char const*, icu_73::Hashtable&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::~Normalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::~Normalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::~Normalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::normalizeUTF8(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getRawDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::composePair(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getCombiningClass(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::isNormalizedUTF8(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::~NoopNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::~NoopNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::~NoopNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::~Normalizer2WithImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::~Normalizer2WithImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::~Normalizer2WithImpl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::~DecomposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::~DecomposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::~DecomposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::~ComposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::~ComposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::~ComposeNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::~FCDNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::~FCDNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::~FCDNormalizer2()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getNoopInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getImpl(icu_73::Normalizer2 const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::~Norm2AllModes()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::~Norm2AllModes()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::createInstance(icu_73::Normalizer2Impl*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::createNFCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Norm2AllModes::getNFCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getNFCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2::getNFDInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getFCDInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getFCCInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Factory::getNFCImpl(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getNFCInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getNFDInstance_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_close_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_normalize_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_normalizeSecondAndAppend_73",
    "type": "CPP"
  },
  {
    "name": "t normalizeSecondAndAppend(UNormalizer2 const*, char16_t*, int, int, char16_t const*, int, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_append_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getDecomposition_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getRawDecomposition_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_composePair_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_getCombiningClass_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_isNormalized_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_quickCheck_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_spanQuickCheckYes_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_hasBoundaryBefore_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_hasBoundaryAfter_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_isInert_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getCombiningClass_73",
    "type": "CPP"
  },
  {
    "name": "t _unorm_getFCD16_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::getFCD16(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::normalize(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::normalizeSecondAndAppend(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::append(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::getDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::getRawDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::composePair(int, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::getCombiningClass(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::isNormalized(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::quickCheck(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::spanQuickCheckYes(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::getQuickCheck(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::normalizeUTF8(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::isNormalizedUTF8(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::hasBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::hasBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::isInert(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::normalize(char16_t const*, char16_t const*, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DecomposeNormalizer2::getQuickCheck(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::normalizeUTF8(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::isNormalized(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::isNormalizedUTF8(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::quickCheck(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::hasBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::hasBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::isInert(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::normalize(char16_t const*, char16_t const*, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ComposeNormalizer2::getQuickCheck(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::hasBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::hasBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::isInert(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::normalize(char16_t const*, char16_t const*, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::normalizeAndAppend(char16_t const*, char16_t const*, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::FCDNormalizer2::spanQuickCheckYes(char16_t const*, char16_t const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::normalize(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::normalizeUTF8(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::normalizeSecondAndAppend(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::append(icu_73::UnicodeString&, icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::getDecomposition(int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::isNormalized(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::isNormalizedUTF8(icu_73::StringPiece, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::quickCheck(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::spanQuickCheckYes(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::hasBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::hasBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::NoopNormalizer2::isInert(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uprv_normalizer2_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReorderingBuffer::~ReorderingBuffer()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2WithImpl::normalizeSecondAndAppend(icu_73::UnicodeString&, icu_73::UnicodeString const&, signed char, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::getNorm16(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::isDecompInert(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::hasCompBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::hasCompBoundaryAfter(int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::isCompInert(int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::ReorderingBuffer(icu_73::Normalizer2Impl const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::ReorderingBuffer(icu_73::Normalizer2Impl const&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::init(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::previousCC()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::equals(char16_t const*, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::equals(unsigned char const*, unsigned char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::appendSupplementary(int, unsigned char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::resize(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::insert(int, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::append(char16_t const*, int, signed char, unsigned char, unsigned char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::getRawNorm16(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReorderingBuffer::append(int, unsigned char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::appendZeroCC(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::appendZeroCC(char16_t const*, char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::remove()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::removeSuffix(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ReorderingBuffer::skipPrevious()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::~Normalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CanonIterData::~CanonIterData()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::~Normalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::~Normalizer2Impl()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::init(int const*, UCPTrie const*, unsigned short const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::addLcccChars(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::addPropertyStarts(USetAdder const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::addCanonIterPropertyStarts(USetAdder const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::ensureCanonIterData(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::segmentStarterMapper(void const*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::copyLowPrefixFromNulTerminated(char16_t const*, int, icu_73::ReorderingBuffer*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decompose(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decompose(char16_t const*, char16_t const*, icu_73::UnicodeString&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decompose(char16_t const*, char16_t const*, icu_73::ReorderingBuffer*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decompose(int, unsigned short, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decomposeShort(char16_t const*, char16_t const*, signed char, signed char, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decomposeUTF8(unsigned int, unsigned char const*, unsigned char const*, icu_73::ByteSink*, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::norm16HasDecompBoundaryBefore(unsigned short) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decomposeShort(unsigned char const*, unsigned char const*, icu_73::Normalizer2Impl::StopAt, signed char, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::codePointFromValidUTF8(unsigned char const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getDecomposition(int, char16_t*, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getRawDecomposition(int, char16_t*, int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::decomposeAndAppend(char16_t const*, char16_t const*, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReorderingBuffer::copyReorderableSuffixTo(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasDecompBoundaryBefore(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasDecompBoundaryAfter(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::norm16HasDecompBoundaryAfter(unsigned short) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::combine(unsigned short const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::addComposites(unsigned short const*, icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::recompose(icu_73::ReorderingBuffer&, int, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::composePair(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::compose(char16_t const*, char16_t const*, signed char, signed char, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasCompBoundaryBefore(char16_t const*, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasCompBoundaryAfter(char16_t const*, char16_t const*, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ReorderingBuffer::appendBMP(char16_t, unsigned char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getPreviousTrailCC(char16_t const*, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::composeQuickCheck(char16_t const*, char16_t const*, signed char, UNormalizationCheckResult*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::composeAndAppend(char16_t const*, char16_t const*, signed char, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::findNextCompBoundary(char16_t const*, char16_t const*, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::findPreviousCompBoundary(char16_t const*, char16_t const*, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::composeUTF8(unsigned int, signed char, unsigned char const*, unsigned char const*, icu_73::ByteSink*, icu_73::Edits*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasCompBoundaryBefore(unsigned char const*, unsigned char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::hasCompBoundaryAfter(unsigned char const*, unsigned char const*, signed char) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::getJamoTMinusBase(unsigned char const*, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getPreviousTrailCC(unsigned char const*, unsigned char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getFCD16FromNormData(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::makeFCD(char16_t const*, char16_t const*, icu_73::ReorderingBuffer*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::findNextFCDBoundary(char16_t const*, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::makeFCDAndAppend(char16_t const*, char16_t const*, signed char, icu_73::UnicodeString&, icu_73::ReorderingBuffer&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::findPreviousFCDBoundary(char16_t const*, char16_t const*) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CanonIterData::CanonIterData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CanonIterData::CanonIterData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CanonIterData::~CanonIterData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CanonIterData::addToStartSet(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::InitCanonIterData::doInit(icu_73::Normalizer2Impl*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::makeCanonIterDataFromNorm16(int, int, unsigned short, icu_73::CanonIterData&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getCanonValue(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getCanonStartSet(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::isCanonSegmentStarter(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer2Impl::getCanonStartSet(int, icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::Normalizer2Impl::getCompositionsList(unsigned short) const",
    "type": "CPP"
  },
  {
    "name": "T _unorm2_swap_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::UnicodeString const&, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::init()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::UnicodeString const&, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::ConstChar16Ptr, int, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::ConstChar16Ptr, int, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::CharacterIterator const&, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::CharacterIterator const&, UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::Normalizer const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::Normalizer(icu_73::Normalizer const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::~Normalizer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::~Normalizer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::~Normalizer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::operator==(icu_73::Normalizer const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::normalize(icu_73::UnicodeString const&, UNormalizationMode, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::compose(icu_73::UnicodeString const&, signed char, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::decompose(icu_73::UnicodeString const&, signed char, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::quickCheck(icu_73::UnicodeString const&, UNormalizationMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::isNormalized(icu_73::UnicodeString const&, UNormalizationMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::concatenate(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UNormalizationMode, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::current()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::nextNormalize()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::previous()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::previousNormalize()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::clearBuffer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setIndexOnly(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::first()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::last()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getIndex() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::startIndex() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::endIndex() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setMode(UNormalizationMode)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getUMode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setOption(int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getOption(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setText(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setText(icu_73::CharacterIterator const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::setText(icu_73::ConstChar16Ptr, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Normalizer::getText(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::~ParsePosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::~ParsePosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::~ParsePosition()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ParsePosition::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::isSyntax(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::isSyntaxOrWhiteSpace(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::isWhiteSpace(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::skipWhiteSpace(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::skipWhiteSpace(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::trimWhiteSpace(char16_t const*, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::isIdentifier(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PatternProps::skipIdentifier(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralMapBase::toCategory(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralMapBase::toCategory(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::PluralMapBase::getCategoryName(icu_73::PluralMapBase::Category)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_compareASCIIPropertyNames_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_compareEBCDICPropertyNames_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::findProperty(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::findPropertyValueNameGroup(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getName(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::containsName(icu_73::BytesTrie&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getPropertyName(int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getPropertyValueName(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getPropertyOrValueEnum(int, char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getPropertyEnum(char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::PropNameData::getPropertyValueEnum(int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T _u_getPropertyName_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getPropertyEnum_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getPropertyValueName_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getPropertyValueEnum_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getShortName_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_open_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_close_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_setValue_73",
    "type": "CPP"
  },
  {
    "name": "t _findRow(UPropsVectors*, int)",
    "type": "CPP"
  },
  {
    "name": "T _upvec_getValue_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_getRow_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_compact_73",
    "type": "CPP"
  },
  {
    "name": "t upvec_compareRows(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T _upvec_getArray_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_cloneArray_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_compactToUTrie2WithRowIndexes_73",
    "type": "CPP"
  },
  {
    "name": "T _upvec_compactToUTrie2Handler_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToPunycode_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromPunycode_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getUTCtime_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getRawUTCtime_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isNaN_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isInfinite_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isPositiveInfinity_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isNegativeInfinity_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getNaN_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getInfinity_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_floor_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_ceil_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_round_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_fabs_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_modf_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_fmod_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_pow_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_pow10_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_fmax_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_fmin_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_add32_overflow_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_mul32_overflow_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_trunc_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_maxMantissa_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_log_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_maximumPtr_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_tzset_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_timezone_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_tzname_clear_cache_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_tzname_73",
    "type": "CPP"
  },
  {
    "name": "t isValidOlsonID(char const*)",
    "type": "CPP"
  },
  {
    "name": "t skipZoneIDPrefix(char const**)",
    "type": "CPP"
  },
  {
    "name": "t searchForTZFile(char const*, DefaultTZInfo*)",
    "type": "CPP"
  },
  {
    "name": "T _u_setDataDirectory_73",
    "type": "CPP"
  },
  {
    "name": "t putil_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _uprv_pathIsAbsolute_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getDataDirectory_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getTimeZoneFilesDirectory_73",
    "type": "CPP"
  },
  {
    "name": "t TimeZoneDataDirInitFn(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _u_setTimeZoneFilesDirectory_73",
    "type": "CPP"
  },
  {
    "name": "t setTimeZoneFilesDir(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getDefaultLocaleID_73",
    "type": "CPP"
  },
  {
    "name": "T _u_versionFromString_73",
    "type": "CPP"
  },
  {
    "name": "T _u_versionFromUString_73",
    "type": "CPP"
  },
  {
    "name": "T _u_versionToString_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_dl_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_dl_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_dlsym_func_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString::CharString(icu_73::CharString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::RBBIDataHeader*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::~RuleBasedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::RBBIDataHeader*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::~RuleBasedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(unsigned char const*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(unsigned char const*, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::operator=(icu_73::RuleBasedBreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::UnicodeString const&, UParseError&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::RuleBasedBreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::RuleBasedBreakIterator(icu_73::RuleBasedBreakIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::~RuleBasedBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::operator==(icu_73::BreakIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::setText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getUText(UText*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getText() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::adoptText(icu_73::CharacterIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::setText(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::refreshInputText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::first()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::last()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::next(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleBasedBreakIterator::BreakCache::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::previous()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::following(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::preceding(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::isBoundary(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::current() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::handleNext()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::handleSafePrevious(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getRuleStatus() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getRuleStatusVec(int*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getBinaryRules(unsigned int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::createBufferClone(void*, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _rbbi_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getLanguageBreakEngine(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::dumpCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::dumpTables()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::getRules() const",
    "type": "CPP"
  },
  {
    "name": "t std::type_info::operator==[abi:v15006](std::type_info const&) const",
    "type": "CPP"
  },
  {
    "name": "t _deleteFactory(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::RuleBasedBreakIterator::DictionaryCache>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::DictionaryCache(icu_73::RuleBasedBreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::DictionaryCache(icu_73::RuleBasedBreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::~DictionaryCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::~DictionaryCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::following(int, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::preceding(int, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::DictionaryCache::populateDictionary(int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::BreakCache(icu_73::RuleBasedBreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::reset(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::BreakCache(icu_73::RuleBasedBreakIterator*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::~BreakCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::~BreakCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::~BreakCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::current()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::following(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::seek(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::populateNear(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::preceding(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::previous(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::nextOL()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::populateFollowing()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::populatePreceding(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::addFollowing(int, int, icu_73::RuleBasedBreakIterator::BreakCache::UpdatePositionValues)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::addPreceding(int, int, icu_73::RuleBasedBreakIterator::BreakCache::UpdatePositionValues)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::RuleBasedBreakIterator::BreakCache::dumpCache()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(icu_73::RBBIDataHeader const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::init0()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::init(icu_73::RBBIDataHeader const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(icu_73::RBBIDataHeader const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(icu_73::RBBIDataHeader const*, icu_73::RBBIDataWrapper::EDontAdopt, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(icu_73::RBBIDataHeader const*, icu_73::RBBIDataWrapper::EDontAdopt, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::isDataVersionAcceptable(unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::RBBIDataWrapper(UDataMemory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::~RBBIDataWrapper()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::~RBBIDataWrapper()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::operator==(icu_73::RBBIDataWrapper const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::hashCode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::removeReference()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::addReference()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::getRuleSourceString() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIDataWrapper::printData()",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_swap_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::RBBINode(icu_73::RBBINode::NodeType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::RBBINode(icu_73::RBBINode::NodeType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::RBBINode(icu_73::RBBINode const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::RBBINode(icu_73::RBBINode const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::~RBBINode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::~RBBINode()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::cloneTree()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::flattenVariables()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::flattenSets()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBINode::findNodes(icu_73::UVector*, icu_73::RBBINode::NodeType, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::RBBIRuleBuilder(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::RBBIRuleBuilder(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::~RBBIRuleBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::~RBBIRuleBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::~RBBIRuleBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::flattenData()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::createRuleBasedBreakIterator(icu_73::UnicodeString const&, UParseError*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::build(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleBuilder::optimizeTables()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::RBBIRuleScanner(icu_73::RBBIRuleBuilder*)",
    "type": "CPP"
  },
  {
    "name": "t RBBISetTable_deleter(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::RBBIRuleScanner(icu_73::RBBIRuleBuilder*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::~RBBIRuleScanner()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::~RBBIRuleScanner()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::~RBBIRuleScanner()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::doParseActions(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::pushNewNode(icu_73::RBBINode::NodeType)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::fixOpStack(icu_73::RBBINode::OpPrecedence)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::error(UErrorCode)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::findSetFor(icu_73::UnicodeString const&, icu_73::RBBINode*, icu_73::UnicodeSet*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::operator==(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::scanSet()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::stripRules(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::nextCharLL()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::nextChar(icu_73::RBBIRuleScanner::RBBIRuleChar&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::parse()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIRuleScanner::numRules()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::RBBISetBuilder(icu_73::RBBIRuleBuilder*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::RBBISetBuilder(icu_73::RBBIRuleBuilder*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::~RBBISetBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::~RangeDescriptor()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::~RBBISetBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::buildRanges()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::RangeDescriptor(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::split(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::isDictionaryRange()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::addValToSets(icu_73::UVector*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::addValToSet(icu_73::RBBINode*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::buildTrie()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::mergeCategories(std::__1::pair<int, int>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::getTrieSize()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::getNumCharCategories() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::serializeTrie(unsigned char*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::getDictCategoriesStart() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::sawBOF() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISetBuilder::getFirstChar(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::RangeDescriptor(icu_73::RangeDescriptor const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::RangeDescriptor(icu_73::RangeDescriptor const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::RangeDescriptor(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RangeDescriptor::~RangeDescriptor()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::RBBISymbolTable(icu_73::RBBIRuleScanner*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t RBBISymbolTableEntry_deleter(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::RBBISymbolTable(icu_73::RBBIRuleScanner*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::~RBBISymbolTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::~RBBISymbolTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::~RBBISymbolTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::lookup(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::lookupMatcher(int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::parseReference(icu_73::UnicodeString const&, icu_73::ParsePosition&, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::lookupNode(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTable::addEntry(icu_73::UnicodeString const&, icu_73::RBBINode*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTableEntry::RBBISymbolTableEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTableEntry::RBBISymbolTableEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTableEntry::~RBBISymbolTableEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBISymbolTableEntry::~RBBISymbolTableEntry()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::RBBITableBuilder(icu_73::RBBIRuleBuilder*, icu_73::RBBINode**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::RBBITableBuilder(icu_73::RBBIRuleBuilder*, icu_73::RBBINode**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::~RBBITableBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIStateDescriptor::~RBBIStateDescriptor()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::~RBBITableBuilder()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::buildForwardTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::calcNullable(icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::calcFirstPos(icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::calcLastPos(icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::calcFollowPos(icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::calcChainedFollowPos(icu_73::RBBINode*, icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::bofFixup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::buildStateTable()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::mapLookAheadRules()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::flagAcceptingStates()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::flagLookAheadStates()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::flagTaggedStates()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::mergeRuleStatusVals()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::setAdd(icu_73::UVector*, icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::addRuleRootNodes(icu_73::UVector*, icu_73::RBBINode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIStateDescriptor::RBBIStateDescriptor(int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::setEquals(icu_73::UVector*, icu_73::UVector*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::sortedAdd(icu_73::UVector**, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::findDuplCharClassFrom(std::__1::pair<int, int>*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::removeColumn(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::findDuplicateState(std::__1::pair<int, int>*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::findDuplicateSafeState(std::__1::pair<int, int>*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::removeState(std::__1::pair<int, int>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::removeSafeState(std::__1::pair<int, int>)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::removeDuplicateStates()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::getTableSize() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::use8BitsForTable() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::exportTable(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::buildSafeReverseTable(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::getSafeTableSize() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::use8BitsForSafeTable() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBITableBuilder::exportSafeTable(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIStateDescriptor::RBBIStateDescriptor(int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RBBIStateDescriptor::~RBBIStateDescriptor()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<void*, 16>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::ResourceBundle const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::ResourceBundle const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(UResourceBundle*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(UResourceBundle*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(char const*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(char const*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::operator=(icu_73::ResourceBundle const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::~ResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::~ResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::~ResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getString(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getBinary(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getIntVector(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getUInt(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getInt(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getName() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getKey() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getType() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getSize() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::resetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getNext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getNextString(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getNextString(char const**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::get(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getStringEx(int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::get(char const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getWithFallback(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getStringEx(char const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getVersionNumber() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getVersion(unsigned char*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getLocale() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::getLocale(ULocDataLocaleType, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::constructForLocale(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::UnicodeString const&, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceBundle::ResourceBundle(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceValue::~ResourceValue()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceValue::~ResourceValue()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceValue::~ResourceValue()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceSink::~ResourceSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceSink::~ResourceSink()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceSink::~ResourceSink()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::RuleCharacterIterator(icu_73::UnicodeString const&, icu_73::SymbolTable const*, icu_73::ParsePosition&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::RuleCharacterIterator(icu_73::UnicodeString const&, icu_73::SymbolTable const*, icu_73::ParsePosition&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::atEnd() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::next(int, signed char&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::_current() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::_advance(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::lookahead(icu_73::UnicodeString&, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::jumpahead(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::getPos(icu_73::RuleCharacterIterator::Pos&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::setPos(icu_73::RuleCharacterIterator::Pos const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::RuleCharacterIterator::skipIgnored(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::UnicodeString const&, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::StringCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::StringCharacterIterator(icu_73::StringCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::~StringCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::~StringCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::~StringCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::operator=(icu_73::StringCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::operator==(icu_73::ForwardCharacterIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::setText(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringCharacterIterator::getText(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::ICUServiceKey(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::ICUServiceKey(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::~ICUServiceKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::~ICUServiceKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::~ICUServiceKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::getID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::canonicalID(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::currentID(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::currentDescriptor(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::fallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::isFallbackOf(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::prefix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::parsePrefix(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::parseSuffix(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceKey::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceFactory::~ICUServiceFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceFactory::~ICUServiceFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUServiceFactory::~ICUServiceFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::SimpleFactory(icu_73::UObject*, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::SimpleFactory(icu_73::UObject*, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::~SimpleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::~SimpleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::~SimpleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::updateVisibleIDs(icu_73::Hashtable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::getDisplayName(icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFactory::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ServiceListener::~ServiceListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ServiceListener::~ServiceListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ServiceListener::~ServiceListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ServiceListener::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ServiceListener::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPair::create(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPair::StringPair(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPair::isBogus() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPair::StringPair(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::ICUService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::ICUService(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::~ICUService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::~ICUService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::~ICUService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::get(icu_73::UnicodeString const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::get(icu_73::UnicodeString const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getKey(icu_73::ICUServiceKey&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getKey(icu_73::ICUServiceKey&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getKey(icu_73::ICUServiceKey&, icu_73::UnicodeString*, icu_73::ICUServiceFactory const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::cacheDeleter(void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::XMutex::~XMutex()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::handleDefault(icu_73::ICUServiceKey const&, icu_73::UnicodeString*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getVisibleIDs(icu_73::UVector&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getVisibleIDs(icu_73::UVector&, icu_73::UnicodeString const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getVisibleIDMap(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getDisplayName(icu_73::UnicodeString const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getDisplayName(icu_73::UnicodeString const&, icu_73::UnicodeString&, icu_73::Locale const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getDisplayNames(icu_73::UVector&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getDisplayNames(icu_73::UVector&, icu_73::Locale const&, icu_73::UnicodeString const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getDisplayNames(icu_73::UVector&, icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::userv_deleteStringPair(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::registerInstance(icu_73::UObject*, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::registerInstance(icu_73::UObject*, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::createSimpleFactory(icu_73::UObject*, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::registerFactory(icu_73::ICUServiceFactory*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::unregister(void const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::reInitializeFactories()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::isDefault() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::countFactories() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::createKey(icu_73::UnicodeString const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::clearCaches()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::clearServiceCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::acceptsListener(icu_73::EventListener const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::notifyListener(icu_73::EventListener&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getName(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUService::getTimestamp() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CacheEntry::unref()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::DNCache::DNCache(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::createWithCanonicalFallback(icu_73::UnicodeString const*, icu_73::UnicodeString const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::createWithCanonicalFallback(icu_73::UnicodeString const*, icu_73::UnicodeString const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::LocaleKey(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::LocaleKey(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::~LocaleKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::~LocaleKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::~LocaleKey()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::prefix(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::kind() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::canonicalID(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::currentID(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::currentDescriptor(icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::canonicalLocale(icu_73::Locale&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::currentLocale(icu_73::Locale&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::fallback()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::isFallbackOf(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKey::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::LocaleKeyFactory(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::LocaleKeyFactory(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::LocaleKeyFactory(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::LocaleKeyFactory(int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::~LocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::~LocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::~LocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::handlesKey(icu_73::ICUServiceKey const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::updateVisibleIDs(icu_73::Hashtable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::getDisplayName(icu_73::UnicodeString const&, icu_73::Locale const&, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::handleCreate(icu_73::Locale const&, int, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::getSupportedIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::LocaleKeyFactory::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::ICULocaleService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::ICULocaleService(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::~ICULocaleService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::~ICULocaleService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::~ICULocaleService()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::get(icu_73::Locale const&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::get(icu_73::Locale const&, int, icu_73::Locale*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::get(icu_73::Locale const&, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::get(icu_73::Locale const&, icu_73::Locale*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::registerInstance(icu_73::UObject*, icu_73::UnicodeString const&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::registerInstance(icu_73::UObject*, icu_73::Locale const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::registerInstance(icu_73::UObject*, icu_73::Locale const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::registerInstance(icu_73::UObject*, icu_73::Locale const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::~ServiceEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::~ServiceEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::~ServiceEnumeration()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::getAvailableLocales() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::create(icu_73::ICULocaleService const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::validateFallbackLocale() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::createKey(icu_73::UnicodeString const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICULocaleService::createKey(icu_73::UnicodeString const*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::ServiceEnumeration(icu_73::ICULocaleService const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ServiceEnumeration::ServiceEnumeration(icu_73::ServiceEnumeration const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EventListener::~EventListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EventListener::~EventListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EventListener::~EventListener()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EventListener::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::EventListener::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::ICUNotifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::~ICUNotifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::~ICUNotifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::~ICUNotifier()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::addListener(icu_73::EventListener const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::removeListener(icu_73::EventListener const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUNotifier::notifyChanged()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::ICUResourceBundleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::ICUResourceBundleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::ICUResourceBundleFactory(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::ICUResourceBundleFactory(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::~ICUResourceBundleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::~ICUResourceBundleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::~ICUResourceBundleFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::getSupportedIDs(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::handleCreate(icu_73::Locale const&, int, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICUResourceBundleFactory::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_73::UObject*, icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_73::UObject*, icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_73::UObject*, icu_73::Locale const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::SimpleLocaleKeyFactory(icu_73::UObject*, icu_73::Locale const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::~SimpleLocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::~SimpleLocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::~SimpleLocaleKeyFactory()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::create(icu_73::ICUServiceKey const&, icu_73::ICUService const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::updateVisibleIDs(icu_73::Hashtable&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleLocaleKeyFactory::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::~SharedObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::~SharedObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::~SharedObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCacheBase::~UnifiedCacheBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCacheBase::~UnifiedCacheBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCacheBase::~UnifiedCacheBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::addRef() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::removeRef() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::getRefCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SharedObject::deleteIfZeroRefCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::operator=(icu_73::SimpleFormatter const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::~SimpleFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::~SimpleFormatter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::applyPatternMinMaxArguments(icu_73::UnicodeString const&, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::format(icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::formatAndAppend(icu_73::UnicodeString const* const*, int, icu_73::UnicodeString&, int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::format(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::format(icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString const&, icu_73::UnicodeString&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::format(char16_t const*, int, icu_73::UnicodeString const* const*, icu_73::UnicodeString&, icu_73::UnicodeString const*, signed char, int*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::formatAndReplace(icu_73::UnicodeString const* const*, int, icu_73::UnicodeString&, int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SimpleFormatter::getTextWithNoArguments(char16_t const*, int, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::unisets::get(icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::unisets::chooseFrom(icu_73::UnicodeString, icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::unisets::chooseFrom(icu_73::UnicodeString, icu_73::unisets::Key, icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::cleanupNumberParseUniSets()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::computeUnion(icu_73::unisets::Key, icu_73::unisets::Key, icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::computeUnion(icu_73::unisets::Key, icu_73::unisets::Key)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::ParseDataSink::~ParseDataSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::ParseDataSink::~ParseDataSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::ParseDataSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::saveSet(icu_73::unisets::Key, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(icu_73::StringPiece const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(icu_73::StringPiece const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(icu_73::StringPiece const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::StringPiece(icu_73::StringPiece const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::set(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::find(icu_73::StringPiece, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringPiece::compare(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::operator==(icu_73::StringPiece const&, icu_73::StringPiece const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::StringTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::~StringTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::deleteCompactBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::~StringTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::~StringTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::createCompactBuilder(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t hashStringTrieNode(UElement)",
    "type": "CPP"
  },
  {
    "name": "t equalStringTrieNodes(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::build(UStringTrieBuildOption, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::writeNode(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::makeNode(int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::writeBranchSubNode(int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::registerFinalValue(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::registerNode(icu_73::StringTrieBuilder::Node*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::makeBranchSubNode(int, int, int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::StringTrieBuilder::ListBranchNode::add(int, icu_73::StringTrieBuilder::Node*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::hashNode(void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::equalNodes(void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::Node::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::Node::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::FinalValueNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::FinalValueNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::ValueNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::IntermediateValueNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::IntermediateValueNode::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::IntermediateValueNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::LinearMatchNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::LinearMatchNode::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::ListBranchNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::ListBranchNode::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::ListBranchNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::SplitBranchNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::SplitBranchNode::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::SplitBranchNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::BranchHeadNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::BranchHeadNode::markRightEdgesFirst(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringTrieBuilder::BranchHeadNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_uint16Comparator_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_int32Comparator_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_uint32Comparator_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_stableBinarySearch_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_sortArray_73",
    "type": "CPP"
  },
  {
    "name": "t doInsertionSort(char*, int, int, int (*)(void const*, void const*, void const*), void const*, void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long double, 25>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t subQuickSort(char*, int, int, int, int (*)(void const*, void const*, void const*), void const*, void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<long double, 50>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_openSized_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getMemory_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setInverse_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_isInverse_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setReorderingMode_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getReorderingMode_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setReorderingOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getReorderingOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getBaseDirection_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getParaLevelAtIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setContext_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setPara_73",
    "type": "CPP"
  },
  {
    "name": "t resolveExplicitLevels(UBiDi*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t checkExplicitLevels(UBiDi*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t resolveImplicitLevels(UBiDi*, int, int, unsigned char, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t adjustWSLevels(UBiDi*)",
    "type": "CPP"
  },
  {
    "name": "t addPoint(UBiDi*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_orderParagraphsLTR_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_isOrderParagraphsLTR_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getDirection_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getText_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLength_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getProcessedLength_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getResultLength_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getParaLevel_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_countParagraphs_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getParagraphByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getParagraph_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setClassCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getClassCallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getCustomizedClass_73",
    "type": "CPP"
  },
  {
    "name": "t bracketInit(UBiDi*, BracketData*)",
    "type": "CPP"
  },
  {
    "name": "t bracketProcessChar(BracketData*, int)",
    "type": "CPP"
  },
  {
    "name": "t bracketProcessBoundary(BracketData*, int, unsigned char, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t bracketAddOpening(BracketData*, char16_t, int)",
    "type": "CPP"
  },
  {
    "name": "t fixN0c(BracketData*, int, int, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t processPropertySeq(UBiDi*, LevState*, unsigned char, int, int)",
    "type": "CPP"
  },
  {
    "name": "t setLevelsOutsideIsolates(UBiDi*, int, int, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_addPropertyStarts_73",
    "type": "CPP"
  },
  {
    "name": "t _enumPropertyStartsRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getMaxValue_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getClass_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_isMirrored_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getMirror_73",
    "type": "CPP"
  },
  {
    "name": "t getMirror(int, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_isBidiControl_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_isJoinControl_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getJoiningType_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getJoiningGroup_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getPairedBracketType_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getPairedBracket_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charDirection_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isMirrored_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charMirror_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getBidiPairedBracket_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_setLine_73",
    "type": "CPP"
  },
  {
    "name": "t setTrailingWSStart(UBiDi*)",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLevelAt_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLevels_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLogicalRun_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_countRuns_73",
    "type": "CPP"
  },
  {
    "name": "t _ubidi_getRuns_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getVisualRun_73",
    "type": "CPP"
  },
  {
    "name": "t getRunFromLogicalIndex(UBiDi*, int)",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_reorderLogical_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_reorderVisual_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getVisualIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLogicalIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getLogicalMap_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_getVisualMap_73",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_invertMap_73",
    "type": "CPP"
  },
  {
    "name": "T _ubiditransform_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ubiditransform_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ubiditransform_transform_73",
    "type": "CPP"
  },
  {
    "name": "t resolveBaseDirection(char16_t const*, unsigned int, unsigned char*, unsigned char*)",
    "type": "CPP"
  },
  {
    "name": "t findMatchingScheme(unsigned char, unsigned char, UBiDiOrder, UBiDiOrder)",
    "type": "CPP"
  },
  {
    "name": "t updateSrc(UBiDiTransform*, char16_t const*, unsigned int, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_shapeArabic(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_resolve(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_reorder(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_reverse(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_setInverse(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_mirror(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t action_setRunsOnly(UBiDiTransform*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_writeReverse_73",
    "type": "CPP"
  },
  {
    "name": "t doWriteReverse(char16_t const*, int, char16_t*, int, unsigned short, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ubidi_writeReordered_73",
    "type": "CPP"
  },
  {
    "name": "t doWriteForward(char16_t const*, int, char16_t*, int, unsigned short, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_setText_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_openRules_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_openBinaryRules_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_safeClone_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_setUText_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_current_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_next_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_previous_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_first_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_last_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_preceding_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_following_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_getAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_isBoundary_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_getRuleStatus_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_getRuleStatusVec_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_refreshUText_73",
    "type": "CPP"
  },
  {
    "name": "T _ubrk_getBinaryRules_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_addPropertyStarts_73",
    "type": "CPP"
  },
  {
    "name": "t _enumPropertyStartsRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _ucase_getSingleton_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_getTrie_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_tolower_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_toupper_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_totitle_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_addCaseClosure_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_addSimpleCaseClosure_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::addOneSimpleCaseClosure(int, int, USetAdder const*)",
    "type": "CPP"
  },
  {
    "name": "t _ucase_addStringCaseClosure_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FullCaseFoldingIterator::FullCaseFoldingIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FullCaseFoldingIterator::FullCaseFoldingIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::FullCaseFoldingIterator::next(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T _ucase_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_getTypeOrIgnorable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_isSoftDotted_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_isCaseSensitive_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_getCaseLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_toFullLower_73",
    "type": "CPP"
  },
  {
    "name": "t isFollowedByCasedLetter(int (*)(void*, signed char), void*, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _ucase_toFullUpper_73",
    "type": "CPP"
  },
  {
    "name": "t toUpperOrTitle(int, int (*)(void*, signed char), void*, char16_t const**, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _ucase_toFullTitle_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_fold_73",
    "type": "CPP"
  },
  {
    "name": "T _ucase_toFullFolding_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isULowercase_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isUUppercase_73",
    "type": "CPP"
  },
  {
    "name": "T _u_tolower_73",
    "type": "CPP"
  },
  {
    "name": "T _u_toupper_73",
    "type": "CPP"
  },
  {
    "name": "T _u_totitle_73",
    "type": "CPP"
  },
  {
    "name": "T _u_foldCase_73",
    "type": "CPP"
  },
  {
    "name": "t _ucase_hasBinaryProperty_73",
    "type": "CPP"
  },
  {
    "name": "t UCaseMap::UCaseMap(char const*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_setLocale_73",
    "type": "CPP"
  },
  {
    "name": "t UCaseMap::UCaseMap(char const*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UCaseMap::~UCaseMap()",
    "type": "CPP"
  },
  {
    "name": "t UCaseMap::~UCaseMap()",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_getLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_getOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_setOptions_73",
    "type": "CPP"
  },
  {
    "name": "t _ucasemap_internalUTF8ToTitle_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::utf8_caseContextIterator(void*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::toLower(int, unsigned int, unsigned char const*, UCaseContext*, int, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::isFollowedByCasedLetter(unsigned char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::toUpper(unsigned int, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t ucasemap_mapUTF8(int, unsigned int, icu_73::BreakIterator*, char const*, int, void (*)(int, unsigned int, icu_73::BreakIterator*, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&), icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t ucasemap_mapUTF8(int, unsigned int, icu_73::BreakIterator*, char*, int, char const*, int, void (*)(int, unsigned int, icu_73::BreakIterator*, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&), icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_utf8ToLower_73",
    "type": "CPP"
  },
  {
    "name": "t ucasemap_internalUTF8ToLower(int, unsigned int, icu_73::BreakIterator*, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_utf8ToUpper_73",
    "type": "CPP"
  },
  {
    "name": "t ucasemap_internalUTF8ToUpper(int, unsigned int, icu_73::BreakIterator*, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_utf8FoldCase_73",
    "type": "CPP"
  },
  {
    "name": "t ucasemap_internalUTF8Fold(int, unsigned int, icu_73::BreakIterator*, unsigned char const*, int, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToLower(char const*, unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToUpper(char const*, unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8Fold(unsigned int, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToLower(char const*, unsigned int, char const*, int, char*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToUpper(char const*, unsigned int, char const*, int, char*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8Fold(unsigned int, char const*, int, char*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToTitle(char const*, unsigned int, icu_73::BreakIterator*, icu_73::StringPiece, icu_73::ByteSink&, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::utf8ToTitle(char const*, unsigned int, icu_73::BreakIterator*, char const*, int, char*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_getBreakIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_setBreakIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_utf8ToTitle_73",
    "type": "CPP"
  },
  {
    "name": "T _u_catopen_73",
    "type": "CPP"
  },
  {
    "name": "T _u_catclose_73",
    "type": "CPP"
  },
  {
    "name": "T _u_catgets_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charType_73",
    "type": "CPP"
  },
  {
    "name": "T _u_enumCharTypes_73",
    "type": "CPP"
  },
  {
    "name": "t _enumTypeValue(void const*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t _enumTypeRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _u_islower_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isupper_73",
    "type": "CPP"
  },
  {
    "name": "T _u_istitle_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isdigit_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isxdigit_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isalpha_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isUAlphabetic_73",
    "type": "CPP"
  },
  {
    "name": "t _u_getUnicodeProperties_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isalnum_73",
    "type": "CPP"
  },
  {
    "name": "t _u_isalnumPOSIX_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isdefined_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isbase_73",
    "type": "CPP"
  },
  {
    "name": "T _u_iscntrl_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isISOControl_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isspace_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isJavaSpaceChar_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isWhitespace_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isblank_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isUWhiteSpace_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isprint_73",
    "type": "CPP"
  },
  {
    "name": "t _u_isprintPOSIX_73",
    "type": "CPP"
  },
  {
    "name": "t _u_isgraphPOSIX_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isgraph_73",
    "type": "CPP"
  },
  {
    "name": "T _u_ispunct_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isIDIgnorable_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isJavaIDStart_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isJavaIDPart_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charDigitValue_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getNumericValue_73",
    "type": "CPP"
  },
  {
    "name": "T _u_digit_73",
    "type": "CPP"
  },
  {
    "name": "T _u_forDigit_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getUnicodeVersion_73",
    "type": "CPP"
  },
  {
    "name": "t _u_getMainProperties_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_getMaxValues_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charAge_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getScript_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_hasScript_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getScriptExtensions_73",
    "type": "CPP"
  },
  {
    "name": "T _ublock_getCode_73",
    "type": "CPP"
  },
  {
    "name": "t _uchar_addPropertyStarts_73",
    "type": "CPP"
  },
  {
    "name": "t _enumPropertyStartsRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t _upropsvec_addPropertyStarts_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::~UCharsTrie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::~UCharsTrie()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::current() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::firstForCodePoint(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::next(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::nextForCodePoint(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::branchNext(char16_t const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::nextImpl(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::next(icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::findUniqueValueFromBranch(char16_t const*, int, signed char, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::findUniqueValue(char16_t const*, signed char, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::getNextUChars(icu_73::Appendable&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::getNextBranchUChars(char16_t const*, int, icu_73::Appendable&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieElement::setTo(icu_73::UnicodeString const&, int, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieElement::compareStringTo(icu_73::UCharsTrieElement const&, icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieElement::getString(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCharsTrieBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCharsTrieBuilder(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::~UCharsTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::~UCharsTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::~UCharsTrieBuilder()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::add(icu_73::UnicodeString const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::build(UStringTrieBuildOption, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::buildUChars(UStringTrieBuildOption, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::buildUnicodeString(UStringTrieBuildOption, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareElementStrings(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::getElementStringLength(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::getElementUnit(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::getElementValue(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::getLimitOfLinearMatch(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::countElementUnits(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::skipElementsBySomeUnits(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::indexOfElementWithNextUnit(int, int, char16_t) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCTLinearMatchNode::UCTLinearMatchNode(char16_t const*, int, icu_73::StringTrieBuilder::Node*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCTLinearMatchNode::UCTLinearMatchNode(char16_t const*, int, icu_73::StringTrieBuilder::Node*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCTLinearMatchNode::operator==(icu_73::StringTrieBuilder::Node const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::UCTLinearMatchNode::write(icu_73::StringTrieBuilder&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::write(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::createLinearMatchNode(int, int, int, icu_73::StringTrieBuilder::Node*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::ensureCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::write(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::writeElementUnits(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::writeValueAndFinal(int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::writeValueAndType(signed char, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrieBuilder::writeDeltaTo(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::matchNodesCanHaveValues() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UCharsTrieBuilder::getMinLinearMatch() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::Iterator(icu_73::ConstChar16Ptr, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::Iterator(icu_73::ConstChar16Ptr, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::Iterator(icu_73::UCharsTrie const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::Iterator(icu_73::UCharsTrie const&, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::~Iterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::hasNext() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::next(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharsTrie::Iterator::branchNext(char16_t const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::ConstChar16Ptr, int, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::UCharCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::UCharCharacterIterator(icu_73::UCharCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::operator=(icu_73::UCharCharacterIterator const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::~UCharCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::~UCharCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::~UCharCharacterIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::operator==(icu_73::ForwardCharacterIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::first()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::firstPostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::last()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::setIndex(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::current() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::nextPostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::hasNext()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::previous()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::hasPrevious()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::first32()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::first32PostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::last32()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::setIndex32(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::current32() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::next32()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::next32PostInc()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::previous32()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::move(int, icu_73::CharacterIterator::EOrigin)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::move32(int, icu_73::CharacterIterator::EOrigin)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::setText(icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UCharCharacterIterator::getText(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T _u_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "t _ucln_lib_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "T _ucln_cleanupOne_73",
    "type": "CPP"
  },
  {
    "name": "t _ucln_common_registerCleanup_73",
    "type": "CPP"
  },
  {
    "name": "T _ucln_registerCleanup_73",
    "type": "CPP"
  },
  {
    "name": "t _udata_getHeaderSize_73",
    "type": "CPP"
  },
  {
    "name": "t _udata_getInfoSize_73",
    "type": "CPP"
  },
  {
    "name": "t _udata_checkCommonData_73",
    "type": "CPP"
  },
  {
    "name": "t offsetTOCLookupFn(UDataMemory const*, char const*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t offsetTOCEntryCount(UDataMemory const*)",
    "type": "CPP"
  },
  {
    "name": "t pointerTOCLookupFn(UDataMemory const*, char const*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t pointerTOCEntryCount(UDataMemory const*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_openPackage_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_openU_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_openCCSID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_safeClone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getAvailableName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_countAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getSubstChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setSubstChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setSubstString_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setFromUCallBack_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_fromUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_reset_73",
    "type": "CPP"
  },
  {
    "name": "t _reset(UConverter*, UConverterResetChoice, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_resetToUnicode_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_resetFromUnicode_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getMaxCharSize_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getMinCharSize_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getCCSID_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getPlatform_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getToUCallBack_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getFromUCallBack_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setToUCallBack_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_fromUnicode_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_outputOverflowFromUnicode(UConverter*, char**, char const*, int**, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _fromUnicodeWithCallback(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_toUnicode_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_outputOverflowToUnicode(UConverter*, char16_t**, char16_t const*, int**, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _toUnicodeWithCallback(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_toUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getNextUChar_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_convertEx_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_convert_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_internalConvert(UConverter*, UConverter*, char*, int, char const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_toAlgorithmic_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_convertAlgorithmic(signed char, UConverterType, UConverter*, char*, int, char const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_fromAlgorithmic_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getStarters_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_fixFileSeparator_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_getAmbiguous(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_isAmbiguous_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_usesFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getInvalidChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getInvalidUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_detectUnicodeSignature_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_fromUCountPending_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_toUCountPending_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_isFixedWidth_73",
    "type": "CPP"
  },
  {
    "name": "t _updateOffsets(int*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t _ISO2022Open(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISO2022Close(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _ISO2022Reset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _ISO2022getName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _ISO_2022_WriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISO_2022_SafeClone(UConverter const*, void*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISO_2022_GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_ISO_2022_JP_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t changeState_2022(UConverter*, char const**, char const*, Variant2022, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_ISO_2022_KR_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_ISO_2022_KR_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_ISO_2022_CN_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_ISO_2022_CN_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_enableCleanup_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_load_73",
    "type": "CPP"
  },
  {
    "name": "t createConverterFromFile(UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_shareConverterData(UConverterSharedData*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_unload_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_deleteSharedConverterData(UConverterSharedData*)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_unloadSharedDataIfReady_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_incrementRefCount_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_loadSharedData_73",
    "type": "CPP"
  },
  {
    "name": "t parseConverterOptions(char const*, UConverterNamePieces*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_createConverter_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_createConverterFromSharedData_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_canCreateConverter_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_createAlgorithmicConverter_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_createConverterFromPackage_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_flushCache_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_bld_countAvailableConverters_73",
    "type": "CPP"
  },
  {
    "name": "t haveAvailableConverterList(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_bld_getAvailableConverter_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getDefaultName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_setDefaultName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_swap_73",
    "type": "CPP"
  },
  {
    "name": "t isCnvAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_cbFromUWriteBytes_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_cbFromUWriteUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_cbFromUWriteSub_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_cbToUWriteUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_cbToUWriteSub_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_getCompleteUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_getNonSurrogateUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_fromUWriteBytes_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_toUWriteUChars_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_toUWriteCodePoint_73",
    "type": "CPP"
  },
  {
    "name": "t _CompoundTextOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _CompoundTextClose(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _CompoundTextReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_CompoundText_OFFSETS(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_CompoundText_OFFSETS(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _CompoundTextgetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _CompoundText_GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_FROM_U_CALLBACK_STOP_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_TO_U_CALLBACK_STOP_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_FROM_U_CALLBACK_SKIP_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_FROM_U_CALLBACK_SUBSTITUTE_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_FROM_U_CALLBACK_ESCAPE_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_TO_U_CALLBACK_SKIP_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_TO_U_CALLBACK_SUBSTITUTE_73",
    "type": "CPP"
  },
  {
    "name": "T _UCNV_TO_U_CALLBACK_ESCAPE_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extInitialMatchToU_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_extMatchToU(int const*, signed char, char const*, int, char const*, int, unsigned int*, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extSimpleMatchToU_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extContinueMatchToU_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extInitialMatchFromU_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_extMatchFromU(int const*, int, char16_t const*, int, char16_t const*, int, unsigned int*, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extSimpleMatchFromU_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extContinueMatchFromU_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_extGetUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_extGetUnicodeSetString(UConverterSharedData const*, int const*, USetAdder const*, UConverterUnicodeSet, int, int, char16_t*, int, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_io_stripASCIIForCompare_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_io_stripEBCDICForCompare_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_compareNames_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_io_getConverterName_73",
    "type": "CPP"
  },
  {
    "name": "t haveAliasData(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t findConverter(char const*, signed char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_openStandardNames_73",
    "type": "CPP"
  },
  {
    "name": "t findTaggedAliasListsOffset(char const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getStandard_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getStandardName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_countAliases_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getAlias_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getAliases_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_countStandards_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getCanonicalName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_openAllNames_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_io_countKnownConverters_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_swapAliases_73",
    "type": "CPP"
  },
  {
    "name": "t io_compareRows(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t getTagNumber(char const*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_closeUEnumeration(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_countStandardAliases(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_nextStandardAliases(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_resetStandardAliases(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_countAllConverters(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_nextAllConverters(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_io_resetAllConverters(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen1(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSClose(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSFromUnicode(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSSafeClone(UConverter const*, void*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpenWorker(UConverter*, UConverterLoadArgs*, UErrorCode*, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSGetNextUCharWorker(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t LMBCSConversionWorker(UConverterDataLMBCS*, unsigned char, unsigned char*, char16_t*, unsigned char*, signed char*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen2(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen3(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen4(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen5(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen6(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen8(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen11(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen16(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen17(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen18(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _LMBCSOpen19(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getUnicodeSet_73",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16BEGetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16LEGetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16Open(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16Reset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16GetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF16GetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_toUnicode_UTF32_BE(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_toUnicode_UTF32_BE_OFFSET_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_fromUnicode_UTF32_BE(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_fromUnicode_UTF32_BE_OFFSET_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_getNextUChar_UTF32_BE(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_toUnicode_UTF32_LE(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_toUnicode_UTF32_LE_OFFSET_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_fromUnicode_UTF32_LE(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_fromUnicode_UTF32_LE_OFFSET_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t T_UConverter_getNextUChar_UTF32_LE(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF32Open(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF32Reset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _UTF32ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF32GetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF7Open(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF7Reset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _UTF7ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF7FromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _UTF7GetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _IMAPToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _IMAPFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_fromUnicode_UTF8_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_fromUnicode_UTF8_OFFSETS_LOGIC_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_toUnicode_UTF8(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_toUnicode_UTF8_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_getNextUChar_UTF8(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_UTF8FromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Bocu1ToUnicode(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Bocu1ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Bocu1FromUnicode(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Bocu1FromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t packDiff(int)",
    "type": "CPP"
  },
  {
    "name": "T _ucnv_getDisplayName_73",
    "type": "CPP"
  },
  {
    "name": "t _HZOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _HZClose(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _HZReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_HZ_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_HZ_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _HZ_WriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _HZ_SafeClone(UConverter const*, void*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _HZ_GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCIIOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCIIClose(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCIIReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_toUnicode_ISCII_OFFSETS_LOGIC(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t UConverter_fromUnicode_ISCII_OFFSETS_LOGIC(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCIIgetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCII_SafeClone(UConverter const*, void*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ISCIIGetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Latin1ToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Latin1FromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Latin1GetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _Latin1GetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_Latin1FromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ASCIIToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ASCIIGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ASCIIGetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_ASCIIFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSGetFilteredUnicodeSetForUnicode_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSGetUnicodeSetForUnicode_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSToUnicodeWithOffsets_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSGetFallback(UConverterMBCSTable*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t isSingleOrLead(int const (*) [256], unsigned char, signed char, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSSimpleGetNextUChar_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSFromUnicodeWithOffsets_73",
    "type": "CPP"
  },
  {
    "name": "t _extFromU(UConverter*, UConverterSharedData const*, int, char16_t const**, char16_t const*, unsigned char**, unsigned char const*, int**, int, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSFromUChar32_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSIsLeadByte_73",
    "type": "CPP"
  },
  {
    "name": "t _ucnv_MBCSGetType_73",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSLoad(UConverterSharedData*, UConverterLoadArgs*, unsigned char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSUnload(UConverterSharedData*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSGetNextUChar(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSGetStarters(UConverter const*, signed char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSGetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSWriteSub(UConverterFromUnicodeArgs*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_MBCSGetUnicodeSet(UConverter const*, USetAdder const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t getStateProp(int const (*) [256], signed char*, int)",
    "type": "CPP"
  },
  {
    "name": "t enumToU(UConverterMBCSTable*, signed char*, int, unsigned int, unsigned int, signed char (*)(void const*, unsigned int, int*), void const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_SBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnv_DBCSFromUTF8(UConverterFromUnicodeArgs*, UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t hasValidTrailBytes(int const (*) [256], unsigned char)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUOpen(UConverter*, UConverterLoadArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUClose(UConverter*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUReset(UConverter*, UConverterResetChoice)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUToUnicode(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUToUnicodeWithOffsets(UConverterToUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUFromUnicode(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUFromUnicodeWithOffsets(UConverterFromUnicodeArgs*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUGetName(UConverter const*)",
    "type": "CPP"
  },
  {
    "name": "t _SCSUSafeClone(UConverter const*, void*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t useDynamicWindow(SCSUData*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t getDynamicOffset(unsigned int, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_open_73",
    "type": "CPP"
  },
  {
    "name": "t generateSelectorData(UConverterSelector*, UPropsVectors*, USet const*, UConverterUnicodeSet, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_serialize_73",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_openFromSerialized_73",
    "type": "CPP"
  },
  {
    "name": "t ucnvsel_swap(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_selectForString_73",
    "type": "CPP"
  },
  {
    "name": "t selectForMask(UConverterSelector const*, unsigned int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucnvsel_selectForUTF8_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalUConverterSelectorPointer::~LocalUConverterSelectorPointer()",
    "type": "CPP"
  },
  {
    "name": "t ucnvsel_close_selector_iterator(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ucnvsel_count_encodings(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnvsel_next_encoding(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucnvsel_reset_iterator(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_looksLikeCollationBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ucol_swap_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::swapFormatVersion3(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::swapFormatVersion4(UDataSwapper const*, void const*, int, void*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucol_swapInverseUCA_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_openFromBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_close_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_getValueWidth_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_internalSmallIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_internalSmallU8Index_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_internalU8PrevIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_get_73",
    "type": "CPP"
  },
  {
    "name": "t _ucptrie_internalGetRange_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_getRange_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getRange(void const*, int, unsigned int (*)(void const*, unsigned int), void const*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_toBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ucpmap_get_73",
    "type": "CPP"
  },
  {
    "name": "T _ucpmap_getRange_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::EquivIterator::next()",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_register_73",
    "type": "CPP"
  },
  {
    "name": "t CReg::reg(char16_t const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_unregister_73",
    "type": "CPP"
  },
  {
    "name": "t CReg::unreg(void const*)",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_forLocale_73",
    "type": "CPP"
  },
  {
    "name": "t CReg::get(char const*)",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getPluralName_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_parseCurrency_73",
    "type": "CPP"
  },
  {
    "name": "t getCacheEntry(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t searchCurrencyName(CurrencyNameStruct const*, int, char16_t const*, int, int*, int*, int*)",
    "type": "CPP"
  },
  {
    "name": "t releaseCacheEntry(CurrencyNameCacheEntry*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_currencyLeads(char const*, icu_73::UnicodeSet&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getStaticCurrencyName_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getDefaultFractionDigits_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getDefaultFractionDigitsForUsage_73",
    "type": "CPP"
  },
  {
    "name": "t _findMetaData(char16_t const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getRoundingIncrement_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getRoundingIncrementForUsage_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_isAvailable_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_openISOCurrencies_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_countCurrencies_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_forLocaleAndDate_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getKeywordValuesForLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ucurr_getNumericCode_73",
    "type": "CPP"
  },
  {
    "name": "t currency_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t CReg::CReg(char16_t const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t deleteCacheEntry(CurrencyNameCacheEntry*)",
    "type": "CPP"
  },
  {
    "name": "t deleteCurrencyNames(CurrencyNameStruct*, int)",
    "type": "CPP"
  },
  {
    "name": "t getCurrSymbolsEquiv()",
    "type": "CPP"
  },
  {
    "name": "t toUpperCase(char16_t const*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "t fallback(char*)",
    "type": "CPP"
  },
  {
    "name": "t currencyNameComparator(void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "t deleteUnicode(void*)",
    "type": "CPP"
  },
  {
    "name": "t deleteIsoCodeEntry(void*)",
    "type": "CPP"
  },
  {
    "name": "t ucurr_closeCurrencyList(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ucurr_countCurrencyList(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucurr_nextCurrencyList(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucurr_resetCurrencyList(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UDataPathIterator::UDataPathIterator(char const*, char const*, char const*, char const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UDataPathIterator::UDataPathIterator(char const*, char const*, char const*, char const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UDataPathIterator::next(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udata_setCommonData_73",
    "type": "CPP"
  },
  {
    "name": "t setCommonICUData(UDataMemory*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udata_setAppData_73",
    "type": "CPP"
  },
  {
    "name": "t udata_cacheDataItem(char const*, UDataMemory*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udata_open_73",
    "type": "CPP"
  },
  {
    "name": "t doOpenChoice(char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udata_openChoice_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_getInfo_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_setFileAccess_73",
    "type": "CPP"
  },
  {
    "name": "t udata_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t udata_getHashTable(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t DataCacheElement_deleter(void*)",
    "type": "CPP"
  },
  {
    "name": "t doLoadFromIndividualFiles(char const*, char const*, char const*, char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t doLoadFromCommonData(signed char, char const*, char const*, char const*, char const*, char const*, char const*, char const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, UErrorCode*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t checkDataItem(DataHeader const*, signed char (*)(void*, char const*, char const*, UDataInfo const*), void*, char const*, char const*, UErrorCode*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UDataPathIterator::~UDataPathIterator()",
    "type": "CPP"
  },
  {
    "name": "t openCommonData(char const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t udata_findCachedData(char const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _UDataMemory_init_73",
    "type": "CPP"
  },
  {
    "name": "t _UDatamemory_assign_73",
    "type": "CPP"
  },
  {
    "name": "T _UDataMemory_createNewInstance_73",
    "type": "CPP"
  },
  {
    "name": "t _UDataMemory_normalizeDataPointer_73",
    "type": "CPP"
  },
  {
    "name": "t _UDataMemory_setData_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_close_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_getMemory_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_getLength_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_getRawMemory_73",
    "type": "CPP"
  },
  {
    "name": "t _UDataMemory_isLoaded_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_readInt16_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_readInt32_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_swapInvStringBlock_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_printError_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_swapDataHeader_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_openSwapper_73",
    "type": "CPP"
  },
  {
    "name": "t uprv_readDirectUInt16(unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t uprv_readSwapUInt16(unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t uprv_readDirectUInt32(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t uprv_readSwapUInt32(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t uprv_writeDirectUInt16(unsigned short*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t uprv_writeSwapUInt16(unsigned short*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t uprv_writeDirectUInt32(unsigned int*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t uprv_writeSwapUInt32(unsigned int*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t uprv_copyArray16(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_copyArray32(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_copyArray64(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_swapArray16(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_swapArray32(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uprv_swapArray64(UDataSwapper const*, void const*, int, void*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _udata_openSwapperForInputData_73",
    "type": "CPP"
  },
  {
    "name": "T _udata_closeSwapper_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_count_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_unextDefault_73",
    "type": "CPP"
  },
  {
    "name": "t _getBuffer(UEnumeration*, int)",
    "type": "CPP"
  },
  {
    "name": "T _uenum_nextDefault_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_unext_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_next_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_reset_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_open_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_create(int (*)(UElement), signed char (*)(UElement, UElement), signed char (*)(UElement, UElement), int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_openSize_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_init_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_init(UHashtable*, int (*)(UElement), signed char (*)(UElement, UElement), signed char (*)(UElement, UElement), int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_initSize_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_nextElement_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setKeyHasher_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setKeyComparator_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setValueComparator_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setKeyDeleter_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setValueDeleter_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_setResizePolicy_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_rehash(UHashtable*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_count_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_get_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_find(UHashtable const*, UElement, int)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iget_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_geti_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_igeti_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_getiAndFound_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_igetiAndFound_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_put_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_put(UHashtable*, UElement, UElement, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iput_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_puti_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iputi_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_putiAllowZero_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iputiAllowZero_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_remove_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_remove(UHashtable*, UElement)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iremove_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_removei_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_iremovei_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_removeAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_removeElement_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_containsKey_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_icontainsKey_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_find_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashIChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_equals_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareIChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashLong_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareLong_73",
    "type": "CPP"
  },
  {
    "name": "t _uhash_allocate(UHashtable*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _uhash_setElement(UHashtable*, UHashElement*, int, UElement, UElement, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_deleteHashtable_73",
    "type": "CPP"
  },
  {
    "name": "T _uidna_toASCII_73",
    "type": "CPP"
  },
  {
    "name": "t _internal_toASCII(char16_t const*, int, char16_t*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uidna_toUnicode_73",
    "type": "CPP"
  },
  {
    "name": "t _internal_toUnicode(char16_t const*, int, char16_t*, int, int, UStringPrepProfile*, UParseError*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uidna_IDNToASCII_73",
    "type": "CPP"
  },
  {
    "name": "T _uidna_IDNToUnicode_73",
    "type": "CPP"
  },
  {
    "name": "T _uidna_compare_73",
    "type": "CPP"
  },
  {
    "name": "T _u_init_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::uinit_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _u_charsToUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _u_UCharsToChars_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isInvariantString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_isInvariantUString_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_ebcdicFromAscii_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_copyAscii_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_asciiFromEbcdic_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_copyEbcdic_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_isEbcdicAtSign_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_compareInvAscii_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_compareInvEbcdic_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_compareInvEbcdicAsAscii_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_ebcdicToAscii_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_ebcdicToLowercaseAscii_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_aestrncpy_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_eastrncpy_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setString_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setUTF16BE_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setCharacterIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setReplaceable_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_current32_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_next32_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_previous32_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_getState_73",
    "type": "CPP"
  },
  {
    "name": "T _uiter_setState_73",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorGetIndex(UCharIterator*, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorMove(UCharIterator*, int, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorHasNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorHasPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorGetState(UCharIterator const*)",
    "type": "CPP"
  },
  {
    "name": "t stringIteratorSetState(UCharIterator*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t noopGetIndex(UCharIterator*, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t noopMove(UCharIterator*, int, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t noopHasNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t noopCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t noopGetState(UCharIterator const*)",
    "type": "CPP"
  },
  {
    "name": "t noopSetState(UCharIterator*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t utf16BEIteratorCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf16BEIteratorNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf16BEIteratorPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorGetIndex(UCharIterator*, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorMove(UCharIterator*, int, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorHasNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorHasPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorGetState(UCharIterator const*)",
    "type": "CPP"
  },
  {
    "name": "t characterIteratorSetState(UCharIterator*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t replaceableIteratorCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t replaceableIteratorNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t replaceableIteratorPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorGetIndex(UCharIterator*, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorMove(UCharIterator*, int, UCharIteratorOrigin)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorHasNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorHasPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorCurrent(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorNext(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorPrevious(UCharIterator*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorGetState(UCharIterator const*)",
    "type": "CPP"
  },
  {
    "name": "t utf8IteratorSetState(UCharIterator*, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ulist_createEmptyList_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_addItemEndList_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_addItemBeginList_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_containsString_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_removeString_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_getNext_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_getListSize_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_resetList_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_deleteList_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_close_keyword_values_iterator_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_count_keyword_values_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_next_keyword_value_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_reset_keyword_values_iterator_73",
    "type": "CPP"
  },
  {
    "name": "T _ulist_getListFromEnum_73",
    "type": "CPP"
  },
  {
    "name": "T _locale_getKeywordsStart_73",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_getKeywords_73",
    "type": "CPP"
  },
  {
    "name": "t compareKeywordStructs(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getKeywordValue_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_getKeywordValue_73",
    "type": "CPP"
  },
  {
    "name": "t locale_canonKeywordName(char*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t getShortestSubtagLength(char const*)",
    "type": "CPP"
  },
  {
    "name": "t _ConvertBCP47(char const*, char*, int, UErrorCode*, int*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_setKeywordValue_73",
    "type": "CPP"
  },
  {
    "name": "t _uloc_getCurrentCountryID_73",
    "type": "CPP"
  },
  {
    "name": "t _findIndex(char const* const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t _uloc_getCurrentLanguageID_73",
    "type": "CPP"
  },
  {
    "name": "t ulocimp_getLanguage_73(char const*, char const**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t ulocimp_getScript_73(char const*, char const**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t ulocimp_getCountry_73(char const*, char const**, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_openKeywordList_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_openKeywords_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getDefault_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getParent_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getLanguage_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getScript_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getCountry_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getVariant_73",
    "type": "CPP"
  },
  {
    "name": "t _getVariant(char const*, char, icu_73::ByteSink&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getName_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_getName_73",
    "type": "CPP"
  },
  {
    "name": "t _canonicalize(char const*, icu_73::ByteSink&, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getBaseName_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_getBaseName_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_canonicalize_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_canonicalize_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getISO3Language_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getISO3Country_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getLCID_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getLocaleForLCID_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_setDefault_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getISOLanguages_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_getISOCountries_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_toUnicodeLocaleKey_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_toUnicodeLocaleType_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_toLegacyKey_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_toLegacyType_73",
    "type": "CPP"
  },
  {
    "name": "t uloc_kw_closeKeywords(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t uloc_kw_countKeywords(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uloc_kw_nextKeyword(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t uloc_kw_resetKeywords(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_toBcpKey_73",
    "type": "CPP"
  },
  {
    "name": "t init()",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_toLegacyKey_73",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_toBcpType_73",
    "type": "CPP"
  },
  {
    "name": "t isSpecialTypeCodepoints(char const*)",
    "type": "CPP"
  },
  {
    "name": "t isSpecialTypeReorderCode(char const*)",
    "type": "CPP"
  },
  {
    "name": "t isSpecialTypeRgKeyValue(char const*)",
    "type": "CPP"
  },
  {
    "name": "t _ulocimp_toLegacyType_73",
    "type": "CPP"
  },
  {
    "name": "t uloc_key_type_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<char const*&, UErrorCode&>(char const*&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t LocExtType* icu_73::MemoryPool<LocExtType, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t LocExtKeyData* icu_73::MemoryPool<LocExtKeyData, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<LocExtKeyData, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<LocExtKeyData*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<LocExtType, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<LocExtType*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<icu_73::CharString, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<icu_73::CharString*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isLanguageSubtag_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isScriptSubtag_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isRegionSubtag_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isVariantSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _isSepListOf(signed char (*)(char const*, int), char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _isVariantSubtag(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isExtensionSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isPrivateuseValueSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isUnicodeLocaleAttribute_73",
    "type": "CPP"
  },
  {
    "name": "t _isAlphaNumericStringLimitedLength(char const*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isUnicodeLocaleAttributes_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isUnicodeLocaleKey_73",
    "type": "CPP"
  },
  {
    "name": "t __isUnicodeLocaleTypeSubtag_73",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isUnicodeLocaleType_73",
    "type": "CPP"
  },
  {
    "name": "T _ultag_getTKeyStart_73",
    "type": "CPP"
  },
  {
    "name": "t _isTKey(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isTransformedExtensionSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _isStatefulSepListOf(signed char (*)(int&, char const*, int), char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _isTransformedExtensionSubtag(int&, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _ultag_isUnicodeExtensionSubtags_73",
    "type": "CPP"
  },
  {
    "name": "t _isUnicodeExtensionSubtag(int&, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T _uloc_toLanguageTag_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_toLanguageTag_73",
    "type": "CPP"
  },
  {
    "name": "T _uloc_forLanguageTag_73",
    "type": "CPP"
  },
  {
    "name": "T _ulocimp_forLanguageTag_73",
    "type": "CPP"
  },
  {
    "name": "t _sortVariants(VariantListEntry*)",
    "type": "CPP"
  },
  {
    "name": "t _isAlphaNumericString(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t _addVariantToList(VariantListEntry**, VariantListEntry*)",
    "type": "CPP"
  },
  {
    "name": "t AttributeListEntry* icu_73::MemoryPool<AttributeListEntry, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<char (&) [100], int&, UErrorCode&>(char (&) [100], int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _addAttributeToList(AttributeListEntry**, AttributeListEntry*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<icu_73::CharString&, UErrorCode&>(icu_73::CharString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _isExtensionSingleton(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<char*, int&, UErrorCode&>(char*&&, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t ExtensionListEntry* icu_73::MemoryPool<ExtensionListEntry, 8>::create<>()",
    "type": "CPP"
  },
  {
    "name": "t _addExtensionToList(ExtensionListEntry**, ExtensionListEntry*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<ExtensionListEntry, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<ExtensionListEntry*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MemoryPool<AttributeListEntry, 8>::~MemoryPool()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::MaybeStackArray<AttributeListEntry*, 8>::~MaybeStackArray()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<char (&) [3], int&, UErrorCode&>(char (&) [3], int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::CharString* icu_73::MemoryPool<icu_73::CharString, 8>::create<char (&) [128], int&, UErrorCode&>(char (&) [128], int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalULanguageTagPointer::~LocalULanguageTagPointer()",
    "type": "CPP"
  },
  {
    "name": "T _uprv_mapFile_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_unmapFile_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_max_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_min_73",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_open_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::MutableCodePointTrie(unsigned int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::LocalPointer<icu_73::(anonymous namespace)::MutableCodePointTrie>::~LocalPointer()",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_close_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::~MutableCodePointTrie()",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_fromUCPMap_73",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_fromUCPTrie_73",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_get_73",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_getRange_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getRange(void const*, int, unsigned int (*)(void const*, unsigned int), void const*, unsigned int*)",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_set_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::set(int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_setRange_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::setRange(int, int, unsigned int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _umutablecptrie_buildImmutable_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::ensureHighStart(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::getDataBlock(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MutableCodePointTrie::allocDataBlock(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::MixedBlocks::init(int, int)",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::(anonymous namespace)::MixedBlocks::extend<unsigned int>(unsigned int const*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t int icu_73::(anonymous namespace)::MixedBlocks::findEntry<unsigned int, unsigned int>(unsigned int const*, unsigned int const*, int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::(anonymous namespace)::MixedBlocks::extend<unsigned short>(unsigned short const*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "t int icu_73::(anonymous namespace)::MixedBlocks::findBlock<unsigned short, unsigned int>(unsigned short const*, unsigned int const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t int icu_73::(anonymous namespace)::MixedBlocks::findBlock<unsigned short, unsigned short>(unsigned short const*, unsigned short const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t int icu_73::(anonymous namespace)::MixedBlocks::findEntry<unsigned short, unsigned short>(unsigned short const*, unsigned short const*, int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMutex::getMutex()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::umtx_init()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMutex::cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _umtx_lock_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UMutex::lock()",
    "type": "CPP"
  },
  {
    "name": "T _umtx_unlock_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::umtx_initImplPreInit(icu_73::UInitOnce&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::umtx_initImplPostInit(icu_73::UInitOnce&)",
    "type": "CPP"
  },
  {
    "name": "T _u_setMutexFunctions_73",
    "type": "CPP"
  },
  {
    "name": "T _u_setAtomicIncDecFunctions_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::umtx_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__call_once_proxy[abi:v15006]<std::__1::tuple<void (&)()>>(void*)",
    "type": "CPP"
  },
  {
    "name": "T _u_charName_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isDataLoaded(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getAlgName(icu_73::AlgorithmicRange*, unsigned int, UCharNameChoice, char*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getName(icu_73::UCharNames*, unsigned int, UCharNameChoice, char*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getExtName(unsigned int, char*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "T _u_getISOComment_73",
    "type": "CPP"
  },
  {
    "name": "T _u_charFromName_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getCharCat(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumNames(icu_73::UCharNames*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)",
    "type": "CPP"
  },
  {
    "name": "T _u_enumCharNames_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumAlgNames(icu_73::AlgorithmicRange*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getMaxCharNameLength_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::calcNameSetsLengths(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_getCharNameCharacters_73",
    "type": "CPP"
  },
  {
    "name": "T _uchar_swapNames_73",
    "type": "CPP"
  },
  {
    "name": "t makeTokenMap(UDataSwapper const*, short*, unsigned short, unsigned char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::expandGroupLengths(unsigned char const*, unsigned short*, unsigned short*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::unames_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::writeFactorSuffix(unsigned short const*, unsigned short, char const*, unsigned int, unsigned short*, char const**, char const**, char*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::getGroup(icu_73::UCharNames*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::expandName(icu_73::UCharNames*, unsigned char const*, unsigned short, UCharNameChoice, char*, unsigned short)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumExtNames(int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::enumGroupNames(icu_73::UCharNames*, unsigned short const*, int, int, signed char (*)(void*, int, UCharNameChoice, char const*, int), void*, UCharNameChoice)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::calcNameSetLength(unsigned short const*, unsigned short, unsigned char const*, signed char*, unsigned int*, unsigned char const**, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ucache_hashKeys_73(UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ucache_compareKeys_73(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ucache_deleteKey_73(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CacheKeyBase::~CacheKeyBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CacheKeyBase::~CacheKeyBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CacheKeyBase::~CacheKeyBase()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::getInstance(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::UnifiedCache(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::UnifiedCache(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::setEvictionPolicy(int, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::unusedCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::autoEvictedCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::keyCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::flush() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_flush(signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::handleUnreferencedObject() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_runEvictionSlice() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::~UnifiedCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::~UnifiedCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::~UnifiedCache()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_nextElement() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_isEvictable(UHashElement const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::removeSoftRef(icu_73::SharedObject const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_computeCountOfItemsToEvict() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_putNew(icu_73::CacheKeyBase const&, icu_73::SharedObject const*, UErrorCode, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_registerPrimary(icu_73::CacheKeyBase const*, icu_73::SharedObject const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_putIfAbsentAndGet(icu_73::CacheKeyBase const&, icu_73::SharedObject const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_inProgress(UHashElement const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_fetch(UHashElement const*, icu_73::SharedObject const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_put(UHashElement const*, icu_73::SharedObject const*, UErrorCode) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_poll(icu_73::CacheKeyBase const&, icu_73::SharedObject const*&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_get(icu_73::CacheKeyBase const&, icu_73::SharedObject const*&, void const*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t void icu_73::SharedObject::copyPtr<icu_73::SharedObject>(icu_73::SharedObject const*, icu_73::SharedObject const*&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::removeHardRef(icu_73::SharedObject const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::addHardRef(icu_73::SharedObject const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnifiedCache::_inProgress(icu_73::SharedObject const*, UErrorCode) const",
    "type": "CPP"
  },
  {
    "name": "t unifiedcache_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeMatcher::~UnicodeMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeMatcher::~UnicodeMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeMatcher::~UnicodeMatcher()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::~UnicodeFilter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::~UnicodeFilter()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeFilter::~UnicodeFilter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::~UnicodeFilter()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeFilter::~UnicodeFilter()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::toMatcher() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::setData(icu_73::TransliterationRuleData const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFilter::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeFilter::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::~UnicodeFunctor()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::~UnicodeFunctor()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::~UnicodeFunctor()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::toMatcher() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeFunctor::toReplacer() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SymbolTable::~SymbolTable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SymbolTable::~SymbolTable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::SymbolTable::~SymbolTable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::hasStrings() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::stringsSize() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::stringsContains(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::add(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::operator=(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeSet const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::ensureCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::allocateStrings(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::cloneUnicodeString(UElement*, UElement*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::setToBogus()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::setPattern(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeSet const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::~UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::releasePattern()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::~UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::~UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::~UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::~UnicodeSet()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::copyFrom(icu_73::UnicodeSet const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::cloneAsThawed() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::operator==(icu_73::UnicodeSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::hashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::size() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getRangeCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getRangeEnd(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getRangeStart(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::isEmpty() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::contains(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::findCodePoint(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::contains(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::contains(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getSingleCP(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::containsAll(icu_73::UnicodeSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::containsAll(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::span(char16_t const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::containsNone(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::containsNone(icu_73::UnicodeSet const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::containsNone(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::matchesIndexValue(unsigned char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::matchRest(icu_73::Replaceable const&, int, int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::matches(icu_73::Replaceable const&, int&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::addAll(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::addMatchSetTo(icu_73::UnicodeSet&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::indexOf(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::charAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::set(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::clear()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complement(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::add(int const*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::add(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::add(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_add(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::compareUnicodeString(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::addAll(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retainAll(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retainAll(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complementAll(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complementAll(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::removeAll(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::removeAll(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::removeAllStrings()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::createFrom(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::createFromAll(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retain(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retain(int const*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retain(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::retain(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::remove(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::remove(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::remove(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::exclusiveOr(int const*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complement(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complement()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::complement(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::getString(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::compact()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(unsigned short const*, int, icu_73::UnicodeSet::ESerialization, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(unsigned short const*, int, icu_73::UnicodeSet::ESerialization, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::serialize(unsigned short*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::nextCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::ensureBufferCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::swapBuffers()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_appendToPat(icu_73::UnicodeString&, icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_appendToPat(icu_73::UnicodeString&, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_appendToPat(icu_73::UnicodeString&, int, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::_generatePattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to icu_73::UnicodeSet::toPattern(icu_73::UnicodeString&, signed char) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::freeze()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::spanBack(char16_t const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::spanUTF8(char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::spanBackUTF8(char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPattern(icu_73::UnicodeString const&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, icu_73::ParsePosition&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPattern(icu_73::UnicodeString const&, icu_73::ParsePosition&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, icu_73::ParsePosition&, unsigned int, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::closeOver(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSet::setPattern(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::closeOverCaseInsensitive(bool)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::closeOverAddCaseMappings()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_set_add(USet*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_set_addRange(USet*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::_set_addString(USet*, char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::maybeOnlyCaseSensitive(icu_73::UnicodeSet const&, icu_73::UnicodeSet&)",
    "type": "CPP"
  },
  {
    "name": "t _uniset_getUnicode32Instance_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPattern(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::UnicodeSet(icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPatternIgnoreSpace(icu_73::UnicodeString const&, icu_73::ParsePosition&, icu_73::SymbolTable const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPattern(icu_73::RuleCharacterIterator&, icu_73::SymbolTable const*, icu_73::UnicodeString&, unsigned int, icu_73::UnicodeSet& (icu_73::UnicodeSet::*)(int), int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::resemblesPattern(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::resemblesPropertyPattern(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::resemblesPropertyPattern(icu_73::RuleCharacterIterator&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPropertyPattern(icu_73::RuleCharacterIterator&, icu_73::UnicodeString&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::truncate(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::UnicodeSetPointer::~UnicodeSetPointer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyFilter(signed char (*)(int, void*), void*, icu_73::UnicodeSet const*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyIntPropertyValue(UProperty, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::generalCategoryMaskFilter(int, void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::scriptExtensionsFilter(int, void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::intPropertyFilter(int, void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPropertyAlias(icu_73::UnicodeString const&, icu_73::UnicodeString const&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::numericValueFilter(int, void*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::mungeCharName(char*, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::versionFilter(int, void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSet::applyPropertyPattern(icu_73::UnicodeString const&, icu_73::ParsePosition&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t uset_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_73::UnicodeSet const&, icu_73::UVector const&, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::addToSpanNotSet(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_73::UnicodeSet const&, icu_73::UVector const&, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_73::UnicodeSetStringSpan const&, icu_73::UVector const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::UnicodeSetStringSpan(icu_73::UnicodeSetStringSpan const&, icu_73::UVector const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::~UnicodeSetStringSpan()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::~UnicodeSetStringSpan()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::span(char16_t const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanNot(char16_t const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OffsetList::popMinimum()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanBack(char16_t const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanNotBack(char16_t const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanUTF8(unsigned char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanNotUTF8(unsigned char const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::spanOneUTF8(icu_73::UnicodeSet const&, unsigned char const*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanBackUTF8(unsigned char const*, int, USetSpanCondition) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeSetStringSpan::spanNotBackUTF8(unsigned char const*, int) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::OffsetList::~OffsetList()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Replaceable::~Replaceable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Replaceable::~Replaceable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Replaceable::~Replaceable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::operator+(icu_73::UnicodeString const&, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::~UnicodeString()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::addRef()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::removeRef()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::refCount() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::releaseArray()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::allocate(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doAppend(char16_t const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(signed char, icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::setToBogus()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(signed char, icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char16_t*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, icu_73::UnicodeString::EInvariant)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::cloneArrayIfNeeded(int, int, signed char, int**, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, icu_73::UnicodeString::EInvariant)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::setToUTF8(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::copyFrom(icu_73::UnicodeString const&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::copyFieldsFrom(icu_73::UnicodeString&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Replaceable::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::~UnicodeString()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::~UnicodeString()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::fromUTF8(icu_73::StringPiece)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::fromUTF32(int const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getBuffer(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::releaseBuffer(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::operator=(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::fastCopyFrom(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::operator=(icu_73::UnicodeString&&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::swap(icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::unescape() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::unescapeAt(int&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::append(int)",
    "type": "CPP"
  },
  {
    "name": "t UnicodeString_charAt(int, void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doEquals(icu_73::UnicodeString const&, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doEqualsSubstring(int, int, char16_t const*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doCompare(int, int, char16_t const*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doCompareCodePointOrder(int, int, char16_t const*, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getLength() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getCharAt(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getChar32At(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::char32At(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getChar32Start(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getChar32Limit(int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::countChar32(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::hasMoreChar32Than(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::moveIndex32(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doExtract(int, int, char16_t*, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extract(icu_73::Char16Ptr, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extract(int, int, char*, int, icu_73::UnicodeString::EInvariant) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::tempSubString(int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toUTF8(int, int, char*, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extract(int, int, char*, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extractBetween(int, int, icu_73::UnicodeString&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toUTF8(icu_73::ByteSink&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toUTF32(int*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::indexOf(char16_t const*, int, int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doIndexOf(char16_t, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doIndexOf(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::lastIndexOf(char16_t const*, int, int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doLastIndexOf(char16_t, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doLastIndexOf(int, int, int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::findAndReplace(int, int, icu_73::UnicodeString const&, int, int, icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::unBogus()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::getTerminatedBuffer()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::setTo(signed char, icu_73::ConstChar16Ptr, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::setTo(char16_t*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::setCharAt(int, char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::replace(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doReplace(int, int, char16_t const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doReplace(int, int, icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doAppend(icu_73::UnicodeString const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::handleReplaceBetween(int, int, icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::copy(int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::Replaceable::hasMetaData() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::hasMetaData() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doReverse(int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::padLeading(int, char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::padTrailing(int, char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doHashCode() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::~UnicodeStringAppendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::~UnicodeStringAppendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::~UnicodeStringAppendable()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::appendCodeUnit(char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::appendCodePoint(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::appendString(char16_t const*, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::reserveAppendCapacity(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeStringAppendable::getAppendBuffer(int, int, char16_t*, int, int*)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doCaseCompare(int, int, char16_t const*, int, int, unsigned int) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::caseMap(int, unsigned int, icu_73::BreakIterator*, int (*)(int, unsigned int, icu_73::BreakIterator*, char16_t*, int, char16_t const*, int, icu_73::Edits*, UErrorCode&))",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::foldCase(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _uhash_hashCaselessUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _uhash_compareCaselessUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toLower()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toLower(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toUpper()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toUpper(icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doCodepageCreate(char const*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, UConverter*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doCodepageCreate(char const*, int, UConverter*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::UnicodeString(char const*, int, UConverter*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extract(int, int, char*, unsigned int, char const*) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::doExtract(int, int, char*, int, UConverter*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::extract(char*, int, UConverter*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::trim()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toTitle(icu_73::BreakIterator*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toTitle(icu_73::BreakIterator*, icu_73::Locale const&, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeString::toTitle(icu_73::BreakIterator*, icu_73::Locale const&)",
    "type": "CPP"
  },
  {
    "name": "T _unorm_quickCheck_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_quickCheckWithOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_isNormalized_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_isNormalizedWithOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_normalize_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_previous_73",
    "type": "CPP"
  },
  {
    "name": "t unorm_iterate(UCharIterator*, signed char, char16_t*, int, UNormalizationMode, int, signed char, signed char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _unorm_next_73",
    "type": "CPP"
  },
  {
    "name": "T _unorm_concatenate_73",
    "type": "CPP"
  },
  {
    "name": "t _concatenate(char16_t const*, int, char16_t const*, int, char16_t*, int, icu_73::Normalizer2 const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _iterate(UCharIterator*, signed char, char16_t*, int, icu_73::Normalizer2 const*, signed char, signed char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::operator!=(icu_73::UnicodeString const&) const",
    "type": "CPP"
  },
  {
    "name": "T _unorm_compare_73",
    "type": "CPP"
  },
  {
    "name": "t _normalize(icu_73::Normalizer2 const*, char16_t const*, int, icu_73::UnicodeString&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMemory::operator new(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMemory::operator delete(void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMemory::operator new[](unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UMemory::operator delete[](void*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UObject::~UObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UObject::~UObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UObject::~UObject()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UObject::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T _uprv_deleteUObject_73",
    "type": "CPP"
  },
  {
    "name": "T _u_hasBinaryProperty_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isIDStart_73",
    "type": "CPP"
  },
  {
    "name": "T _u_isIDPart_73",
    "type": "CPP"
  },
  {
    "name": "T _u_stringHasBinaryProperty_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getIntPropertyValue_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getIntPropertyMinValue_73",
    "type": "CPP"
  },
  {
    "name": "T _u_getIntPropertyMaxValue_73",
    "type": "CPP"
  },
  {
    "name": "t _uprops_getSource_73",
    "type": "CPP"
  },
  {
    "name": "t _uprops_addPropertyStarts_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::ulayout_ensureData(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _u_getFC_NFKC_Closure_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::UnicodeString::setTo(int)",
    "type": "CPP"
  },
  {
    "name": "t defaultContains(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isBidiControl(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isMirrored(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t hasFullCompositionExclusion(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isJoinControl(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t caseBinaryPropertyContains(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isNormInert(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isCanonSegmentStarter(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isPOSIX_alnum(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isPOSIX_blank(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isPOSIX_graph(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isPOSIX_print(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isPOSIX_xdigit(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t changesWhenCasefolded(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t changesWhenNFKC_Casefolded(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t hasEmojiProperty(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t isRegionalIndicator(BinaryProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getBiDiClass(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t biDiGetMaxValue(IntProperty const&, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t defaultGetValue(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t defaultGetMaxValue(IntProperty const&, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getCombiningClass(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getMaxValueFromShift(IntProperty const&, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getGeneralCategory(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getJoiningGroup(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getJoiningType(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getNumericType(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getScript(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t scriptGetMaxValue(IntProperty const&, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getHangulSyllableType(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getNormQuickCheck(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getLeadCombiningClass(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getTrailCombiningClass(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getBiDiPairedBracketType(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getInPC(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t layoutGetMaxValue(IntProperty const&, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getInSC(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t getVo(IntProperty const&, int, UProperty)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::ulayout_isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uprops_cleanup()",
    "type": "CPP"
  },
  {
    "name": "T _ures_openU_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_initStackObject_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StackUResourceBundle::StackUResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StackUResourceBundle::StackUResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StackUResourceBundle::~StackUResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "T _ures_close_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StackUResourceBundle::~StackUResourceBundle()",
    "type": "CPP"
  },
  {
    "name": "t ures_closeBundle(UResourceBundle*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t _ures_copyResb_73",
    "type": "CPP"
  },
  {
    "name": "t ures_appendResPath(UResourceBundle*, char const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t entryIncrease(UResourceDataEntry*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getString_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getUTF8String_73",
    "type": "CPP"
  },
  {
    "name": "t ures_toUTF8String(char16_t const*, int, char*, int*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getBinary_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getIntVector_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getInt_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getUInt_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getType_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getKey_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getSize_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_resetIterator_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_hasNext_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getNextString_73",
    "type": "CPP"
  },
  {
    "name": "t ures_getStringWithAlias(UResourceBundle const*, unsigned int, int, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getNextResource_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getStringByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getUTF8StringByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_findResource_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_open_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_findSubResource_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getStringByKeyWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getByKeyWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "t createPath(char const*, int, char const*, int, char const*, icu_73::CharString&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getAllChildrenWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getAllItemsWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::GetAllChildrenSink::~GetAllChildrenSink()",
    "type": "CPP"
  },
  {
    "name": "T _ures_getValueWithFallback_73",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getAllItemsWithFallback(UResourceBundle const*, icu_73::ResourceDataValue&, icu_73::ResourceSink&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getByKey_73",
    "type": "CPP"
  },
  {
    "name": "t getFallbackData(UResourceBundle const*, char const**, unsigned int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_getStringByKey_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getUTF8StringByKey_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getLocaleInternal_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getLocaleByType_73",
    "type": "CPP"
  },
  {
    "name": "t _ures_getName_73",
    "type": "CPP"
  },
  {
    "name": "t ures_openWithType(UResourceBundle*, char const*, char const*, UResOpenType, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _ures_openNoDefault_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_openDirect_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_openFillIn_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_openDirectFillIn_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_countArrayItems_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getVersionNumberInternal_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getVersionNumber_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getVersion_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_openAvailableLocales_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getFunctionalEquivalent_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getKeywordValues_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_getVersionByKey_73",
    "type": "CPP"
  },
  {
    "name": "t entryClose(UResourceDataEntry*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::init_resb_result(UResourceDataEntry*, unsigned int, char const*, int, UResourceDataEntry*, char const*, int, UResourceBundle*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getAliasTargetAsResourceBundle(ResourceData const&, unsigned int, char const*, int, UResourceDataEntry*, char const*, int, UResourceBundle*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::GetAllChildrenSink::~GetAllChildrenSink()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::GetAllChildrenSink::put(char const*, icu_73::ResourceValue&, signed char, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t initCache(UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t findFirstExisting(char const*, char*, char const*, UResOpenType, signed char*, signed char*, signed char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t init_entry(char const*, char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t loadParentsExceptRoot(UResourceDataEntry*&, char*, int, signed char, char*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t insertRootBundle(UResourceDataEntry*&, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t hashEntry(UElement)",
    "type": "CPP"
  },
  {
    "name": "t compareEntries(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t ures_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t free_entry(UResourceDataEntry*)",
    "type": "CPP"
  },
  {
    "name": "t performFallbackLookup(char const*, char const*, char const*, int const*, int)",
    "type": "CPP"
  },
  {
    "name": "t getDefaultScript(icu_73::CharString const&, icu_73::CharString const&)",
    "type": "CPP"
  },
  {
    "name": "t getPoolEntry(char const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ures_loc_closeLocales(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ures_loc_countLocales(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ures_loc_nextLocale(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ures_loc_resetLocales(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _res_read_73",
    "type": "CPP"
  },
  {
    "name": "t isAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t res_init(ResourceData*, unsigned char*, void const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t _res_load_73",
    "type": "CPP"
  },
  {
    "name": "t _res_unload_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getPublicType_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getStringNoTrace_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getAlias_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getBinaryNoTrace_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getIntVectorNoTrace_73",
    "type": "CPP"
  },
  {
    "name": "T _res_countArrayItems_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::~ResourceDataValue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::~ResourceDataValue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::~ResourceDataValue()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getType() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getString(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getAliasString(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getInt(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getUInt(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getIntVector(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getBinary(int&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getArray(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getTable(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::isNoInheritanceMarker() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getStringArray(icu_73::UnicodeString*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::getStringArray(ResourceData const*, icu_73::ResourceArray const&, icu_73::UnicodeString*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getStringArrayOrStringAsArray(icu_73::UnicodeString*, int, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ResourceDataValue::getStringOrFirstOfArray(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceArray::internalGetResource(ResourceData const*, int) const",
    "type": "CPP"
  },
  {
    "name": "T _res_getTableItemByKey_73",
    "type": "CPP"
  },
  {
    "name": "t _res_findTableItem(ResourceData const*, unsigned short const*, int, char const*, char const**)",
    "type": "CPP"
  },
  {
    "name": "t _res_findTable32Item(ResourceData const*, int const*, int, char const*, char const**)",
    "type": "CPP"
  },
  {
    "name": "T _res_getTableItemByIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _res_getResource_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceTable::getKeyAndValue(int, char const*&, icu_73::ResourceValue&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceTable::findValue(char const*, icu_73::ResourceValue&) const",
    "type": "CPP"
  },
  {
    "name": "T _res_getArrayItem_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ResourceArray::getValue(int, icu_73::ResourceValue&) const",
    "type": "CPP"
  },
  {
    "name": "t _res_findResource_73",
    "type": "CPP"
  },
  {
    "name": "T _ures_swap_73",
    "type": "CPP"
  },
  {
    "name": "t ures_swapResource(UDataSwapper const*, unsigned int const*, unsigned int*, unsigned int, char const*, TempTable*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ures_compareRows(void const*, void const*, void const*)",
    "type": "CPP"
  },
  {
    "name": "T _uscript_openRun_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_setRunText_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_closeRun_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_resetRun_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_nextRun_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getCode_73",
    "type": "CPP"
  },
  {
    "name": "t getCodesFromLocale(char const*, UScriptCode*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getSampleString_73",
    "type": "CPP"
  },
  {
    "name": "T uscript_getSampleUnicodeString_73(UScriptCode)",
    "type": "CPP"
  },
  {
    "name": "T _uscript_getUsage_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_isRightToLeft_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_breaksBetweenLetters_73",
    "type": "CPP"
  },
  {
    "name": "T _uscript_isCased_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_openEmpty_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_open_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_isFrozen_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_freeze_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_cloneAsThawed_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_set_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_addAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_add_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_addRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_addString_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_addAllCodePoints_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_remove_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_removeRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_removeString_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_removeAllCodePoints_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_removeAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_retain_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_retainString_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_retainAllCodePoints_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_retainAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_compact_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_complement_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_complementRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_complementString_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_complementAllCodePoints_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_complementAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_clear_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_removeAllStrings_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_isEmpty_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_hasStrings_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_contains_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsString_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsAll_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsAllCodePoints_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsNone_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_containsSome_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_span_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_spanBack_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_spanUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_spanBackUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_equals_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_indexOf_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_charAt_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_size_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getRangeCount_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getItemCount_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getItem_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_serialize_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getSerializedSet_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_setSerializedToOne_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_serializedContains_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getSerializedRangeCount_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_getSerializedRange_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_openPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_openPatternOptions_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_applyPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_applyIntPropertyValue_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_applyPropertyAlias_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_resemblesPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_toPattern_73",
    "type": "CPP"
  },
  {
    "name": "T _uset_closeOver_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::UnicodeSetIterator(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::reset(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::UnicodeSetIterator(icu_73::UnicodeSet const&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::UnicodeSetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::reset()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::UnicodeSetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::~UnicodeSetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::~UnicodeSetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::~UnicodeSetIterator()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::next()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::loadRange(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::nextRange()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UnicodeSetIterator::getString()",
    "type": "CPP"
  },
  {
    "name": "T _u_shapeArabic_73",
    "type": "CPP"
  },
  {
    "name": "t getLink(char16_t)",
    "type": "CPP"
  },
  {
    "name": "t calculateSize(char16_t const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t shapeUnicode(char16_t*, int, int, unsigned int, UErrorCode*, int, uShapeVariables)",
    "type": "CPP"
  },
  {
    "name": "t handleTashkeelWithTatweel(char16_t*, int, int, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t deShapeUnicode(char16_t*, int, int, unsigned int, UErrorCode*, uShapeVariables)",
    "type": "CPP"
  },
  {
    "name": "t _shapeToArabicDigitsWithContext(char16_t*, int, char16_t, signed char, signed char)",
    "type": "CPP"
  },
  {
    "name": "t expandCompositChar(char16_t*, int, int, unsigned int, UErrorCode*, int, uShapeVariables)",
    "type": "CPP"
  },
  {
    "name": "t expandCompositCharAtEnd(char16_t*, int, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t expandCompositCharAtBegin(char16_t*, int, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _usprep_open_73",
    "type": "CPP"
  },
  {
    "name": "T _usprep_openByType_73",
    "type": "CPP"
  },
  {
    "name": "T _usprep_close_73",
    "type": "CPP"
  },
  {
    "name": "T _uprv_syntaxError_73",
    "type": "CPP"
  },
  {
    "name": "T _usprep_prepare_73",
    "type": "CPP"
  },
  {
    "name": "t usprep_map(UStringPrepProfile const*, char16_t const*, int, char16_t*, int, int, UParseError*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _usprep_swap_73",
    "type": "CPP"
  },
  {
    "name": "t hashEntry(UElement)",
    "type": "CPP"
  },
  {
    "name": "t compareEntries(UElement, UElement)",
    "type": "CPP"
  },
  {
    "name": "t usprep_cleanup()",
    "type": "CPP"
  },
  {
    "name": "t isSPrepAcceptable(void*, char const*, char const*, UDataInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t getSPrepFoldingOffset(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::UStack(void (*)(void*), signed char (*)(UElement, UElement), int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::~UStack()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::~UStack()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::~UStack()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::pop()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::popi()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStack::search(void*) const",
    "type": "CPP"
  },
  {
    "name": "T _u_getDefaultConverter_73",
    "type": "CPP"
  },
  {
    "name": "T _u_releaseDefaultConverter_73",
    "type": "CPP"
  },
  {
    "name": "T _u_flushDefaultConverter_73",
    "type": "CPP"
  },
  {
    "name": "T _u_uastrncpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_uastrcpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_austrncpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_austrcpy_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::~WholeStringBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::~WholeStringBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::~WholeStringBreakIterator()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::operator==(icu_73::BreakIterator const&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::clone() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::getText() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::getUText(UText*, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::setText(icu_73::UnicodeString const&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::setText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::adoptText(icu_73::CharacterIterator*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::first()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::last()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::previous()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::next()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::current() const",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::following(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::preceding(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::isBoundary(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::next(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::createBufferClone(void*, int&, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::WholeStringBreakIterator::refreshInputText(UText*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_getTitleBreakIterator_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::toTitle(char const*, unsigned int, icu_73::BreakIterator*, char16_t const*, int, char16_t*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T _u_strToTitle_73",
    "type": "CPP"
  },
  {
    "name": "T _ucasemap_toTitle_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToWCS_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromWCS_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_internalToTitle_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::utf16_caseContextIterator(void*, signed char)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::appendResult(char16_t*, int, int, int, char16_t const*, int, unsigned int, icu_73::Edits*)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::(anonymous namespace)::toLower(int, unsigned int, char16_t*, int, char16_t const*, UCaseContext*, int, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::getLetterData(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::getDiacriticData(int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::isFollowedByCasedLetter(char16_t const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_73::GreekUpper::toUpper(unsigned int, char16_t*, int, char16_t const*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_internalToLower_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_internalToUpper_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_internalFold_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_map_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_mapWithOverlap_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFoldCase_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::fold(unsigned int, char16_t const*, int, char16_t*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "t _u_strcmpFold_73",
    "type": "CPP"
  },
  {
    "name": "t _cmpFold(char16_t const*, int, char16_t const*, int, unsigned int, int*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _u_strCaseCompare_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strcasecmp_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memcasecmp_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strncasecmp_73",
    "type": "CPP"
  },
  {
    "name": "T _u_caseInsensitivePrefixMatch_73",
    "type": "CPP"
  },
  {
    "name": "t _ustrcase_getCaseLocale_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToLower_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToUpper_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::toLower(char const*, unsigned int, char16_t const*, int, char16_t*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::CaseMap::toUpper(char const*, unsigned int, char16_t const*, int, char16_t*, int, icu_73::Edits*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::StringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::~StringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::~StringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::~StringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::clone() const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::ensureCharsCapacity(int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::unext(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::setChars(char const*, int, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::operator==(icu_73::StringEnumeration const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::StringEnumeration::operator!=(icu_73::StringEnumeration const&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::fromUEnumeration(UEnumeration*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::UStringEnumeration(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::UStringEnumeration(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::~UStringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::~UStringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::~UStringEnumeration()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::count(UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::next(int*, UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::snext(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::reset(UErrorCode&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::getStaticClassID()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::UStringEnumeration::getDynamicClassID() const",
    "type": "CPP"
  },
  {
    "name": "T _uenum_openFromStringEnumeration_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_openCharStringsEnumeration_73",
    "type": "CPP"
  },
  {
    "name": "T _uenum_openUCharStringsEnumeration_73",
    "type": "CPP"
  },
  {
    "name": "t ustrenum_close(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ustrenum_count(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ustrenum_unext(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ustrenum_next(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ustrenum_reset(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucharstrenum_close(UEnumeration*)",
    "type": "CPP"
  },
  {
    "name": "t ucharstrenum_count(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucharstrenum_next(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucharstrenum_reset(UEnumeration*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucharstrenum_unext(UEnumeration*, int*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _uprv_itou_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFindFirst_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strchr_73",
    "type": "CPP"
  },
  {
    "name": "t isMatchAtCPBoundary(char16_t const*, char16_t const*, char16_t const*, char16_t const*)",
    "type": "CPP"
  },
  {
    "name": "T _u_strlen_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memchr_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strstr_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strchr32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memchr32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFindLast_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strrchr_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memrchr_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strrstr_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strrchr32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memrchr32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strpbrk_73",
    "type": "CPP"
  },
  {
    "name": "t _matchFromSet(char16_t const*, char16_t const*, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _u_strcspn_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strspn_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strtok_r_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strcat_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strncat_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strcmp_73",
    "type": "CPP"
  },
  {
    "name": "t _uprv_strCompare_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strCompareIter_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strCompare_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strcmpCodePointOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strncmp_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strncmpCodePointOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strcpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strncpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_countChar32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strHasMoreChar32Than_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memcpy_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memmove_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memset_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memcmp_73",
    "type": "CPP"
  },
  {
    "name": "T _u_memcmpCodePointOrder_73",
    "type": "CPP"
  },
  {
    "name": "T _u_unescapeAt_73",
    "type": "CPP"
  },
  {
    "name": "T _u_unescape_73",
    "type": "CPP"
  },
  {
    "name": "t _charPtr_charAt(int, void*)",
    "type": "CPP"
  },
  {
    "name": "T _u_asciiToUpper_73",
    "type": "CPP"
  },
  {
    "name": "T _u_terminateUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _u_terminateChars_73",
    "type": "CPP"
  },
  {
    "name": "T _u_terminateUChar32s_73",
    "type": "CPP"
  },
  {
    "name": "T _u_terminateWChars_73",
    "type": "CPP"
  },
  {
    "name": "T _ustr_hashUCharsN_73",
    "type": "CPP"
  },
  {
    "name": "T _ustr_hashCharsN_73",
    "type": "CPP"
  },
  {
    "name": "T _ustr_hashICharsN_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromUTF32WithSub_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromUTF32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToUTF32WithSub_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToUTF32_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromUTF8WithSub_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromUTF8Lenient_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToUTF8WithSub_73",
    "type": "CPP"
  },
  {
    "name": "t _appendUTF8(unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "T _u_strToUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strFromJavaModifiedUTF8WithSub_73",
    "type": "CPP"
  },
  {
    "name": "T _u_strToJavaModifiedUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_moveIndex32_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_next32_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_previous32_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_nativeLength_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_isLengthExpensive_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_getNativeIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_setNativeIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_getPreviousNativeIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_current32_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_char32At_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_next32From_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_previous32From_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_extract_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_equals_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_isWritable_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_freeze_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_hasMetaData_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_replace_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_copy_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_setup_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_close_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openUTF8_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openReplaceable_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openConstUnicodeString_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openUChars_73",
    "type": "CPP"
  },
  {
    "name": "T _utext_openCharacterIterator_73",
    "type": "CPP"
  },
  {
    "name": "t utf8TextClone(UText*, UText const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextLength(UText*)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextAccess(UText*, long long, signed char)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextExtract(UText*, long long, long long, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextMapOffsetToNative(UText const*)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextMapIndexToUTF16(UText const*, long long)",
    "type": "CPP"
  },
  {
    "name": "t utf8TextClose(UText*)",
    "type": "CPP"
  },
  {
    "name": "t shallowTextClone(UText*, UText const*, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t repTextClone(UText*, UText const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t repTextLength(UText*)",
    "type": "CPP"
  },
  {
    "name": "t repTextAccess(UText*, long long, signed char)",
    "type": "CPP"
  },
  {
    "name": "t repTextExtract(UText*, long long, long long, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t repTextReplace(UText*, long long, long long, char16_t const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t repTextCopy(UText*, long long, long long, long long, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t repTextClose(UText*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextClone(UText*, UText const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextLength(UText*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextAccess(UText*, long long, signed char)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextExtract(UText*, long long, long long, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextReplace(UText*, long long, long long, char16_t const*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextCopy(UText*, long long, long long, long long, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t unistrTextClose(UText*)",
    "type": "CPP"
  },
  {
    "name": "t ucstrTextClone(UText*, UText const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucstrTextLength(UText*)",
    "type": "CPP"
  },
  {
    "name": "t ucstrTextAccess(UText*, long long, signed char)",
    "type": "CPP"
  },
  {
    "name": "t ucstrTextExtract(UText*, long long, long long, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t ucstrTextClose(UText*)",
    "type": "CPP"
  },
  {
    "name": "t charIterTextClone(UText*, UText const*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t charIterTextLength(UText*)",
    "type": "CPP"
  },
  {
    "name": "t charIterTextAccess(UText*, long long, signed char)",
    "type": "CPP"
  },
  {
    "name": "t charIterTextExtract(UText*, long long, long long, char16_t*, int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t charIterTextClose(UText*)",
    "type": "CPP"
  },
  {
    "name": "T _utf8_nextCharSafeBody_73",
    "type": "CPP"
  },
  {
    "name": "T _utf8_appendCharSafeBody_73",
    "type": "CPP"
  },
  {
    "name": "T _utf8_prevCharSafeBody_73",
    "type": "CPP"
  },
  {
    "name": "T _utf8_back1SafeBody_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::appendNumber(icu_73::UnicodeString&, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::isUnprintable(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::shouldAlwaysBeEscaped(int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::escapeUnprintable(icu_73::UnicodeString&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::escape(icu_73::UnicodeString&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::skipWhitespace(icu_73::UnicodeString const&, int&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parseChar(icu_73::UnicodeString const&, int&, char16_t)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parsePattern(icu_73::UnicodeString const&, icu_73::Replaceable const&, int, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parseAsciiInteger(icu_73::UnicodeString const&, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::appendToRule(icu_73::UnicodeString&, int, signed char, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::appendToRule(icu_73::UnicodeString&, icu_73::UnicodeString const&, signed char, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::appendToRule(icu_73::UnicodeString&, icu_73::UnicodeMatcher const*, signed char, icu_73::UnicodeString&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parseInteger(icu_73::UnicodeString const&, int&, int)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parsePattern(icu_73::UnicodeString const&, int, int, icu_73::UnicodeString const&, int*)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parseUnicodeIdentifier(icu_73::UnicodeString const&, int&)",
    "type": "CPP"
  },
  {
    "name": "T icu_73::ICU_Utility::parseNumber(icu_73::UnicodeString const&, int&, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _utrace_entry_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_exit_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_data_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_vformat_73",
    "type": "CPP"
  },
  {
    "name": "t outputChar(char, char*, int*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t outputUString(char16_t const*, int, char*, int*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t outputHexBytes(long long, int, char*, int*, int)",
    "type": "CPP"
  },
  {
    "name": "t outputPtrBytes(void*, char*, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T _utrace_format_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_setFunctions_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_getFunctions_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_setLevel_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_getLevel_73",
    "type": "CPP"
  },
  {
    "name": "t _utrace_cleanup_73",
    "type": "CPP"
  },
  {
    "name": "T _utrace_functionName_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_open_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_close_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_getData_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_set32_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_get32_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_setRange32_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_serialize_73",
    "type": "CPP"
  },
  {
    "name": "t defaultGetFoldedValue(UNewTrie*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t utrie_compact(UNewTrie*, signed char, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _utrie_defaultGetFoldingOffset_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_unserialize_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_unserializeDummy_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_enum_73",
    "type": "CPP"
  },
  {
    "name": "t enumSameValue(void const*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_get32_73",
    "type": "CPP"
  },
  {
    "name": "t get32(UNewTrie2 const*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_get32FromLeadSurrogateCodeUnit_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_internalU8NextIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_internalU8PrevIndex_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_openFromSerialized_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_openDummy_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_close_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_isFrozen_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_serialize_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_enum_73",
    "type": "CPP"
  },
  {
    "name": "t enumEitherTrie(UTrie2 const*, int, int, unsigned int (*)(void const*, unsigned int), signed char (*)(void const*, int, int, unsigned int), void const*)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_enumForLeadSurrogate_73",
    "type": "CPP"
  },
  {
    "name": "t icu_73::BackwardUTrie2StringIterator::previous16()",
    "type": "CPP"
  },
  {
    "name": "t icu_73::ForwardUTrie2StringIterator::next16()",
    "type": "CPP"
  },
  {
    "name": "t enumSameValue(void const*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_open_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_set32_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_clone_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_cloneAsThawed_73",
    "type": "CPP"
  },
  {
    "name": "t copyEnumRange(void const*, int, int, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_set32ForLeadSurrogateCodeUnit_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_fromUTrie_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_freeze_73",
    "type": "CPP"
  },
  {
    "name": "t set32(UNewTrie2*, int, signed char, unsigned int, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_setRange32_73",
    "type": "CPP"
  },
  {
    "name": "t getDataBlock(UNewTrie2*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "t getIndex2Block(UNewTrie2*, int, signed char)",
    "type": "CPP"
  },
  {
    "name": "T _utrie_swap_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie2_swap_73",
    "type": "CPP"
  },
  {
    "name": "T _ucptrie_swap_73",
    "type": "CPP"
  },
  {
    "name": "T _utrie_swapAnyVersion_73",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::~IDNA()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::~IDNA()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::~IDNA()",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::labelToASCII_UTF8(icu_73::StringPiece, icu_73::ByteSink&, icu_73::IDNAInfo&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::labelToUnicodeUTF8(icu_73::StringPiece, icu_73::ByteSink&, icu_73::IDNAInfo&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "T icu_73::IDNA::nameToASCII_UTF8(icu_73::StringPiece, icu_73::ByteSink&, icu_73::IDNAInfo&, UErrorCode&) const",
    "type": "CPP"
  },
  {
    "name": "/opt/homebrew/Cellar/icu4c/73.2/lib/libicudata.73.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libz.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libSystem.B.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcache.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcommonCrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcompiler_rt.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcopyfile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcorecrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdispatch.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdyld.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libkeymgr.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libmacho.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libquarantine.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libremovefile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_asl.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_blocks.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_c.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_collections.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_configuration.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_containermanager.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_coreservices.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_darwin.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_darwindirectory.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_dnssd.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_featureflags.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_info.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_m.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_malloc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_networkextension.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_notify.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_sandbox.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_secinit.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_kernel.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _kdebug_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T _issetugid",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_get",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_generate_activity_id",
    "type": "CPP"
  },
  {
    "name": "T _task_name_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _pid_for_task",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg2_trap",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapon",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapoff",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _macx_triggers",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_suspend",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_recovery",
    "type": "CPP"
  },
  {
    "name": "T _swtch_pri",
    "type": "CPP"
  },
  {
    "name": "T _swtch",
    "type": "CPP"
  },
  {
    "name": "T _syscall_thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification_trap",
    "type": "CPP"
  },
  {
    "name": "T __exclaves_ctl_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_create",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_cancel",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm_leeway",
    "type": "CPP"
  },
  {
    "name": "T _debug_control_port_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_register",
    "type": "CPP"
  },
  {
    "name": "t _memcpy",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_absolute_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_absolute_time_kernel",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_time_kernel",
    "type": "CPP"
  },
  {
    "name": "T _getentropy",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_voucher_init",
    "type": "CPP"
  },
  {
    "name": "T _getpid",
    "type": "CPP"
  },
  {
    "name": "T _task_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T _task_info",
    "type": "CPP"
  },
  {
    "name": "T _csops_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _cerror_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___error",
    "type": "CPP"
  },
  {
    "name": "T _getattrlist",
    "type": "CPP"
  },
  {
    "name": "T _access",
    "type": "CPP"
  },
  {
    "name": "T ___open",
    "type": "CPP"
  },
  {
    "name": "T _csr_check",
    "type": "CPP"
  },
  {
    "name": "T ___csrctl",
    "type": "CPP"
  },
  {
    "name": "T _fcntl",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl",
    "type": "CPP"
  },
  {
    "name": "T _close",
    "type": "CPP"
  },
  {
    "name": "T _read",
    "type": "CPP"
  },
  {
    "name": "T ___open_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _mmap",
    "type": "CPP"
  },
  {
    "name": "T ___mmap",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_self",
    "type": "CPP"
  },
  {
    "name": "T _host_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_destroy",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_destroy_port",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_clear",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T _task_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _geteuid",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T ___sysctl",
    "type": "CPP"
  },
  {
    "name": "T _mach_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy_zerofill",
    "type": "CPP"
  },
  {
    "name": "T ___shm_open",
    "type": "CPP"
  },
  {
    "name": "T _close$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___openat",
    "type": "CPP"
  },
  {
    "name": "T _cerror",
    "type": "CPP"
  },
  {
    "name": "T _lseek",
    "type": "CPP"
  },
  {
    "name": "T _pread",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___sysctlbyname",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_ms",
    "type": "CPP"
  },
  {
    "name": "T _chdir",
    "type": "CPP"
  },
  {
    "name": "T _mkdir",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getuid",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getugid_np",
    "type": "CPP"
  },
  {
    "name": "T _getegid",
    "type": "CPP"
  },
  {
    "name": "T _csops",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath",
    "type": "CPP"
  },
  {
    "name": "T ___getdirentries64",
    "type": "CPP"
  },
  {
    "name": "T ___workq_kernreturn",
    "type": "CPP"
  },
  {
    "name": "T ___workq_open",
    "type": "CPP"
  },
  {
    "name": "T _kevent_qos",
    "type": "CPP"
  },
  {
    "name": "T _kevent_id",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfid",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wake",
    "type": "CPP"
  },
  {
    "name": "T ___commpage_gettimeofday",
    "type": "CPP"
  },
  {
    "name": "t ___commpage_gettimeofday_internal",
    "type": "CPP"
  },
  {
    "name": "T _read$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_get_times",
    "type": "CPP"
  },
  {
    "name": "T _host_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___getrlimit",
    "type": "CPP"
  },
  {
    "name": "T _getaudit_addr",
    "type": "CPP"
  },
  {
    "name": "T _syscall",
    "type": "CPP"
  },
  {
    "name": "T _readlink",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T _proc_setpcontrol",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace64",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _posix_madvise",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexwait",
    "type": "CPP"
  },
  {
    "name": "T _setrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___setrlimit",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_synchronize",
    "type": "CPP"
  },
  {
    "name": "T ___disable_threadsignal",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexdrop",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T _vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _getxattr",
    "type": "CPP"
  },
  {
    "name": "T _thread_destruct_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_destroy",
    "type": "CPP"
  },
  {
    "name": "T _proc_track_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_dirty",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_revert",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_adopt",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T _sigprocmask",
    "type": "CPP"
  },
  {
    "name": "T ___sigaltstack",
    "type": "CPP"
  },
  {
    "name": "T _pwrite",
    "type": "CPP"
  },
  {
    "name": "T _ftruncate",
    "type": "CPP"
  },
  {
    "name": "T _setattrlist",
    "type": "CPP"
  },
  {
    "name": "T _getattrlistbulk",
    "type": "CPP"
  },
  {
    "name": "T _listxattr",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvbroad",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T _guarded_pwrite_np",
    "type": "CPP"
  },
  {
    "name": "T _vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _fsctl",
    "type": "CPP"
  },
  {
    "name": "T _fgetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _munmap",
    "type": "CPP"
  },
  {
    "name": "T ___munmap",
    "type": "CPP"
  },
  {
    "name": "T _fsgetpath",
    "type": "CPP"
  },
  {
    "name": "T _setxattr",
    "type": "CPP"
  },
  {
    "name": "T _mkdirat",
    "type": "CPP"
  },
  {
    "name": "T _guarded_close_np",
    "type": "CPP"
  },
  {
    "name": "T _fsync",
    "type": "CPP"
  },
  {
    "name": "T _host_get_io_master",
    "type": "CPP"
  },
  {
    "name": "T _write",
    "type": "CPP"
  },
  {
    "name": "T _rename",
    "type": "CPP"
  },
  {
    "name": "T ___rename",
    "type": "CPP"
  },
  {
    "name": "T ___inc_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _rmdir",
    "type": "CPP"
  },
  {
    "name": "T ___rmdir",
    "type": "CPP"
  },
  {
    "name": "T _chmod",
    "type": "CPP"
  },
  {
    "name": "T ___chmod",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_create",
    "type": "CPP"
  },
  {
    "name": "T _mprotect",
    "type": "CPP"
  },
  {
    "name": "t ___gettimeofday_with_mach",
    "type": "CPP"
  },
  {
    "name": "T ___gettimeofday",
    "type": "CPP"
  },
  {
    "name": "T _writev",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvclrprepost",
    "type": "CPP"
  },
  {
    "name": "T _write$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_info",
    "type": "CPP"
  },
  {
    "name": "T ___persona",
    "type": "CPP"
  },
  {
    "name": "T _unlink",
    "type": "CPP"
  },
  {
    "name": "T ___unlink",
    "type": "CPP"
  },
  {
    "name": "T _flock",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _necp_open",
    "type": "CPP"
  },
  {
    "name": "T _change_fdguard_np",
    "type": "CPP"
  },
  {
    "name": "T _necp_client_action",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_get",
    "type": "CPP"
  },
  {
    "name": "T _getgid",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_self",
    "type": "CPP"
  },
  {
    "name": "T _socket",
    "type": "CPP"
  },
  {
    "name": "T _fcntl$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _setsockopt",
    "type": "CPP"
  },
  {
    "name": "T _connect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sendto$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _socketpair",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _ioctl",
    "type": "CPP"
  },
  {
    "name": "T ___ioctl",
    "type": "CPP"
  },
  {
    "name": "T _connect",
    "type": "CPP"
  },
  {
    "name": "T _sendto",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom",
    "type": "CPP"
  },
  {
    "name": "T _connectx",
    "type": "CPP"
  },
  {
    "name": "T _getsockopt",
    "type": "CPP"
  },
  {
    "name": "T _shutdown",
    "type": "CPP"
  },
  {
    "name": "T _fgetxattr",
    "type": "CPP"
  },
  {
    "name": "T _dup",
    "type": "CPP"
  },
  {
    "name": "T _select",
    "type": "CPP"
  },
  {
    "name": "T _getpeername",
    "type": "CPP"
  },
  {
    "name": "T _fchmod",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod",
    "type": "CPP"
  },
  {
    "name": "T _getiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T ___iopolicysys",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_send",
    "type": "CPP"
  },
  {
    "name": "T _link",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_release",
    "type": "CPP"
  },
  {
    "name": "T _vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_reply_setup",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvsignal",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_attr_command",
    "type": "CPP"
  },
  {
    "name": "T _removexattr",
    "type": "CPP"
  },
  {
    "name": "T _clonefileat",
    "type": "CPP"
  },
  {
    "name": "T _host_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy",
    "type": "CPP"
  },
  {
    "name": "T _mig_put_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_wrlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_rdlock",
    "type": "CPP"
  },
  {
    "name": "T _fsetxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T _fchflags",
    "type": "CPP"
  },
  {
    "name": "T _futimes",
    "type": "CPP"
  },
  {
    "name": "T _umask",
    "type": "CPP"
  },
  {
    "name": "T _utimes",
    "type": "CPP"
  },
  {
    "name": "T _thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T _gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___stat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___chmod_extended",
    "type": "CPP"
  },
  {
    "name": "T ___lstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T _open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___fstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _fchown",
    "type": "CPP"
  },
  {
    "name": "T _getgroups",
    "type": "CPP"
  },
  {
    "name": "T _lchown",
    "type": "CPP"
  },
  {
    "name": "T _symlink",
    "type": "CPP"
  },
  {
    "name": "T ___openat_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_init",
    "type": "CPP"
  },
  {
    "name": "t _mach_init_doit",
    "type": "CPP"
  },
  {
    "name": "T __init_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "T __get_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcmp",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_platform_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_self",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_register",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_service",
    "type": "CPP"
  },
  {
    "name": "T _proc_name",
    "type": "CPP"
  },
  {
    "name": "T _kqueue",
    "type": "CPP"
  },
  {
    "name": "T _kevent",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T ___pselect",
    "type": "CPP"
  },
  {
    "name": "T _quotactl",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makefd",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _msync",
    "type": "CPP"
  },
  {
    "name": "T _pipe",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makeport",
    "type": "CPP"
  },
  {
    "name": "T ___kqueue_workloop_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___sigaction",
    "type": "CPP"
  },
  {
    "name": "T _getppid",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_string",
    "type": "CPP"
  },
  {
    "name": "t _mach_error_string_int",
    "type": "CPP"
  },
  {
    "name": "t _do_compat",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_adddup2",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_file_actions_grow",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_fchdir",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_chdir",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T ___posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___wait4",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend_nocancel",
    "type": "CPP"
  },
  {
    "name": "T __exit",
    "type": "CPP"
  },
  {
    "name": "T _thread_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidoriginatorinfo",
    "type": "CPP"
  },
  {
    "name": "T _getrusage",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_register",
    "type": "CPP"
  },
  {
    "name": "T ___fork",
    "type": "CPP"
  },
  {
    "name": "T _setiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _ffsctl",
    "type": "CPP"
  },
  {
    "name": "T _getsockname",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T ___process_policy",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _proc_pid_rusage",
    "type": "CPP"
  },
  {
    "name": "T _chown",
    "type": "CPP"
  },
  {
    "name": "T _bind",
    "type": "CPP"
  },
  {
    "name": "T _guarded_write_np",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server",
    "type": "CPP"
  },
  {
    "name": "T _kill",
    "type": "CPP"
  },
  {
    "name": "T ___kill",
    "type": "CPP"
  },
  {
    "name": "T _chflags",
    "type": "CPP"
  },
  {
    "name": "T _pathconf",
    "type": "CPP"
  },
  {
    "name": "T _setpriority",
    "type": "CPP"
  },
  {
    "name": "T ___setpriority",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_64",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_recurse_64",
    "type": "CPP"
  },
  {
    "name": "T _getpriority",
    "type": "CPP"
  },
  {
    "name": "T _proc_rlimit_control",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _setitimer",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_msp",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_list",
    "type": "CPP"
  },
  {
    "name": "T _listen",
    "type": "CPP"
  },
  {
    "name": "T _accept",
    "type": "CPP"
  },
  {
    "name": "T _poll",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setjetsam_ext",
    "type": "CPP"
  },
  {
    "name": "T _getpgrp",
    "type": "CPP"
  },
  {
    "name": "T _execve",
    "type": "CPP"
  },
  {
    "name": "T _setsid",
    "type": "CPP"
  },
  {
    "name": "T _dup2",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _csr_get_active_config",
    "type": "CPP"
  },
  {
    "name": "T _ptrace",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_server_consume_unsent_message",
    "type": "CPP"
  },
  {
    "name": "T _getdtablesize",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_create",
    "type": "CPP"
  },
  {
    "name": "T ___work_interval_ctl",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_alloc",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_id",
    "type": "CPP"
  },
  {
    "name": "T _memorystatus_control",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _task_threads",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_state",
    "type": "CPP"
  },
  {
    "name": "T _setgid",
    "type": "CPP"
  },
  {
    "name": "T _setuid",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_get",
    "type": "CPP"
  },
  {
    "name": "T ___get_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setugid_np",
    "type": "CPP"
  },
  {
    "name": "T _seteuid",
    "type": "CPP"
  },
  {
    "name": "T _setegid",
    "type": "CPP"
  },
  {
    "name": "T _vm_read",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_read",
    "type": "CPP"
  },
  {
    "name": "T ___sem_open",
    "type": "CPP"
  },
  {
    "name": "T _sem_close",
    "type": "CPP"
  },
  {
    "name": "T _auditon",
    "type": "CPP"
  },
  {
    "name": "T _sfi_set_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_ctl",
    "type": "CPP"
  },
  {
    "name": "T _system_set_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _unlinkat",
    "type": "CPP"
  },
  {
    "name": "T ___unlinkat",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_wakemon",
    "type": "CPP"
  },
  {
    "name": "T _mlock",
    "type": "CPP"
  },
  {
    "name": "T _munlock",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics64",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpids",
    "type": "CPP"
  },
  {
    "name": "T _clonefile",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _getpgid",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_start",
    "type": "CPP"
  },
  {
    "name": "t _kdebug_signpost_internal",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_end",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_reason",
    "type": "CPP"
  },
  {
    "name": "T ___terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _task_set_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_content",
    "type": "CPP"
  },
  {
    "name": "T _guarded_kqueue_np",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region_recurse",
    "type": "CPP"
  },
  {
    "name": "T _necp_match_policy",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_once",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_port",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setauditsessionport_np",
    "type": "CPP"
  },
  {
    "name": "t _posix_spawn_appendportaction_np",
    "type": "CPP"
  },
  {
    "name": "T ___sigreturn",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_join",
    "type": "CPP"
  },
  {
    "name": "T ___sigwait",
    "type": "CPP"
  },
  {
    "name": "T _setpgid",
    "type": "CPP"
  },
  {
    "name": "T _lstat64",
    "type": "CPP"
  },
  {
    "name": "T _stat64",
    "type": "CPP"
  },
  {
    "name": "T _open",
    "type": "CPP"
  },
  {
    "name": "T _fstatfs64",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_lookup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor_default",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setspecialport_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addopen",
    "type": "CPP"
  },
  {
    "name": "T _kevent64",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T ___setlogin",
    "type": "CPP"
  },
  {
    "name": "T ___initgroups",
    "type": "CPP"
  },
  {
    "name": "T ___getlogin",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_canceled",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep",
    "type": "CPP"
  },
  {
    "name": "T _vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _flistxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _mount",
    "type": "CPP"
  },
  {
    "name": "T _wait4",
    "type": "CPP"
  },
  {
    "name": "T ___open_extended",
    "type": "CPP"
  },
  {
    "name": "T _exchangedata",
    "type": "CPP"
  },
  {
    "name": "T ___carbon_delete",
    "type": "CPP"
  },
  {
    "name": "T ___delete",
    "type": "CPP"
  },
  {
    "name": "T _unmount",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addinherit_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addclose",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setexceptionports_np",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum_mbuf",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_copy_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _sem_open",
    "type": "CPP"
  },
  {
    "name": "T _shm_open",
    "type": "CPP"
  },
  {
    "name": "T _msgsys",
    "type": "CPP"
  },
  {
    "name": "T _semsys",
    "type": "CPP"
  },
  {
    "name": "T _semctl",
    "type": "CPP"
  },
  {
    "name": "T _shmsys",
    "type": "CPP"
  },
  {
    "name": "T _____sigwait_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___abort_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _accept$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _accessx_np",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_info",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_open",
    "type": "CPP"
  },
  {
    "name": "T ___channel_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_sync",
    "type": "CPP"
  },
  {
    "name": "T ___coalition",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_info",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_ledger",
    "type": "CPP"
  },
  {
    "name": "T ___copyfile",
    "type": "CPP"
  },
  {
    "name": "T ___crossarch_trap",
    "type": "CPP"
  },
  {
    "name": "T ___debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T ___debug_syscall_reject_config",
    "type": "CPP"
  },
  {
    "name": "T ___execve",
    "type": "CPP"
  },
  {
    "name": "T ___fs_snapshot",
    "type": "CPP"
  },
  {
    "name": "T ___fstat_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _getsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T _getwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___identitysvc",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___log_data",
    "type": "CPP"
  },
  {
    "name": "T ___lstat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_me",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_link",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_mount",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_pid",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_proc",
    "type": "CPP"
  },
  {
    "name": "T ___mac_getfsstat",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_mm",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_link",
    "type": "CPP"
  },
  {
    "name": "T ___mach_bridge_remote_time",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___map_with_linking_np",
    "type": "CPP"
  },
  {
    "name": "T ___memorystatus_available_memory",
    "type": "CPP"
  },
  {
    "name": "T ___microstackshot",
    "type": "CPP"
  },
  {
    "name": "T ___mkdir_extended",
    "type": "CPP"
  },
  {
    "name": "T ___mkfifo_extended",
    "type": "CPP"
  },
  {
    "name": "T _msgctl",
    "type": "CPP"
  },
  {
    "name": "T _msgrcv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _msgsnd$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___msgsys",
    "type": "CPP"
  },
  {
    "name": "T _msync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_create",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_deregister",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_open",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_register",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___openat_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T _poll$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pread$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _preadv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info_extended_id",
    "type": "CPP"
  },
  {
    "name": "T ___pselect_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_downgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_longrdlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock2",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_upgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_yieldwrlock",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_markcancel",
    "type": "CPP"
  },
  {
    "name": "T _pwrite$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pwritev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _readv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___reboot",
    "type": "CPP"
  },
  {
    "name": "T ___record_system_event",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___renameat",
    "type": "CPP"
  },
  {
    "name": "T ___renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _sem_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___semctl",
    "type": "CPP"
  },
  {
    "name": "T ___semsys",
    "type": "CPP"
  },
  {
    "name": "T _setregid",
    "type": "CPP"
  },
  {
    "name": "T _setreuid",
    "type": "CPP"
  },
  {
    "name": "T _setsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___settid_with_pid",
    "type": "CPP"
  },
  {
    "name": "T ___settimeofday",
    "type": "CPP"
  },
  {
    "name": "T _setwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_pidctl",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_check_np",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_map_and_slide_2_np",
    "type": "CPP"
  },
  {
    "name": "T _shmctl",
    "type": "CPP"
  },
  {
    "name": "T ___shmsys",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T ___stack_snapshot_with_config",
    "type": "CPP"
  },
  {
    "name": "T ___stat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___telemetry",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfusage",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait2",
    "type": "CPP"
  },
  {
    "name": "T ___umask_extended",
    "type": "CPP"
  },
  {
    "name": "T ___vfork",
    "type": "CPP"
  },
  {
    "name": "T _waitid$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _writev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _acct",
    "type": "CPP"
  },
  {
    "name": "T _adjtime",
    "type": "CPP"
  },
  {
    "name": "T _aio_cancel",
    "type": "CPP"
  },
  {
    "name": "T _aio_error",
    "type": "CPP"
  },
  {
    "name": "T _aio_fsync",
    "type": "CPP"
  },
  {
    "name": "T _aio_read",
    "type": "CPP"
  },
  {
    "name": "T _aio_return",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend",
    "type": "CPP"
  },
  {
    "name": "T _aio_write",
    "type": "CPP"
  },
  {
    "name": "T _audit",
    "type": "CPP"
  },
  {
    "name": "T _auditctl",
    "type": "CPP"
  },
  {
    "name": "T _chroot",
    "type": "CPP"
  },
  {
    "name": "T _disconnectx",
    "type": "CPP"
  },
  {
    "name": "T _faccessat",
    "type": "CPP"
  },
  {
    "name": "T _fchdir",
    "type": "CPP"
  },
  {
    "name": "T _fchmodat",
    "type": "CPP"
  },
  {
    "name": "T _fchownat",
    "type": "CPP"
  },
  {
    "name": "T _fclonefileat",
    "type": "CPP"
  },
  {
    "name": "T _fdatasync",
    "type": "CPP"
  },
  {
    "name": "T _fhopen",
    "type": "CPP"
  },
  {
    "name": "T _fmount",
    "type": "CPP"
  },
  {
    "name": "T _fpathconf",
    "type": "CPP"
  },
  {
    "name": "T _freadlink",
    "type": "CPP"
  },
  {
    "name": "T _fremovexattr",
    "type": "CPP"
  },
  {
    "name": "T _fsgetpath_ext",
    "type": "CPP"
  },
  {
    "name": "T ___fstat",
    "type": "CPP"
  },
  {
    "name": "T _fstat64",
    "type": "CPP"
  },
  {
    "name": "T ___fstatat",
    "type": "CPP"
  },
  {
    "name": "T _fstatat64",
    "type": "CPP"
  },
  {
    "name": "T ___fstatfs",
    "type": "CPP"
  },
  {
    "name": "T _getattrlistat",
    "type": "CPP"
  },
  {
    "name": "T _getauid",
    "type": "CPP"
  },
  {
    "name": "T _getdirentries",
    "type": "CPP"
  },
  {
    "name": "T _getdirentriesattr",
    "type": "CPP"
  },
  {
    "name": "T _getfh",
    "type": "CPP"
  },
  {
    "name": "T ___getfsstat",
    "type": "CPP"
  },
  {
    "name": "T _getfsstat64",
    "type": "CPP"
  },
  {
    "name": "T _getitimer",
    "type": "CPP"
  },
  {
    "name": "T _getsid",
    "type": "CPP"
  },
  {
    "name": "T _grab_pgo_data",
    "type": "CPP"
  },
  {
    "name": "T _graftdmg",
    "type": "CPP"
  },
  {
    "name": "T _guarded_writev_np",
    "type": "CPP"
  },
  {
    "name": "T _kas_info",
    "type": "CPP"
  },
  {
    "name": "T _ledger",
    "type": "CPP"
  },
  {
    "name": "T _linkat",
    "type": "CPP"
  },
  {
    "name": "T _lio_listio",
    "type": "CPP"
  },
  {
    "name": "T ___lstat",
    "type": "CPP"
  },
  {
    "name": "T _memorystatus_get_level",
    "type": "CPP"
  },
  {
    "name": "T _mincore",
    "type": "CPP"
  },
  {
    "name": "T _minherit",
    "type": "CPP"
  },
  {
    "name": "T _mkfifo",
    "type": "CPP"
  },
  {
    "name": "T _mkfifoat",
    "type": "CPP"
  },
  {
    "name": "T _mknod",
    "type": "CPP"
  },
  {
    "name": "T _mknodat",
    "type": "CPP"
  },
  {
    "name": "T _mlockall",
    "type": "CPP"
  },
  {
    "name": "T _mremap_encrypted",
    "type": "CPP"
  },
  {
    "name": "T _msgget",
    "type": "CPP"
  },
  {
    "name": "T _msgrcv",
    "type": "CPP"
  },
  {
    "name": "T _msgsnd",
    "type": "CPP"
  },
  {
    "name": "T _munlockall",
    "type": "CPP"
  },
  {
    "name": "T _necp_session_action",
    "type": "CPP"
  },
  {
    "name": "T _necp_session_open",
    "type": "CPP"
  },
  {
    "name": "T _net_qos_guideline",
    "type": "CPP"
  },
  {
    "name": "T _netagent_trigger",
    "type": "CPP"
  },
  {
    "name": "T _nfssvc",
    "type": "CPP"
  },
  {
    "name": "T _ntp_adjtime",
    "type": "CPP"
  },
  {
    "name": "T _ntp_gettime",
    "type": "CPP"
  },
  {
    "name": "T _objc_bp_assist_cfg_np",
    "type": "CPP"
  },
  {
    "name": "T _openbyid_np",
    "type": "CPP"
  },
  {
    "name": "T _os_fault_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _panic_with_data",
    "type": "CPP"
  },
  {
    "name": "T _peeloff",
    "type": "CPP"
  },
  {
    "name": "T _pid_hibernate",
    "type": "CPP"
  },
  {
    "name": "T _pid_resume",
    "type": "CPP"
  },
  {
    "name": "T _pid_shutdown_sockets",
    "type": "CPP"
  },
  {
    "name": "T _pid_suspend",
    "type": "CPP"
  },
  {
    "name": "T _pivot_root",
    "type": "CPP"
  },
  {
    "name": "T _preadv",
    "type": "CPP"
  },
  {
    "name": "T _proc_trace_log",
    "type": "CPP"
  },
  {
    "name": "T _proc_uuid_policy",
    "type": "CPP"
  },
  {
    "name": "T _pwritev",
    "type": "CPP"
  },
  {
    "name": "T _readlinkat",
    "type": "CPP"
  },
  {
    "name": "T _readv",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg_x",
    "type": "CPP"
  },
  {
    "name": "T _register_uexc_handler",
    "type": "CPP"
  },
  {
    "name": "T _revoke",
    "type": "CPP"
  },
  {
    "name": "T _searchfs",
    "type": "CPP"
  },
  {
    "name": "T _sem_post",
    "type": "CPP"
  },
  {
    "name": "T _sem_trywait",
    "type": "CPP"
  },
  {
    "name": "T _sem_unlink",
    "type": "CPP"
  },
  {
    "name": "T _sem_wait",
    "type": "CPP"
  },
  {
    "name": "T _semget",
    "type": "CPP"
  },
  {
    "name": "T _semop",
    "type": "CPP"
  },
  {
    "name": "T _sendfile",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg_x",
    "type": "CPP"
  },
  {
    "name": "T _setattrlistat",
    "type": "CPP"
  },
  {
    "name": "T _setaudit_addr",
    "type": "CPP"
  },
  {
    "name": "T _setauid",
    "type": "CPP"
  },
  {
    "name": "T _setgroups",
    "type": "CPP"
  },
  {
    "name": "T _setprivexec",
    "type": "CPP"
  },
  {
    "name": "T _shm_unlink",
    "type": "CPP"
  },
  {
    "name": "T _shmat",
    "type": "CPP"
  },
  {
    "name": "T _shmdt",
    "type": "CPP"
  },
  {
    "name": "T _shmget",
    "type": "CPP"
  },
  {
    "name": "T _sigpending",
    "type": "CPP"
  },
  {
    "name": "T _socket_delegate",
    "type": "CPP"
  },
  {
    "name": "T ___stat",
    "type": "CPP"
  },
  {
    "name": "T ___statfs",
    "type": "CPP"
  },
  {
    "name": "T _statfs64",
    "type": "CPP"
  },
  {
    "name": "T _swapon",
    "type": "CPP"
  },
  {
    "name": "T _symlinkat",
    "type": "CPP"
  },
  {
    "name": "T _sync",
    "type": "CPP"
  },
  {
    "name": "T _system_override",
    "type": "CPP"
  },
  {
    "name": "T _task_inspect_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_read_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _thread_selfcounts",
    "type": "CPP"
  },
  {
    "name": "T _tracker_action",
    "type": "CPP"
  },
  {
    "name": "T _truncate",
    "type": "CPP"
  },
  {
    "name": "T _undelete",
    "type": "CPP"
  },
  {
    "name": "T _ungraftdmg",
    "type": "CPP"
  },
  {
    "name": "T _usrctl",
    "type": "CPP"
  },
  {
    "name": "T _vfs_purge",
    "type": "CPP"
  },
  {
    "name": "T _vm_pressure_monitor",
    "type": "CPP"
  },
  {
    "name": "T _waitid",
    "type": "CPP"
  },
  {
    "name": "T __thread_set_tsd_base",
    "type": "CPP"
  },
  {
    "name": "t _bzero",
    "type": "CPP"
  },
  {
    "name": "t _memmove",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlen",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_late",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_after_boot_tasks",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strchr",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_bzero",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memset",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memmove",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_check_path_suffix",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_open_shim",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcpy",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __execve_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "t _port_for_id_internal",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _pkt_subtype_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _pkt_type_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_last_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_add_inet_csum_flags",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_clear_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_expiry_action",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_expiry_action",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_priority",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_app_metadata",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_wake_flag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_truncated",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_l4s_flag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_buflet_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_next_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_segment_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_finalize",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_add_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_increment_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_decrement_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_aggregation_type",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_tx_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _os_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_copy_and_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_trace_event",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_protocol_segment_size",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_tso_flags",
    "type": "CPP"
  },
  {
    "name": "T _reboot",
    "type": "CPP"
  },
  {
    "name": "T _reboot_np",
    "type": "CPP"
  },
  {
    "name": "t __mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _renameat",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise",
    "type": "CPP"
  },
  {
    "name": "t _fprintf_stderr",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T _host_get_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _host_get_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _host_check_multiuser_mode",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_type",
    "type": "CPP"
  },
  {
    "name": "T _mach_error",
    "type": "CPP"
  },
  {
    "name": "T _host_page_size",
    "type": "CPP"
  },
  {
    "name": "T __mach_fork_child",
    "type": "CPP"
  },
  {
    "name": "T _exclaves_endpoint_call",
    "type": "CPP"
  },
  {
    "name": "T _exclaves_named_buffer_create",
    "type": "CPP"
  },
  {
    "name": "T _exclaves_named_buffer_copyin",
    "type": "CPP"
  },
  {
    "name": "T _exclaves_named_buffer_copyout",
    "type": "CPP"
  },
  {
    "name": "T _exclaves_boot",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg2_internal",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_importance",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_is_pthread_priority",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_encode",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_overide_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_relpri",
    "type": "CPP"
  },
  {
    "name": "T _mig_allocate",
    "type": "CPP"
  },
  {
    "name": "T _quota",
    "type": "CPP"
  },
  {
    "name": "T _setquota",
    "type": "CPP"
  },
  {
    "name": "T _panic_init",
    "type": "CPP"
  },
  {
    "name": "T _panic",
    "type": "CPP"
  },
  {
    "name": "T _port_obj_init",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _msg_rpc",
    "type": "CPP"
  },
  {
    "name": "T _msg_send",
    "type": "CPP"
  },
  {
    "name": "T _msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _task_self_",
    "type": "CPP"
  },
  {
    "name": "T _host_self",
    "type": "CPP"
  },
  {
    "name": "T __mach_vsnprintf",
    "type": "CPP"
  },
  {
    "name": "T __mach_snprintf",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_self",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_construct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_destruct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_retain",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_consume",
    "type": "CPP"
  },
  {
    "name": "T _os_proc_available_memory",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_ringbuffer_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_mark_free",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_mark_used",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_update_kernel_accounting",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_is_available",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_reclaim_synchronize",
    "type": "CPP"
  },
  {
    "name": "T _proc_listallpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpgrppids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listchildpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listcoalitions",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_cpupercent",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfdinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfileportinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_piddynkqueueinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_udata_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_regionfilename",
    "type": "CPP"
  },
  {
    "name": "T _proc_kmsgbuf",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _proc_current_thread_schedinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_libversion",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_terminate",
    "type": "CPP"
  },
  {
    "name": "T _proc_terminate_all_rsr",
    "type": "CPP"
  },
  {
    "name": "T _proc_resume_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params_fatal",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_uptrs",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_dynkqueueids",
    "type": "CPP"
  },
  {
    "name": "T _proc_setcpu_percentage",
    "type": "CPP"
  },
  {
    "name": "T _proc_reset_footprint_interval",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_cpulimits",
    "type": "CPP"
  },
  {
    "name": "T _proc_donate_importance_boost",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_owner_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_enable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_suppress",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_csm",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_csm",
    "type": "CPP"
  },
  {
    "name": "T __getprivatesystemidentifier",
    "type": "CPP"
  },
  {
    "name": "T __register_gethostuuid_callback",
    "type": "CPP"
  },
  {
    "name": "T _mach_boottime_usec",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _nfsclnt",
    "type": "CPP"
  },
  {
    "name": "T _open$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _openat$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _futimens",
    "type": "CPP"
  },
  {
    "name": "t _prepare_times_array_and_attrs",
    "type": "CPP"
  },
  {
    "name": "T _utimensat",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_register_pointer_values",
    "type": "CPP"
  },
  {
    "name": "T _renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _renamex_np",
    "type": "CPP"
  },
  {
    "name": "T _rename_ext",
    "type": "CPP"
  },
  {
    "name": "T _log_data_as_kernel",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setdataless_iopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_subsystem_root_path_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_platform_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_disable_ptr_auth_a_keys_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_alt_rosetta_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_crash_behavior_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_crash_behavior_deadline_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_crash_count_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_add_fileportdup2_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addfchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_threadlimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_importancewatch_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_registered_ports_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_ptrauth_task_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcoalition_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_max_addr_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setnosmt_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_csm_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_login_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_conclave_id_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_portlimits_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_filedesclimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_jetsam_ttr_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_launch_type_np",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_create",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pid",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_capture_with_config",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_size",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_size_hint",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_delta_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pagetable_mask",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc",
    "type": "CPP"
  },
  {
    "name": "T ___darwin_check_fd_set_overflow",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _system_get_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _sfi_get_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create_extended",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_info2attr",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_init_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_write_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_nexus_extension_info",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_sync",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_is_defunct",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_id",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_tx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_rx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_pending",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_sync_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_notify_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_available_slot_count",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_advance_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_set_slot_properties",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_get_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_stats_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_advisory_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_flow_admissible",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_flow_adv_get_ce_count",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_alloc",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_packet_alloc_common",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_large_packet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_attach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_detach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_pool_purge",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_purge_packet_alloc_ring_common",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_event_handle",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_configure_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _sem_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sem_getvalue",
    "type": "CPP"
  },
  {
    "name": "T _sem_init",
    "type": "CPP"
  },
  {
    "name": "T _pid_shutdown_networking",
    "type": "CPP"
  },
  {
    "name": "T _coalition_create",
    "type": "CPP"
  },
  {
    "name": "T _coalition_terminate",
    "type": "CPP"
  },
  {
    "name": "T _coalition_reap",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_resource_usage",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_debug_info",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_name",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_efficiency",
    "type": "CPP"
  },
  {
    "name": "T _coalition_ledger_set_logical_writes_limit",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_create",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_delete",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_rename",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_revert",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_root",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_mount",
    "type": "CPP"
  },
  {
    "name": "T _debug_syscall_reject_config",
    "type": "CPP"
  },
  {
    "name": "T _debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_using_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_absolute",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_continuous",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost",
    "type": "CPP"
  },
  {
    "name": "T _record_system_event_as_kernel",
    "type": "CPP"
  },
  {
    "name": "T _pselect",
    "type": "CPP"
  },
  {
    "name": "T _pselect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_register_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_deregister_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_alloc_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_free_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_bind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_unbind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_read_provider_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_add_traffic_rule",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_remove_traffic_rule",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_iterate_traffic_rules",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifattach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifdetach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_add",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_del",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_flow_set_wake_from_sleep",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_get_llink_info",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T _openat",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_get_flags_from_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify_simple",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_clear",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_free",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_telemetry_data",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_update",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_destroy",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_leave",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_copy_port",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _openat_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T _openat_authenticated_np",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpidspath",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_next_event",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_event_data",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T _task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_start",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_stop",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _getaudit",
    "type": "CPP"
  },
  {
    "name": "T _setaudit",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_alloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_palloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_dealloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_getpath",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find_by_type",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_time",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm_reply",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server_routine",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server",
    "type": "CPP"
  },
  {
    "name": "T _host_get_boot_info",
    "type": "CPP"
  },
  {
    "name": "T _host_reboot",
    "type": "CPP"
  },
  {
    "name": "T _host_priv_statistics",
    "type": "CPP"
  },
  {
    "name": "T _host_default_memory_manager",
    "type": "CPP"
  },
  {
    "name": "T _vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _thread_wire",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate_cpm",
    "type": "CPP"
  },
  {
    "name": "T _host_processors",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_control",
    "type": "CPP"
  },
  {
    "name": "T _kmod_create",
    "type": "CPP"
  },
  {
    "name": "T _kmod_destroy",
    "type": "CPP"
  },
  {
    "name": "T _kmod_control",
    "type": "CPP"
  },
  {
    "name": "T _host_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _host_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_sets",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_set_priv",
    "type": "CPP"
  },
  {
    "name": "T _host_set_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _host_get_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _kext_request",
    "type": "CPP"
  },
  {
    "name": "T _host_security_create_task_token",
    "type": "CPP"
  },
  {
    "name": "T _host_security_set_task_token",
    "type": "CPP"
  },
  {
    "name": "T _host_kernel_version",
    "type": "CPP"
  },
  {
    "name": "T __host_page_size",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_info",
    "type": "CPP"
  },
  {
    "name": "T _host_get_io_main",
    "type": "CPP"
  },
  {
    "name": "T _kmod_get_info",
    "type": "CPP"
  },
  {
    "name": "T _host_virtual_physical_table_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_default",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T _host_lockgroup_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_force_gc",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _host_register_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_register_well_known_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_set_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_info",
    "type": "CPP"
  },
  {
    "name": "T _host_set_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_largest_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_zlog_zones",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_btlog_records",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_special_reply_port_reset_link",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_write",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_query",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_range_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deferred_reclamation_buffer_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deferred_reclamation_buffer_synchronize",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deferred_reclamation_buffer_update_reclaimable_bytes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_range_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_deleted",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_destroyed",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_no_senders",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_send_once",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_dead_name",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_statistics",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_max_priority",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_enable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_disable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_threads",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_stack_usage",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks_with_flavor",
    "type": "CPP"
  },
  {
    "name": "T _processor_start",
    "type": "CPP"
  },
  {
    "name": "T _processor_exit",
    "type": "CPP"
  },
  {
    "name": "T _processor_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_assign",
    "type": "CPP"
  },
  {
    "name": "T _processor_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_in",
    "type": "CPP"
  },
  {
    "name": "T _netname_look_up",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_out",
    "type": "CPP"
  },
  {
    "name": "T _netname_version",
    "type": "CPP"
  },
  {
    "name": "T _task_create",
    "type": "CPP"
  },
  {
    "name": "T _task_terminate",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend",
    "type": "CPP"
  },
  {
    "name": "T _task_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_create",
    "type": "CPP"
  },
  {
    "name": "T _thread_create_running",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_create",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_get",
    "type": "CPP"
  },
  {
    "name": "T _task_sample",
    "type": "CPP"
  },
  {
    "name": "T _task_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation",
    "type": "CPP"
  },
  {
    "name": "T _task_get_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_ras_pc",
    "type": "CPP"
  },
  {
    "name": "T _task_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _task_assign",
    "type": "CPP"
  },
  {
    "name": "T _task_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _task_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _task_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_get_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_phys_footprint_limit",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend2",
    "type": "CPP"
  },
  {
    "name": "T _task_resume2",
    "type": "CPP"
  },
  {
    "name": "T _task_purgable_info",
    "type": "CPP"
  },
  {
    "name": "T _task_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_generate_corpse",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_unregister_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_get_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_shared_cache_image_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_set_dyld_state",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_get_process_state",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info_64",
    "type": "CPP"
  },
  {
    "name": "T _task_inspect",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_register",
    "type": "CPP"
  },
  {
    "name": "T _task_create_identity_token",
    "type": "CPP"
  },
  {
    "name": "T _task_identity_token_get_task_port",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_deregister",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _task_test_sync_upcall",
    "type": "CPP"
  },
  {
    "name": "T _task_set_corpse_forking_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_test_async_upcall_propagation",
    "type": "CPP"
  },
  {
    "name": "T _task_map_kcdata_object_64",
    "type": "CPP"
  },
  {
    "name": "T _thread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _act_get_state",
    "type": "CPP"
  },
  {
    "name": "T _act_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_suspend",
    "type": "CPP"
  },
  {
    "name": "T _thread_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort_safely",
    "type": "CPP"
  },
  {
    "name": "T _thread_depress_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _thread_sample",
    "type": "CPP"
  },
  {
    "name": "T _etap_trace_thread",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_convert_thread_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _vm_write",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T _vm_map_page_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_access_tracking",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_ownership",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_associate",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_disassociate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_all_attr_recipes",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_debug_info",
    "type": "CPP"
  },
  {
    "name": "t _abort",
    "type": "CPP"
  },
  {
    "name": "t _abort.561",
    "type": "CPP"
  },
  {
    "name": "t _abort.563",
    "type": "CPP"
  },
  {
    "name": "t _abort.580",
    "type": "CPP"
  },
  {
    "name": "T _abort_with_reason",
    "type": "CPP"
  },
  {
    "name": "t _abort_with_payload_wrapper_internal",
    "type": "CPP"
  },
  {
    "name": "T _abort_with_payload",
    "type": "CPP"
  },
  {
    "name": "S ____kernelVersionString",
    "type": "CPP"
  },
  {
    "name": "S ____kernelVersionNumber",
    "type": "CPP"
  },
  {
    "name": "s __libkernel_voucher_functions_empty",
    "type": "CPP"
  },
  {
    "name": "s ___kernelVersionString",
    "type": "CPP"
  },
  {
    "name": "s ___kernelVersionNumber",
    "type": "CPP"
  },
  {
    "name": "s _err_us_sub",
    "type": "CPP"
  },
  {
    "name": "s _err_iokit_sub_map",
    "type": "CPP"
  },
  {
    "name": "s _err_codes_iokit_common_map",
    "type": "CPP"
  },
  {
    "name": "s _err_codes_iokit_usb_map",
    "type": "CPP"
  },
  {
    "name": "s _err_codes_iokit_fw_map",
    "type": "CPP"
  },
  {
    "name": "s _times_now",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_platform.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _os_unfair_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcmp",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncmp",
    "type": "CPP"
  },
  {
    "name": "T __platform_strnlen",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlen",
    "type": "CPP"
  },
  {
    "name": "T __os_once",
    "type": "CPP"
  },
  {
    "name": "t __os_once_callout",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_owner",
    "type": "CPP"
  },
  {
    "name": "T _ffs",
    "type": "CPP"
  },
  {
    "name": "T _ffsll",
    "type": "CPP"
  },
  {
    "name": "T _fls",
    "type": "CPP"
  },
  {
    "name": "T _flsll",
    "type": "CPP"
  },
  {
    "name": "T __os_alloc_once",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcpy",
    "type": "CPP"
  },
  {
    "name": "T __platform_memchr",
    "type": "CPP"
  },
  {
    "name": "T __platform_memcmp",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDequeue",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern4",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern8",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern16",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_not_owner",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicEnqueue",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T __platform_strstr",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncpy",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_tryunlock4objc",
    "type": "CPP"
  },
  {
    "name": "T __setjmp",
    "type": "CPP"
  },
  {
    "name": "T __longjmp",
    "type": "CPP"
  },
  {
    "name": "T _sigsetjmp",
    "type": "CPP"
  },
  {
    "name": "T _setjmp",
    "type": "CPP"
  },
  {
    "name": "T _siglongjmp",
    "type": "CPP"
  },
  {
    "name": "T _longjmp",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcat",
    "type": "CPP"
  },
  {
    "name": "T __simple_salloc",
    "type": "CPP"
  },
  {
    "name": "T __simple_vsprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_sprintf",
    "type": "CPP"
  },
  {
    "name": "t _hex",
    "type": "CPP"
  },
  {
    "name": "T __simple_string",
    "type": "CPP"
  },
  {
    "name": "T __simple_sfree",
    "type": "CPP"
  },
  {
    "name": "t _dec",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log_prog",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_new",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_set",
    "type": "CPP"
  },
  {
    "name": "T __simple_esprintf",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_key",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_val",
    "type": "CPP"
  },
  {
    "name": "T __simple_sappend",
    "type": "CPP"
  },
  {
    "name": "T __simple_sresize",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_send",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_connect_once",
    "type": "CPP"
  },
  {
    "name": "t _udec",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwap64",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_dispose",
    "type": "CPP"
  },
  {
    "name": "T ___platform_sigaction",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_wait",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement32",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement32",
    "type": "CPP"
  },
  {
    "name": "T ___libplatform_init",
    "type": "CPP"
  },
  {
    "name": "t ___pfz_setup",
    "type": "CPP"
  },
  {
    "name": "T __simple_getenv",
    "type": "CPP"
  },
  {
    "name": "T __platform_bzero",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc_slow",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init_context",
    "type": "CPP"
  },
  {
    "name": "T __platform_memmove",
    "type": "CPP"
  },
  {
    "name": "T __platform_strchr",
    "type": "CPP"
  },
  {
    "name": "T _spin_lock",
    "type": "CPP"
  },
  {
    "name": "T _spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement64",
    "type": "CPP"
  },
  {
    "name": "t __sigtramp",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock_slow",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwap32",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd32",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T _OSMemoryBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwap64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwap32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapPtrBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicXor32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T __OSSpinLockLockSlow",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd64",
    "type": "CPP"
  },
  {
    "name": "T _OSSpinLockTry",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapLongBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndSetBarrier",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_trylock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapInt",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapLong",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapPtr",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndClear",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement64",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd64Barrier",
    "type": "CPP"
  },
  {
    "name": "t __sigunaltstack",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32Orig",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapIntBarrier",
    "type": "CPP"
  },
  {
    "name": "T __simple_vesprintf",
    "type": "CPP"
  },
  {
    "name": "t ___simple_bprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_esappend",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32Orig",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndSet",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndClearBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_now",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_type_from_asl",
    "type": "CPP"
  },
  {
    "name": "T ___os_log_simple_offset",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_send",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_shim",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_type",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_subsystem",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_message",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_timestamp",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_identifiers",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_reinit_4launchd",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_connect",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_get_fd",
    "type": "CPP"
  },
  {
    "name": "T __simple_vdprintf",
    "type": "CPP"
  },
  {
    "name": "t __flush_reset",
    "type": "CPP"
  },
  {
    "name": "t __flush",
    "type": "CPP"
  },
  {
    "name": "T __simple_dprintf",
    "type": "CPP"
  },
  {
    "name": "t __enlarge",
    "type": "CPP"
  },
  {
    "name": "T __simple_put",
    "type": "CPP"
  },
  {
    "name": "T __simple_putline",
    "type": "CPP"
  },
  {
    "name": "t _oct",
    "type": "CPP"
  },
  {
    "name": "t _ydec",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue",
    "type": "CPP"
  },
  {
    "name": "T _sys_cache_control",
    "type": "CPP"
  },
  {
    "name": "T _sys_icache_invalidate",
    "type": "CPP"
  },
  {
    "name": "t _cpus_that_need_dsb_for_ic_ivau",
    "type": "CPP"
  },
  {
    "name": "T _sys_dcache_flush",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_pthread.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T __pthread_exit_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_strtoul",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_bsdthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_set_main_qos",
    "type": "CPP"
  },
  {
    "name": "t __pthread_key_global_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_global_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_init_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_lock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_lock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_unlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_unlock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_main",
    "type": "CPP"
  },
  {
    "name": "T _start_wqthread",
    "type": "CPP"
  },
  {
    "name": "T _thread_start",
    "type": "CPP"
  },
  {
    "name": "T _thread_chkstk_darwin",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_atfork",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_settype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_equal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_supported",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_set_event_manager_priority",
    "type": "CPP"
  },
  {
    "name": "T _pthread_once",
    "type": "CPP"
  },
  {
    "name": "t ___pthread_once_handler",
    "type": "CPP"
  },
  {
    "name": "T _pthread_qos_max_parallelism",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_addthreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_wqthread",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_rdlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_wrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_markcancel_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_self_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_properties_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_testcancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_droplock",
    "type": "CPP"
  },
  {
    "name": "T _sched_yield",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_updateval",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stackaddr_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_wake",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_reset",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_should_narrow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stacksize_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_trylock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_decode",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_setcancelstate_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_tsd_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate_invoke",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T __pthread_clear_qos_tsd",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_destroy",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_stack_frame_decode_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct_check_owner",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_trywrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_drop",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_end_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait_relative_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_threadid_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_start_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcanceltype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_fixedpriority_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_end_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_detach",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare_handlers",
    "type": "CPP"
  },
  {
    "name": "T _pthread_is_threaded_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent_handlers",
    "type": "CPP"
  },
  {
    "name": "t __pthread_current_stack_address",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_delete",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_prepost_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_timeshare_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_workloop",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_fchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_max",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode_workqueue",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_start_direct",
    "type": "CPP"
  },
  {
    "name": "T __pthread_start",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_end_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_parent",
    "type": "CPP"
  },
  {
    "name": "T _sigwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatch_np",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_min",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcancelstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_globals_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setcpupercent_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_from_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_threadid_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cpu_number_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_supported_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_with_callback_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_freeze_callbacks_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_jit_write_protect_freeze_config",
    "type": "CPP"
  },
  {
    "name": "t __pthread_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_from_mach_thread",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_suspended_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_install_workgroup_functions_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_with_workgroup_np",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_workqueue_setkill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self_is_exiting_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getconcurrency",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setconcurrency",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_late_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_thread_start",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_postfork_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_yield_to_enqueuer_4dispatch",
    "type": "CPP"
  },
  {
    "name": "T _pthread_current_stack_contains_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_legacy_worker_wrap",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatchoffset_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_kevent",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_addthreads_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_add_cooperativethreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_introspection_hook_install",
    "type": "CPP"
  },
  {
    "name": "t _bzero",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_terminate",
    "type": "CPP"
  },
  {
    "name": "t __pthread_jit_write_protect_bulk_image_load_callback",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_start",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_destroy",
    "type": "CPP"
  },
  {
    "name": "t _OUTLINED_FUNCTION_0",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_join",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sigwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_abort_wait",
    "type": "CPP"
  },
  {
    "name": "t _OUTLINED_FUNCTION_0",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal_thread_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_wait_complete",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_psynch_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _OUTLINED_FUNCTION_0",
    "type": "CPP"
  },
  {
    "name": "t _OUTLINED_FUNCTION_1",
    "type": "CPP"
  },
  {
    "name": "t _OUTLINED_FUNCTION_2",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_relaxed",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_acquire",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_release",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_gettype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpolicy_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_unlock_drop",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_ulock_lock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_ulock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_ulock_unlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_ulock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_unlock",
    "type": "CPP"
  },
  {
    "name": "T __pthread_mutex_enable_legacy_mode",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_lock",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_and_override_encode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_and_override_decode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_sched_pri_encode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_sched_pri_decode",
    "type": "CPP"
  },
  {
    "name": "T _pthread_prefer_alternate_cluster_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_asynchronous_override_add",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_asynchronous_override_reset_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_asynchronous_override_reset_all_self",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_symptoms.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_trace.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libunwind.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libxpc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++abi.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libobjc.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/liboah.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlicommon.1.1.0.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libresolv.9.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libfakelink.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libicucore.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libDiagnosticMessagesClient.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libenergytrace.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libbsm.0.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libkxld.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Security.framework/Versions/A/Security",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libapple_nghttp2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libcompression.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libsqlite3.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Network.framework/Versions/A/Network",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libCoreEntitlements.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libMobileGestalt.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libcoretls.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libcoretls_cfhelpers.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libpam.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libxar.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libarchive.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libxml2.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/liblangid.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Combine.framework/Versions/A/Combine",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftCore.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftCoreFoundation.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftDarwin.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftDispatch.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftIOKit.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftObjectiveC.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftXPC.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswift_Concurrency.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswift_StringProcessing.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswiftos.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libpcap.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libdns_services.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libnetwork.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/liblzma.5.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/swift/libswift_RegexParser.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libbz2.1.0.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libiconv.2.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libcharset.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libheimdal-asn1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libCheckFix.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libmecab.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libCRFSuite.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libgermantok.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libThaiTokenizer.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libutil.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libapp_launch_measurement.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libmis.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libxslt.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libcmph.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libTLE.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "DeoptimizationEntry_Eager",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DeoptimizationEntry_Lazy",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteSaveFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RecordWriteIgnoreFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EphemeronKeyBarrierSaveFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EphemeronKeyBarrierIgnoreFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AdaptorWithBuiltinExitFrame",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IndirectPointerBarrierSaveFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IndirectPointerBarrierIgnoreFP",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsNullOrUndefined",
    "timestamp": 2709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsNotNullOrUndefined",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunction_ReceiverIsAny",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallBoundFunction",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWrappedFunction",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_Baseline_Compact",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_Baseline",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_Baseline_Compact",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_Baseline",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_Baseline_Compact",
    "timestamp": 2750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_Baseline",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNullOrUndefined_WithFeedback",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsNotNullOrUndefined_WithFeedback",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Call_ReceiverIsAny_WithFeedback",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallProxy",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallVarargs",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread_Baseline",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithSpread_WithFeedback",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithArrayLike",
    "timestamp": 2792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallWithArrayLike_WithFeedback",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallForwardVarargs",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionForwardVarargs",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_Generic",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckAccess",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckCompatibleReceiver",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallFunctionTemplate_CheckAccessAndCompatibleReceiver",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructFunction",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructBoundFunction",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructedNonConstructable",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructVarargs",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread_Baseline",
    "timestamp": 2834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithSpread_WithFeedback",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithArrayLike",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructWithArrayLike_WithFeedback",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructForwardVarargs",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructFunctionForwardVarargs",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct_Baseline",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Construct_WithFeedback",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructStubGeneric",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSBuiltinsConstructStub",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewObject",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewClosure",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConstructProxy",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSEntry",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructEntry",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSRunMicrotasksEntry",
    "timestamp": 2875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSEntryTrampoline",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSConstructEntryTrampoline",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResumeGeneratorTrampoline",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCodePointAt",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringEqual",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringGreaterThan",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringGreaterThanOrEqual",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringLessThan",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringLessThanOrEqual",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringCompare",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringSubstring",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrderedHashTableHealIndex",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEntryTrampoline",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEntryTrampolineForProfiling",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenCall",
    "timestamp": 2917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushUndefinedAndArgsThenCall",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenCallWithFinalSpread",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstruct",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenFastConstructFunction",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstructArrayFunction",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterPushArgsThenConstructWithFinalSpread",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEnterAtBytecode",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterEnterAtNextBytecode",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterOnStackReplacement",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOutOfLinePrologue",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOutOfLinePrologueDeopt",
    "timestamp": 2959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOnStackReplacement",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineLeaveFrame",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOrInterpreterEnterAtBytecode",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BaselineOrInterpreterEnterAtNextBytecode",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InterpreterOnStackReplacement_ToBaseline",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MaglevOnStackReplacement",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MaglevFunctionEntryStackCheck_WithoutNewTarget",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MaglevFunctionEntryStackCheck_WithNewTarget",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MaglevOptimizeCodeOrTailCallOptimizedCodeSlot",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CompileLazy",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CompileLazyDeoptimizedCode",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstantiateAsmJs",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NotifyDeoptimized",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToCodeStubBuiltin",
    "timestamp": 3000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToCodeStubBuiltinWithResult",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToJavaScriptBuiltin",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ContinueToJavaScriptBuiltinWithResult",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiCallbackGeneric",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiCallbackOptimizedNoProfiling",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiCallbackOptimized",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallApiGetter",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCallOrConstruct",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiConstruct",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCallAsFunctionDelegate",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HandleApiCallAsConstructorDelegate",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateInYoungGeneration",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AllocateInOldGeneration",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewHeapNumber",
    "timestamp": 3042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyFastSmiOrObjectElements",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GrowFastDoubleElements",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GrowFastSmiOrObjectElements",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DebugBreakTrampoline",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RestartFrameTrampoline",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumber",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBigInt",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumber_Baseline",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumeric_Baseline",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PlainPrimitiveToNumber",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumberConvertBigInt",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBigIntConvertNumber",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Typeof",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntToI64",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntToI32Pair",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "I64ToBigInt",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "I32PairToBigInt",
    "timestamp": 3084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBooleanLazyDeoptContinuation",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCeilContinuation",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathFloorContinuation",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathRoundContinuation",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_PolymorphicName",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_Megamorphic",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnIC_Megamorphic",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalIC_NoFeedback",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_FunctionPrototype",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_StringLength",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_StringWrapperLength",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_NoFeedback",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalIC_Slow",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreIC_NoFeedback",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnIC_NoFeedback",
    "timestamp": 3125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_SloppyArguments",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIndexedInterceptorIC",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_Standard",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_Standard",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_GrowNoTransitionHandleCOW",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_NoTransitionIgnoreOOB",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreFastElementIC_NoTransitionHandleCOW",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_Standard",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_GrowNoTransitionHandleCOW",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_NoTransitionIgnoreOOB",
    "timestamp": 3167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ElementsTransitionAndStore_NoTransitionHandleCOW",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_PolymorphicName",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_SloppyArguments",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HasIndexedInterceptorIC",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EnqueueMicrotask",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RunMicrotasksTrampoline",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RunMicrotasks",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "HasProperty",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DeleteProperty",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataProperties",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetDataProperties",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataPropertiesWithExcludedPropertiesOnStack",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CopyDataPropertiesWithExcludedProperties",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Abort",
    "timestamp": 3209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AbortCSADcheck",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "EmptyFunction",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Illegal",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictPoisonPillThrower",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "UnsupportedThrower",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReturnReceiver",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConstructor",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConstructorImpl",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedSmi_DontOverride",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleySmi_DontOverride",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_Packed_DisableAllocationSites",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_Holey_DisableAllocationSites",
    "timestamp": 3250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedSmi_DontOverride",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleySmi_DontOverride",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_Packed_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_Holey_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites",
    "timestamp": 3292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayNArgumentsConstructor",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayConcat",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFill",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesSmi",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesSmiOrObject",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesPackedDoubles",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludesHoleyDoubles",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIncludes",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfSmi",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfSmiOrObject",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfPackedDoubles",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOfHoleyDoubles",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIndexOf",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPop",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypePop",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPush",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypePush",
    "timestamp": 3334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayShift",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayUnshift",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFromAsync",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneFastJSArray",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneFastJSArrayFillingHoles",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ExtractFastJSArray",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeEntries",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeKeys",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeValues",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIteratorPrototypeNext",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FlattenIntoArray",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FlatMapIntoArray",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFlat",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFlatMap",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferConstructor",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferConstructor_DoNotInitialize",
    "timestamp": 3375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeSlice",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeResize",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeTransfer",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeTransferToFixedLength",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionEnter",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionReject",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionResolve",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionLazyDeoptContinuation",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitCaught",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitUncaught",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitRejectClosure",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionAwaitResolveClosure",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntConstructor",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAsUintN",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAsIntN",
    "timestamp": 3417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeToLocaleString",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeToString",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntPrototypeValueOf",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetColumnNumber",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEnclosingColumnNumber",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEnclosingLineNumber",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetEvalOrigin",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFileName",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFunction",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetFunctionName",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetLineNumber",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetMethodName",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetPosition",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetPromiseIndex",
    "timestamp": 3459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetScriptHash",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetScriptNameOrSourceURL",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetThis",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeGetTypeName",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsAsync",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsConstructor",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsEval",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsNative",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsPromiseAll",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeIsToplevel",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallSitePrototypeToString",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDebug",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleError",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleInfo",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleLog",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleWarn",
    "timestamp": 3500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDir",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleDirXml",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTable",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTrace",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroup",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroupCollapsed",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleGroupEnd",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleClear",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleCount",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleCountReset",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleAssert",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleProfile",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleProfileEnd",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTime",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeLog",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeEnd",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleTimeStamp",
    "timestamp": 3542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConsoleContext",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewConstructor",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateConstructor",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetDate",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetDay",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetFullYear",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetHours",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMilliseconds",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMinutes",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetMonth",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetSeconds",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetTime",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetTimezoneOffset",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCDate",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCDay",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCFullYear",
    "timestamp": 3584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCHours",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMilliseconds",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMinutes",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCMonth",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetUTCSeconds",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeValueOf",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToPrimitive",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeGetYear",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetYear",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateNow",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateParse",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetDate",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetFullYear",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetHours",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMilliseconds",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMinutes",
    "timestamp": 3625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetMonth",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetSeconds",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetTime",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCDate",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCFullYear",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCHours",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMilliseconds",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMinutes",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCMonth",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeSetUTCSeconds",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToDateString",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToISOString",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToUTCString",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToString",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToTimeString",
    "timestamp": 3667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToJson",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateUTC",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorConstructor",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorCaptureStackTrace",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ErrorPrototypeToString",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionConstructor",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeApply",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeBind",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeCall",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeToString",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateIterResultObject",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateGeneratorObject",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorFunctionConstructor",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeNext",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeReturn",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GeneratorPrototypeThrow",
    "timestamp": 3709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFunctionConstructor",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SuspendGeneratorBaseline",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResumeGeneratorBaseline",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorWithFeedbackLazyDeoptContinuation",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallIteratorWithFeedbackLazyDeoptContinuation",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalDecodeURI",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalDecodeURIComponent",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEncodeURI",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEncodeURIComponent",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEscape",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalUnescape",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalEval",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalIsFinite",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GlobalIsNaN",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonParse",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonStringify",
    "timestamp": 3750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonRawJson",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JsonIsRawJson",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_Megamorphic",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadIC_Noninlined",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICTrampoline",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICBaseline",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadICTrampoline_Megamorphic",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadSuperIC",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadSuperICBaseline",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_Megamorphic",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadIC_MegamorphicStringKey",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICTrampoline",
    "timestamp": 3792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICBaseline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICTrampoline_Megamorphic",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedLoadICTrampoline_MegamorphicStringKey",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalIC",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalICTrampoline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreGlobalICBaseline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreIC",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreICTrampoline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreICBaseline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnIC",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnICTrampoline",
    "timestamp": 3834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineNamedOwnICBaseline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreIC",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreICTrampoline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedStoreICBaseline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnIC",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnICTrampoline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DefineKeyedOwnICBaseline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreInArrayLiteralIC",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreInArrayLiteralICBaseline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextTrampoline",
    "timestamp": 3875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextBaseline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextInsideTypeofTrampoline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupContextInsideTypeofBaseline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalIC",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeof",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICTrampoline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICBaseline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeofTrampoline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadGlobalICInsideTypeofBaseline",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalIC",
    "timestamp": 3917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICTrampoline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICBaseline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICInsideTypeof",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICInsideTypeofTrampoline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LookupGlobalICInsideTypeofBaseline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectIC",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectICBaseline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CloneObjectIC_Slow",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasICBaseline",
    "timestamp": 3959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "KeyedHasIC_Megamorphic",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToList",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArray",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToListWithSymbolLookup",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArrayWithSymbolLookupSlow",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToListMayPreserveHoles",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IterableToFixedArrayForWasm",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringListFromIterable",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FindOrderedHashMapEntry",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapConstructor",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeSet",
    "timestamp": 4000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeDelete",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeGet",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeHas",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeClear",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeEntries",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeGetSize",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeForEach",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeKeys",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapPrototypeValues",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapIteratorPrototypeNext",
    "timestamp": 4042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapIteratorToList",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToExponential",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToFixed",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToLocaleString",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToPrecision",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SameValue",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SameValueNumbersOnly",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add_Baseline",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AddSmi_Baseline",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract_Baseline",
    "timestamp": 4084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SubtractSmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MultiplySmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DivideSmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ModulusSmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ExponentiateSmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAndSmi_Baseline",
    "timestamp": 4125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOrSmi_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXorSmi_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeftSmi_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightSmi_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogicalSmi_Baseline",
    "timestamp": 4167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft_WithFeedback",
    "timestamp": 4209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight_WithFeedback",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical_WithFeedback",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual_Baseline",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal_WithFeedback",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual_WithFeedback",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan_WithFeedback",
    "timestamp": 4250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot_Baseline",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement_Baseline",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment_Baseline",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate_Baseline",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment_WithFeedback",
    "timestamp": 4292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate_WithFeedback",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectAssign",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectCreate",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineGetter",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineProperties",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineProperty",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectDefineSetter",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectEntries",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectFreeze",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyDescriptor",
    "timestamp": 4334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyDescriptors",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertyNames",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetOwnPropertySymbols",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectHasOwn",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIs",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsFrozen",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsSealed",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectKeys",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectLookupGetter",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectLookupSetter",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeHasOwnProperty",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeIsPrototypeOf",
    "timestamp": 4375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypePropertyIsEnumerable",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeGetProto",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeSetProto",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectSeal",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectToString",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectValues",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryHasInstance",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf_WithFeedback",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "InstanceOf_Baseline",
    "timestamp": 4417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInEnumerate",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInPrepare",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInFilter",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectApply",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectConstruct",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectDefineProperty",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectOwnKeys",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectSet",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture1Getter",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture2Getter",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture3Getter",
    "timestamp": 4459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture4Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture5Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture6Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture7Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture8Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpCapture9Getter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpConstructor",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInputGetter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInputSetter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLastMatchGetter",
    "timestamp": 4500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLastParenGetter",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpLeftContextGetter",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeCompile",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeToString",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpRightContextGetter",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExecAtom",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExecInternal",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpInterpreterTrampoline",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpExperimentalTrampoline",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FindOrderedHashSetEntry",
    "timestamp": 4542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetConstructor",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeHas",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeAdd",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeDelete",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeClear",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeEntries",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeGetSize",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeForEach",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeValues",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetIteratorPrototypeNext",
    "timestamp": 4584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetOrSetIteratorToList",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmConstructor",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmGetWrappedValue",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmPrototypeEvaluate",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmPrototypeImportValue",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmImportValueFulfilled",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShadowRealmImportValueRejected",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetByteLength",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeSlice",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGrow",
    "timestamp": 4625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsLoad",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsStore",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsExchange",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsCompareExchange",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsAdd",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsSub",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsAnd",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsOr",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsXor",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsNotify",
    "timestamp": 4667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsIsLockFree",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsWait",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsWaitAsync",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCodePoint",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFromCharCode",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLastIndexOf",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeMatchAll",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLocaleCompare",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeReplace",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSplit",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringRaw",
    "timestamp": 4709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolConstructor",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolFor",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolKeyFor",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayBaseConstructor",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayConstructor",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeBuffer",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeByteLength",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeByteOffset",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeLength",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeCopyWithin",
    "timestamp": 4750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFill",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeIncludes",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeIndexOf",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeLastIndexOf",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReverse",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToStringTag",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeMap",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSToWasmWrapperAsm",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmReturnPromiseOnSuspendAsm",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmToJsWrapperAsm",
    "timestamp": 4792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmToJsWrapperCSA",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmSuspend",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmResume",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmReject",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmCompileLazy",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmLiftoffFrameSetup",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmDebugBreak",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmOnStackReplace",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFloat32ToNumber",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFloat64ToNumber",
    "timestamp": 4834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFloat64ToString",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSToWasmLazyDeoptContinuation",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapConstructor",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapLookupHashIndex",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapGet",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeHas",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeSet",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakMapPrototypeDelete",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetConstructor",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeHas",
    "timestamp": 4875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeAdd",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakSetPrototypeDelete",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakCollectionDelete",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakCollectionSet",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedSpaceJSObjectHasInstance",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedStructTypeConstructor",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedStructTypeIsSharedStruct",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedStructConstructor",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayConstructor",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayIsSharedArray",
    "timestamp": 4917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsMutexConstructor",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsMutexIsMutex",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsMutexLock",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsMutexTryLock",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsConditionConstructor",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsConditionIsCondition",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsConditionWait",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AtomicsConditionNotify",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorResolve",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReject",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorYieldWithAwait",
    "timestamp": 4959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturn",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorResumeNext",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorFunctionConstructor",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeNext",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeReturn",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorPrototypeThrow",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitCaught",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitUncaught",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitResolveClosure",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorAwaitRejectClosure",
    "timestamp": 5000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorYieldWithAwaitResolveClosure",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnClosedResolveClosure",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnClosedRejectClosure",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncGeneratorReturnResolveClosure",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeNext",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeThrow",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncFromSyncIteratorPrototypeReturn",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncIteratorValueUnwrap",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_ArgvInRegister_NoBuiltinExit",
    "timestamp": 5042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_ArgvOnStack_BuiltinExit",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return1_ArgvOnStack_NoBuiltinExit",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_ArgvInRegister_NoBuiltinExit",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_ArgvOnStack_BuiltinExit",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CEntry_Return2_ArgvOnStack_NoBuiltinExit",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmCEntry",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DirectCEntry",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAdd_CheckNone",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SubString",
    "timestamp": 5084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DoubleToI",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetProperty",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetPropertyWithReceiver",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetProperty",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateDataProperty",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetOwnPropertyDescriptor",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MemCopyUint8Uint8",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MemMove",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FindNonDefaultConstructorOrConstruct",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryGetOwnPropertyDescriptor",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IsTraceCategoryEnabled",
    "timestamp": 5125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Trace",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryUnregister",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AsyncModuleEvaluate",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallAsyncModuleFulfilled",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallAsyncModuleRejected",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowTimeZone",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowInstant",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateTime",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateTimeISO",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowZonedDateTime",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowZonedDateTimeISO",
    "timestamp": 5167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDate",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainDateISO",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalNowPlainTimeISO",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateConstructor",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateFrom",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateCompare",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeCalendar",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeYear",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonth",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonthCode",
    "timestamp": 5209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDay",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDayOfWeek",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDayOfYear",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWeekOfYear",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInWeek",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInMonth",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeDaysInYear",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeMonthsInYear",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeInLeapYear",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainYearMonth",
    "timestamp": 5250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainMonthDay",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeGetISOFields",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeAdd",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeSubtract",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWith",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeWithCalendar",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeUntil",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeSince",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEquals",
    "timestamp": 5292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToPlainDateTime",
    "timestamp": 5334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToZonedDateTime",
    "timestamp": 5334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToString",
    "timestamp": 5334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToJSON",
    "timestamp": 5334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeToLocaleString",
    "timestamp": 5334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeValueOf",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeConstructor",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeFrom",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimeCompare",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeCalendar",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeHour",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMinute",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSecond",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMillisecond",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeMicrosecond",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeNanosecond",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeAdd",
    "timestamp": 5375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSubtract",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeWith",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeUntil",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeSince",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeRound",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeEquals",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToPlainDateTime",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToZonedDateTime",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeGetISOFields",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToString",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToJSON",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeToLocaleString",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainTimePrototypeValueOf",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeConstructor",
    "timestamp": 5417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeFrom",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimeCompare",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeCalendar",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeYear",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonth",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonthCode",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDay",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeHour",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMinute",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSecond",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMillisecond",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMicrosecond",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeNanosecond",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDayOfWeek",
    "timestamp": 5459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDayOfYear",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWeekOfYear",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInWeek",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInMonth",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeDaysInYear",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeMonthsInYear",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeInLeapYear",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWith",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithPlainTime",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithPlainDate",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeWithCalendar",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeAdd",
    "timestamp": 5500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSubtract",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeUntil",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeSince",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeRound",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEquals",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToString",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToJSON",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToLocaleString",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeValueOf",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToZonedDateTime",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainDate",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainYearMonth",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainMonthDay",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeToPlainTime",
    "timestamp": 5542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeGetISOFields",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeConstructor",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeFrom",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimeCompare",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeCalendar",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeTimeZone",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeYear",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonth",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonthCode",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDay",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeHour",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMinute",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSecond",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMillisecond",
    "timestamp": 5584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMicrosecond",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeNanosecond",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochSeconds",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochMilliseconds",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochMicroseconds",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEpochNanoseconds",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDayOfWeek",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDayOfYear",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWeekOfYear",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeHoursInDay",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInWeek",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInMonth",
    "timestamp": 5625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeDaysInYear",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeMonthsInYear",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeInLeapYear",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeOffsetNanoseconds",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeOffset",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWith",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithPlainTime",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithPlainDate",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithTimeZone",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeWithCalendar",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeAdd",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSubtract",
    "timestamp": 5667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeUntil",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeSince",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeRound",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEquals",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToString",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToJSON",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToLocaleString",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeValueOf",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeStartOfDay",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToInstant",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainDate",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainTime",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainDateTime",
    "timestamp": 5709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainYearMonth",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeToPlainMonthDay",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeGetISOFields",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationConstructor",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationFrom",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationCompare",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeYears",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMonths",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeWeeks",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeDays",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeHours",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMinutes",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSeconds",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMilliseconds",
    "timestamp": 5750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeMicroseconds",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeNanoseconds",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSign",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeBlank",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeWith",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeNegated",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeAbs",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeAdd",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeSubtract",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeRound",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeTotal",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToString",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToJSON",
    "timestamp": 5792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeToLocaleString",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalDurationPrototypeValueOf",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantConstructor",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFrom",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochSeconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochMilliseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochMicroseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFromEpochNanoseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantCompare",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochSeconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochMilliseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochMicroseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEpochNanoseconds",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeAdd",
    "timestamp": 5834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeSubtract",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeUntil",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeSince",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeRound",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeEquals",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToString",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToJSON",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToLocaleString",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeValueOf",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToZonedDateTime",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantPrototypeToZonedDateTimeISO",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthConstructor",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthFrom",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthCompare",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeCalendar",
    "timestamp": 5875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeYear",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonth",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonthCode",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeDaysInYear",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeDaysInMonth",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeMonthsInYear",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeInLeapYear",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeWith",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeAdd",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeSubtract",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeUntil",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeSince",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEquals",
    "timestamp": 5917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToString",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToJSON",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToLocaleString",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeValueOf",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeToPlainDate",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeGetISOFields",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayConstructor",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayFrom",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeCalendar",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeMonthCode",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeDay",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeWith",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeEquals",
    "timestamp": 5959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToString",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToJSON",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToLocaleString",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeValueOf",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeToPlainDate",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainMonthDayPrototypeGetISOFields",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZoneConstructor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZoneFrom",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeId",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetOffsetNanosecondsFor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetOffsetStringFor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPlainDateTimeFor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetInstantFor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPossibleInstantsFor",
    "timestamp": 6000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetNextTransition",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeGetPreviousTransition",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeToString",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalTimeZonePrototypeToJSON",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarConstructor",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarFrom",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeId",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateFromFields",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeYearMonthFromFields",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthDayFromFields",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateAdd",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDateUntil",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeYear",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonth",
    "timestamp": 6042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthCode",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDay",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDayOfWeek",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDayOfYear",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeWeekOfYear",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInWeek",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInMonth",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeDaysInYear",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMonthsInYear",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeInLeapYear",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeFields",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeMergeFields",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeToString",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeToJSON",
    "timestamp": 6084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToTemporalInstant",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFixedArrayFromIterable",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalInstantFixedArrayFromIterable",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "AggregateErrorConstructor",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeAt",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeConcat",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeCopyWithin",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopEagerDeoptContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopLazyDeoptContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEveryLoopContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayEvery",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopEagerDeoptContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopLazyDeoptContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilterLoopContinuation",
    "timestamp": 6125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFilter",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopEagerDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopLazyDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopAfterCallbackLazyDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLoopContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFind",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopEagerDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopLazyDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindIndexLoopContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindIndex",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLastLoopContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindLast",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFindLastIndexLoopContinuation",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeFindLastIndex",
    "timestamp": 6167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopEagerDeoptContinuation",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopLazyDeoptContinuation",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEachLoopContinuation",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayForEach",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayFrom",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayIsArray",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_DictionaryElements_0",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_FastSmiOrObjectElements_0",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_FastDoubleElements_0",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ConvertToLocaleString",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JoinStackPush",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JoinStackPop",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeJoin",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToLocaleString",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToString",
    "timestamp": 6209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeJoin",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToLocaleString",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeLastIndexOf",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapPreLoopLazyDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopEagerDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopLazyDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMapLoopContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayMap",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayOf",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightPreLoopEagerDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopEagerDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopLazyDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRightLoopContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceRight",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReducePreLoopEagerDeoptContinuation",
    "timestamp": 6250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopEagerDeoptContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopLazyDeoptContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduceLoopContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayReduce",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeReverse",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeShift",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSlice",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopEagerDeoptContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopLazyDeoptContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySomeLoopContinuation",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArraySome",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSplice",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericArrayToReversed",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToReversed",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayTimSortIntoCopy",
    "timestamp": 6292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToSorted",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeToSpliced",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeUnshift",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericArrayWith",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeWith",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetByteLength",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetMaxByteLength",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetResizable",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferPrototypeGetDetached",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetMaxByteLength",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SharedArrayBufferPrototypeGetGrowable",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayBufferIsView",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToInteger",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastCreateDataProperty",
    "timestamp": 6334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanConstructor",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanPrototypeToString",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BooleanPrototypeValueOf",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAddNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntAdd",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntSubtractNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntSubtract",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntMultiplyNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntMultiply",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntDivideNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntDivide",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntModulusNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntModulus",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseAndNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseAnd",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseOrNoThrow",
    "timestamp": 6375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseOr",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseXorNoThrow",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntBitwiseXor",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntShiftLeftNoThrow",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntShiftLeft",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntShiftRightNoThrow",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntShiftRight",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntEqual",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntLessThan",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntGreaterThan",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntLessThanOrEqual",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntGreaterThanOrEqual",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BigIntUnaryMinus",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToString",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToString",
    "timestamp": 6417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeValueOf",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToList",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCharAt",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCharCodeAt",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeCodePointAt",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeConcat",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringConstructor",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAddConvertLeft",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringAddConvertRight",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringCharAt",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewClosureBaseline",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewFunctionContextEval",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewFunctionContextFunction",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateRegExpLiteral",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateShallowArrayLiteral",
    "timestamp": 6459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateEmptyArrayLiteral",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateShallowObjectLiteral",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectConstructor",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateEmptyLiteralObject",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberConstructor",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericLazyDeoptContinuation",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToNumber",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonNumberToNumber",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonNumberToNumeric",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToNumeric",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberToString",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBoolean",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToBooleanForBaselineJump",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToLength",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToName",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ToObject",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_Default",
    "timestamp": 6500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_Number",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NonPrimitiveToPrimitive_String",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryToPrimitive_Number",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryToPrimitive_Number_Inline",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "OrdinaryToPrimitive_String",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastConsoleAssert",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBuffer",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetByteLength",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetByteOffset",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint8",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt8",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint16",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt16",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetUint32",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetInt32",
    "timestamp": 6542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetFloat32",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetFloat64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBigUint64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeGetBigInt64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint8",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt8",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint16",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt16",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetUint32",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetInt32",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetFloat32",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetFloat64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetBigUint64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DataViewPrototypeSetBigInt64",
    "timestamp": 6584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryConstructor",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryRegister",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FinalizationRegistryPrototypeCleanupSome",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FunctionPrototypeHasInstance",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastFunctionPrototypeBind",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IncBlockCounter",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetTemplateObject",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ForInNext",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetImportMetaObjectBaseline",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorWithFeedback",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GetIteratorBaseline",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateAsyncFromSyncIteratorBaseline",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallIteratorWithFeedback",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorConstructor",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorFrom",
    "timestamp": 6625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WrapForValidIteratorPrototypeNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WrapForValidIteratorPrototypeReturn",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorHelperPrototypeNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorHelperPrototypeReturn",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeMap",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorMapHelperNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeFilter",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorFilterHelperNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeTake",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorTakeHelperNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeDrop",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorDropHelperNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeFlatMap",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorFlatMapHelperNext",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeReduce",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeToArray",
    "timestamp": 6667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeForEach",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeSome",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeEvery",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IteratorPrototypeFind",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MapGroupBy",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAbs",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCeil",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathFloor",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathRound",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTrunc",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathPow",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathMax",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathMin",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAcos",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAcosh",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAsin",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAsinh",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtan",
    "timestamp": 6709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtan2",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathAtanh",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCbrt",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathClz32",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCos",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathCosh",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathExp",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathExpm1",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathFround",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathImul",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog1p",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog10",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathLog2",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSin",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSign",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSinh",
    "timestamp": 6750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathSqrt",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTan",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathTanh",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathHypot",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MathRandom",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeToString",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsFinite",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsInteger",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsNaN",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberIsSafeInteger",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberPrototypeValueOf",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberParseFloat",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ParseInt",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberParseInt",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Add",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Subtract",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Multiply",
    "timestamp": 6792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Divide",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Modulus",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Exponentiate",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Negate",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseNot",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Decrement",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Increment",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftLeft",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRight",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ShiftRightLogical",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseAnd",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseOr",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "BitwiseXor",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThan",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LessThanOrEqual",
    "timestamp": 6834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThan",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GreaterThanOrEqual",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Equal",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StrictEqual",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectFromEntries",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GroupByGeneric",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGroupBy",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateObjectWithoutProperties",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectIsExtensible",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPreventExtensions",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectGetPrototypeOf",
    "timestamp": 6875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectSetPrototypeOf",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeToString",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeValueOf",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ObjectPrototypeToLocaleString",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FulfillPromise",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RejectPromise",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewPromiseCapability",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCapabilityDefaultReject",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCapabilityDefaultResolve",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PerformPromiseThen",
    "timestamp": 6917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseReject",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseGetCapabilitiesExecutor",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseConstructorLazyDeoptContinuation",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAll",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettled",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllResolveElementClosure",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettledResolveElementClosure",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAllSettledRejectElementClosure",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAnyRejectElementClosure",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseAny",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseConstructor",
    "timestamp": 6959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeCatch",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseValueThunkFinally",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseThrowerFinally",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseCatchFinally",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseThenFinally",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeFinally",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolveThenableJob",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseRace",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseFulfillReactionJob",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseRejectReactionJob",
    "timestamp": 7000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolveTrampoline",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseResolve",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ResolvePromise",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromisePrototypeThen",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PromiseWithResolvers",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyConstructor",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyDeleteProperty",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyGetProperty",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyGetPrototypeOf",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyHasProperty",
    "timestamp": 7042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyIsExtensible",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyPreventExtensions",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyRevocable",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxyRevoke",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxySetProperty",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ProxySetPrototypeOf",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectIsExtensible",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectPreventExtensions",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGetPrototypeOf",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectSetPrototypeOf",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGet",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectDeleteProperty",
    "timestamp": 7084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectHas",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReflectGetOwnPropertyDescriptor",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeExecSlow",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeExec",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMatchAll",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpStringIteratorPrototypeNext",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpMatchFast",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMatch",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpReplace",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeReplace",
    "timestamp": 7125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpSearchFast",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSearch",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSourceGetter",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpSplit",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeSplit",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeTest",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeTestFast",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeGlobalGetter",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeIgnoreCaseGetter",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeMultilineGetter",
    "timestamp": 7167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeHasIndicesGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeLinearGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeDotAllGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeStickyGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeUnicodeGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeUnicodeSetsGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RegExpPrototypeFlagsGetter",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeDifference",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeIntersection",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeIsDisjointFrom",
    "timestamp": 7209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeIsSubsetOf",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeIsSupersetOf",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeSymmetricDifference",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SetPrototypeUnion",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeAt",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeEndsWith",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateHTML",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeAnchor",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBig",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBlink",
    "timestamp": 7250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeBold",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFontcolor",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFontsize",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeFixed",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeItalics",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeLink",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSmall",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeStrike",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSub",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSup",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIncludes",
    "timestamp": 7292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIndexOf",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIsWellFormed",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeIterator",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringIteratorPrototypeNext",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeMatch",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSearch",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypePadStart",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypePadEnd",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringRepeat",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeRepeat",
    "timestamp": 7334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeReplaceAll",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSlice",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeStartsWith",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSubstr",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeSubstring",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToWellFormed",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrim",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrimStart",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeTrimEnd",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeDescriptionGetter",
    "timestamp": 7375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeToPrimitive",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeToString",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SymbolPrototypeValueOf",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeAt",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CreateTypedArray",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeEvery",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeEntries",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFilter",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFind",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindIndex",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindLast",
    "timestamp": 7417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeFindLastIndex",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeForEach",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayFrom",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeKeys",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayOf",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReduce",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeReduceRight",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSet",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSlice",
    "timestamp": 7459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSome",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayMergeSort",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSort",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeSubArray",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToReversed",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeToSorted",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeValues",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TypedArrayPrototypeWith",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakRefConstructor",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WeakRefDeref",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewSloppyArgumentsElements",
    "timestamp": 7500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewStrictArgumentsElements",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewRestArgumentsElements",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewSloppyArguments",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewStrictArguments",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "FastNewRestArguments",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringSlowFlatten",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringIndexOf",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestTurbofanType",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurbofanType",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurboshaftWord32Type",
    "timestamp": 7542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurboshaftWord64Type",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurboshaftFloat32Type",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CheckTurboshaftFloat64Type",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DebugPrintWordPtr",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DebugPrintFloat64",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericBuiltinTest_JSAny_0",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestHelperPlus1",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestHelperPlus2",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NewSmiBox",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ReturnTwoValues",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowAsBuiltin",
    "timestamp": 7584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TestCallNever",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastSmiElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastObjectElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_FastDoubleElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastSmiElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastObjectElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_FastDoubleElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastSmiElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastObjectElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_FastDoubleElements_0",
    "timestamp": 7625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SortCompareDefault",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SortCompareUserFn",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_GenericElementsAccessor_0",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Copy",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "MergeAt",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GallopLeft",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GallopRight",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayTimSort",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ArrayPrototypeSort",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringFastLocaleCompare",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSToWasmWrapper",
    "timestamp": 7667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmReturnPromiseOnSuspend",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "JSToWasmHandleReturns",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmInt32ToHeapNumber",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmFuncRefToJS",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTaggedNonSmiToInt32",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTaggedToFloat64",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTaggedToFloat32",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmMemoryGrow",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableInit",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableCopy",
    "timestamp": 7709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableFill",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableGrow",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableGet",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableSet",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableGetFuncRef",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTableSetFuncRef",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRefFunc",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmInternalFunctionCreateExternal",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateFixedArray",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmThrow",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRethrow",
    "timestamp": 7750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmRethrowExplicitContext",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTriggerTierUp",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStackGuard",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStackOverflow",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceMemory",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceEnter",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTraceExit",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateJSArray",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateStructWithRtt",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAllocateArray_Uninitialized",
    "timestamp": 7792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayNewSegment",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayInitSegment",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayCopyWithChecks",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmArrayCopy",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmUint32ToNumber",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "UintPtr53ToNumber",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmAtomicNotify",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI32AtomicWait",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmI64AtomicWait",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CallRefIC",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmGetOwnProperty",
    "timestamp": 7834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmTrap",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapUnreachable",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapMemOutOfBounds",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapUnalignedAccess",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDivByZero",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDivUnrepresentable",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapRemByZero",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapFloatUnrepresentable",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapFuncSigMismatch",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapDataSegmentOutOfBounds",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapElementSegmentOutOfBounds",
    "timestamp": 7875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapTableOutOfBounds",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapRethrowNull",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapNullDereference",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapIllegalCast",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapArrayOutOfBounds",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapArrayTooLarge",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowWasmTrapStringOffsetOutOfBounds",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringNewWtf8",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringNewWtf8Array",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringNewWtf16",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringNewWtf16Array",
    "timestamp": 7917,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringFromDataSegment",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringAsWtf16",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringConst",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringMeasureUtf8",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringMeasureWtf8",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringEncodeWtf8",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringEncodeWtf8Array",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringEncodeWtf16",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringEncodeWtf16Array",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowToLowerCaseCalledOnNull",
    "timestamp": 7959,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ThrowIndexOfCalledOnNull",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringConcat",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringEqual",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringIsUSVSequence",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringAsWtf8",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf8Advance",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf8Encode",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf8Slice",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf16GetCodeUnit",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf16Encode",
    "timestamp": 8000,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewWtf16Slice",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringAsIter",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringCodePointAt",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewIterNext",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewIterAdvance",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewIterRewind",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringViewIterSlice",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmIntToString",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringToDouble",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringFromCodePoint",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmStringHash",
    "timestamp": 8042,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WasmExternInternalize",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringFromWtf16Array",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringFromWtf8Array",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringToWtf16Array",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringFromCharCode",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringFromCodePoint",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringCodePointAt",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringCharCodeAt",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringLength",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringConcat",
    "timestamp": 8084,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringSubstring",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringEquals",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "WebAssemblyStringCompare",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinElement_GenericElementsAccessor_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int32Elements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Float32Elements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Float64Elements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint8ClampedElements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_BigUint64Elements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_BigInt64Elements_0",
    "timestamp": 8125,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint8Elements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int8Elements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint16Elements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Int16Elements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadJoinTypedElement_Uint32Elements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "GenericBuiltinTest_Smi_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastDoubleElements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastSmiElements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CanUseSameAccessor_FastObjectElements_0",
    "timestamp": 8167,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadNoHasPropertyCheck_GenericElementsAccessor_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Load_GenericElementsAccessor_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Store_GenericElementsAccessor_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Delete_GenericElementsAccessor_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int32Elements_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int32Elements_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int32Elements_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Float32Elements_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Float32Elements_0",
    "timestamp": 8209,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Float32Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Float64Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Float64Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Float64Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint8ClampedElements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint8ClampedElements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint8ClampedElements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_BigUint64Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_BigUint64Elements_0",
    "timestamp": 8250,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_BigUint64Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_BigInt64Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_BigInt64Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_BigInt64Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint8Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint8Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint8Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int8Elements_0",
    "timestamp": 8292,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int8Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int8Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Int16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Int16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Int16Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LoadTypedElement_Uint32Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementNumeric_Uint32Elements_0",
    "timestamp": 8334,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StoreTypedElementJSAny_Uint32Elements_0",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorConstructor",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorInternalCompare",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorPrototypeCompare",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorSupportedLocalesOf",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "CollatorPrototypeResolvedOptions",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleDateString",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleString",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DatePrototypeToLocaleTimeString",
    "timestamp": 8375,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatConstructor",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatInternalFormat",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormat",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatRange",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatRangeToParts",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeFormatToParts",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatPrototypeResolvedOptions",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DateTimeFormatSupportedLocalesOf",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesConstructor",
    "timestamp": 8417,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesPrototypeOf",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesPrototypeResolvedOptions",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DisplayNamesSupportedLocalesOf",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DurationFormatConstructor",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DurationFormatPrototypeFormat",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DurationFormatPrototypeFormatToParts",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DurationFormatPrototypeResolvedOptions",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "DurationFormatSupportedLocalesOf",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IntlGetCanonicalLocales",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "IntlSupportedValuesOf",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatConstructor",
    "timestamp": 8459,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeFormat",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeFormatToParts",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatPrototypeResolvedOptions",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "ListFormatSupportedLocalesOf",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocaleConstructor",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeBaseName",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCalendar",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCalendars",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCaseFirst",
    "timestamp": 8500,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCollation",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeCollations",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetCalendars",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetCollations",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetHourCycles",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetNumberingSystems",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetTimeZones",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetTextInfo",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeGetWeekInfo",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeHourCycle",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeHourCycles",
    "timestamp": 8542,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeLanguage",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeMaximize",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeMinimize",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumeric",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumberingSystem",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeNumberingSystems",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeRegion",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeScript",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeTextInfo",
    "timestamp": 8584,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeTimeZones",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeToString",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "LocalePrototypeWeekInfo",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatConstructor",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatInternalFormatNumber",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatNumber",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatRange",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatRangeToParts",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeFormatToParts",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatPrototypeResolvedOptions",
    "timestamp": 8625,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "NumberFormatSupportedLocalesOf",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesConstructor",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeResolvedOptions",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeSelect",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesPrototypeSelectRange",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "PluralRulesSupportedLocalesOf",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatConstructor",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeFormat",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeFormatToParts",
    "timestamp": 8667,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatPrototypeResolvedOptions",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "RelativeTimeFormatSupportedLocalesOf",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterConstructor",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterPrototypeResolvedOptions",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterPrototypeSegment",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmenterSupportedLocalesOf",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentIteratorPrototypeNext",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentsPrototypeContaining",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "SegmentsPrototypeIterator",
    "timestamp": 8709,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeNormalizeIntl",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLocaleLowerCase",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLocaleUpperCase",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToLowerCaseIntl",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringPrototypeToUpperCaseIntl",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "StringToLowerCaseIntl",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeEra",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalCalendarPrototypeEraYear",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEra",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDatePrototypeEraYear",
    "timestamp": 8750,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEra",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainDateTimePrototypeEraYear",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEra",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalPlainYearMonthPrototypeEraYear",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEra",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "TemporalZonedDateTimePrototypeEraYear",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorConstructor",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalAdoptText",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalBreakType",
    "timestamp": 8792,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalCurrent",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalFirst",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorInternalNext",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeAdoptText",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeBreakType",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeCurrent",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeFirst",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeNext",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorPrototypeResolvedOptions",
    "timestamp": 8834,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "V8BreakIteratorSupportedLocalesOf",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "Builtin"
  },
  {
    "name": "Wide",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExtraWide",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreakWide",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreakExtraWide",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak0",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1",
    "timestamp": 8875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaZero",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaUndefined",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaNull",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaTheHole",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaTrue",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaFalse",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot",
    "timestamp": 8917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestUndetectable",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestNull",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestUndefined",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestTypeOf",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot",
    "timestamp": 8959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty",
    "timestamp": 9000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi",
    "timestamp": 9042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToBooleanLogicalNot",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LogicalNot",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TypeOf",
    "timestamp": 9084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "FindNonDefaultConstructorOrConstruct",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime",
    "timestamp": 9125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToName",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToString",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToBoolean",
    "timestamp": 9167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayFromIterable",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyObjectLiteral",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateMappedArguments",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateUnmappedArguments",
    "timestamp": 9209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRestParameter",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse",
    "timestamp": 9250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetPendingMessage",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Throw",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ReThrow",
    "timestamp": 9292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Return",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowSuperNotCalledIfHole",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowSuperAlreadyCalledIfNotHole",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Debugger",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star0",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Illegal",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1.Wide",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2.Wide",
    "timestamp": 9334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext.Wide",
    "timestamp": 9375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof.Wide",
    "timestamp": 9417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral.Wide",
    "timestamp": 9459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi.Wide",
    "timestamp": 9500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict.Wide",
    "timestamp": 9542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "FindNonDefaultConstructorOrConstruct.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0.Wide",
    "timestamp": 9584,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict.Wide",
    "timestamp": 9625,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral.Wide",
    "timestamp": 9667,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext.Wide",
    "timestamp": 9709,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant.Wide",
    "timestamp": 9750,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse.Wide",
    "timestamp": 9792,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext.Wide",
    "timestamp": 9834,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort.Wide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak1.ExtraWide",
    "timestamp": 9875,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak2.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak3.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak4.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak5.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DebugBreak6.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Ldar.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaSmi.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaConstant.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaContextSlot.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableContextSlot.ExtraWide",
    "timestamp": 9917,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaCurrentContextSlot.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaImmutableCurrentContextSlot.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Star.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mov.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PushContext.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "PopContext.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestReferenceEqual.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobal.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaGlobalInsideTypeof.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaGlobal.ExtraWide",
    "timestamp": 9959,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaContextSlot.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaCurrentContextSlot.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlot.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlot.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlot.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupSlotInsideTypeof.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupContextSlotInsideTypeof.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaLookupGlobalSlotInsideTypeof.ExtraWide",
    "timestamp": 10000,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaLookupSlot.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetNamedPropertyFromSuper.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetKeyedProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "LdaModuleVariable.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaModuleVariable.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetNamedProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineNamedOwnProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SetKeyedProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnProperty.ExtraWide",
    "timestamp": 10042,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "StaInArrayLiteral.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DefineKeyedOwnPropertyInLiteral.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Add.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Sub.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mul.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Div.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Mod.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Exp.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOr.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXor.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAnd.ExtraWide",
    "timestamp": 10084,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeft.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRight.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogical.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "AddSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SubSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "MulSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DivSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ModSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ExpSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseOrSmi.ExtraWide",
    "timestamp": 10125,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseXorSmi.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseAndSmi.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftLeftSmi.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightSmi.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ShiftRightLogicalSmi.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Inc.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Dec.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Negate.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "BitwiseNot.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertyStrict.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "DeletePropertySloppy.ExtraWide",
    "timestamp": 10167,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetSuperConstructor.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "FindNonDefaultConstructorOrConstruct.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallAnyReceiver.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty0.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty1.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallProperty2.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver0.ExtraWide",
    "timestamp": 10209,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver1.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallUndefinedReceiver2.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallWithSpread.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntime.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallRuntimeForPair.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CallJSRuntime.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "InvokeIntrinsic.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Construct.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ConstructWithSpread.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqual.ExtraWide",
    "timestamp": 10250,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestEqualStrict.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThan.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThan.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestLessThanOrEqual.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestGreaterThanOrEqual.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestInstanceOf.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "TestIn.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumber.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToNumeric.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ToObject.ExtraWide",
    "timestamp": 10292,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateRegExpLiteral.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateArrayLiteral.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEmptyArrayLiteral.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateObjectLiteral.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CloneObject.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetTemplateObject.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateClosure.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateBlockContext.ExtraWide",
    "timestamp": 10334,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateCatchContext.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateFunctionContext.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateEvalContext.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "CreateWithContext.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpLoop.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Jump.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpConstant.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNullConstant.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNullConstant.ExtraWide",
    "timestamp": 10375,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefinedConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNullConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrueConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalseConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiverConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrueConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalseConstant.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanTrue.ExtraWide",
    "timestamp": 10417,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfToBooleanFalse.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfTrue.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfFalse.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNull.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotNull.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefined.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfNotUndefined.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfUndefinedOrNull.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "JumpIfJSReceiver.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnSmiNoFeedback.ExtraWide",
    "timestamp": 10459,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInEnumerate.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInPrepare.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInContinue.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInNext.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ForInStep.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowReferenceErrorIfHole.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ThrowIfNotSuperConstructor.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SwitchOnGeneratorState.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "SuspendGenerator.ExtraWide",
    "timestamp": 10500,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "ResumeGenerator.ExtraWide",
    "timestamp": 10542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "GetIterator.ExtraWide",
    "timestamp": 10542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "IncBlockCounter.ExtraWide",
    "timestamp": 10542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "Abort.ExtraWide",
    "timestamp": 10542,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 0,
    "tm": 12709,
    "source": {
      "script": 80,
      "start": 0,
      "end": 1182,
      "positions": "C0O0C4O1182",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 1,
    "tm": 12750,
    "source": {
      "script": 80,
      "start": 0,
      "end": 1182,
      "positions": "C0O23C5O128C8O128C13O71C18O101C23O198C26O198C31O179C36O246C38O246C43O281C46O367C55O367C60O398C63O402C70O448C75O466C78O466C83O502C88O503C95O1114C98O1114C103O1152C108O1159C113O1160C119O1181",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareMainThreadExecution node:internal/process/pre_execution:54:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 2,
    "tm": 12959,
    "source": {
      "script": 67,
      "start": 1126,
      "end": 1275,
      "positions": "C20O1178C30O1208C36O1225C40O1185C44O1273",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareExecution node:internal/process/pre_execution:70:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 3,
    "tm": 13792,
    "source": {
      "script": 67,
      "start": 1503,
      "end": 3672,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshRuntimeOptions node:internal/process/pre_execution:177:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 4,
    "tm": 13834,
    "source": {
      "script": 67,
      "start": 4871,
      "end": 4897,
      "positions": "C0O4878C5O4878C9O4896",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 5,
    "tm": 13875,
    "source": {
      "script": 17,
      "start": 902,
      "end": 960,
      "positions": "C0O909C4O920C10O935C14O946C21O959",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1083:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 6,
    "tm": 13959,
    "source": {
      "script": 25,
      "start": 31022,
      "end": 31062,
      "positions": "C0O31029C5O31040C11O31038C18O31061",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "patchProcessObject node:internal/process/pre_execution:188:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 7,
    "tm": 15042,
    "source": {
      "script": 67,
      "start": 5351,
      "end": 7754,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/bootstrap/node:116:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 8,
    "tm": 15125,
    "source": {
      "script": 12,
      "start": 4131,
      "end": 4547,
      "positions": "C0O4146C8O4209C11O4223C19O4260C28O4280C35O4301C38O4301C43O4280C49O4329C54O4361C64O4361C69O4401C78O4408C83O4419C87O4436C94O4443C99O4457C105O4485C114O4492C118O4506C122O4525C124O4534C131O4546",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1095:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 9,
    "tm": 15709,
    "source": {
      "script": 34,
      "start": 33911,
      "end": 34827,
      "positions": "C0O33911C3O33946C6O33977C8O34007C12O34014C16O34027C18O34021C25O34031C27O34075C28O34077C35O34088C42O34094C45O34094C49O34112C59O34142C70O34112C75O34193C81O34200C86O34217C88O34242C100O34268C105O34290C112O34317C120O34356C122O34352C126O34050C131O33989C135O34572C140O34618C151O34587C157O34704C161O34734C166O34745C170O34760C171O34791C177O34798C188O34823",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:path:1086:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 10,
    "tm": 17250,
    "source": {
      "script": 34,
      "start": 33760,
      "end": 33779,
      "positions": "C0O33774C3O33774C8O33774C12O33779",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:136:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 11,
    "tm": 17292,
    "source": {
      "script": 73,
      "start": 3560,
      "end": 3644,
      "positions": "C0O3567C7O3581C12O3593C17O3616C22O3616C26O3603C28O3625C30O3642",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 12,
    "tm": 17500,
    "source": {
      "script": 34,
      "start": 2161,
      "end": 4085,
      "positions": "C0O2226C3O2256C5O2277C8O2294C10O2310C12O2328C14O2341C18O2333C23O2373C27O2366C32O2387C37O2394C45O2443C51O2472C53O2494C58O2530C64O2561C66O2581C69O2575C76O2593C83O2631C85O2640C90O2665C97O2672C104O2697C111O2718C114O2753C118O2760C122O2718C130O2769C132O2765C140O2828C144O2835C148O2793C156O2840C161O2874C168O2881C173O2923C178O2923C184O2979C186O2998C191O3022C194O3046C198O3104C211O3110C217O3210C221O3217C228O3223C233O3221C237O3293C240O3320C242O3342C244O3377C250O3384C255O3405C258O3427C260O3462C263O3489C265O3511C267O3551C271O3594C277O3601C287O3610C302O3642C307O3706C313O3713C318O3728C320O3738C324O3750C329O3787C339O3750C357O3821C364O3864C374O3827C380O3881C382O3903C385O3915C389O3934C392O3955C396O3976C398O3989C400O3985C407O4006C412O4022C419O4049C422O2351C427O2315C435O4072C437O4083",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 13,
    "tm": 17500,
    "source": {
      "script": 34,
      "start": 1854,
      "end": 1902,
      "positions": "C0O1865C2O1881C4O1877C7O1900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 12,
    "tm": 17625,
    "source": {
      "script": 34,
      "start": 2161,
      "end": 4085,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "requireBuiltin node:internal/bootstrap/realm:414:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 14,
    "tm": 17667,
    "source": {
      "script": 9,
      "start": 13268,
      "end": 13610,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/realm:377:27",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 15,
    "tm": 18125,
    "source": {
      "script": 9,
      "start": 12252,
      "end": 13050,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/realm:185:45",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 16,
    "tm": 18167,
    "source": {
      "script": 9,
      "start": 5979,
      "end": 6217,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 13,
    "tm": 18167,
    "source": {
      "script": 34,
      "start": 1854,
      "end": 1902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:690:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 17,
    "tm": 18250,
    "source": {
      "script": 44,
      "start": 20457,
      "end": 21464,
      "positions": "C0O20457C12O20477C19O20491C21O20490C30O20508C35O20521C42O20535C44O20534C53O20551C59O20662C67O20662C72O20593C77O20601C82O20629C87O20706C95O20711C100O20736C106O20754C111O20782C112O20789C113O20831C121O20831C126O20813C131O20887C143O20906C148O20887C153O20942C158O20942C163O20992C170O21018C175O21018C183O20992C189O21075C194O21075C199O21075C201O21110C209O21110C231O21103C261O21103C264O21161C270O21161C277O21179C281O21200C287O21200C292O21092C359O21338C364O21338C369O21463",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:205:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 18,
    "tm": 19000,
    "source": {
      "script": 44,
      "start": 5840,
      "end": 6477,
      "positions": "C0O5840C15O5861C16O5861C18O5879C19O5879C21O5893C33O5943C38O6041C46O6148C60O6210C65O6308C73O6419C87O5893C93O6476",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:235:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 19,
    "tm": 19042,
    "source": {
      "script": 44,
      "start": 6577,
      "end": 7977,
      "positions": "C17O6633C27O6695C34O6737C52O6807C55O6777C74O6877C84O6974C87O6944C102O7023C113O7065C122O7105C125O7105C140O7157C151O7179C160O7213C163O7209C181O7304C185O7314C196O7336C206O7366C225O7392C229O7405C240O7427C249O7457C263O7479C267O7492C278O7514C286O7544C300O7561C304O7576C315O7598C324O7628C338O7643C342O7668C353O7710C362O7750C376O7788C380O7808C389O6633C395O7976",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:357:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 20,
    "tm": 19084,
    "source": {
      "script": 44,
      "start": 10694,
      "end": 11551,
      "positions": "C0O10694C13O10723C17O11549",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/process/pre_execution:248:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 21,
    "tm": 19125,
    "source": {
      "script": 67,
      "start": 7788,
      "end": 8037,
      "positions": "C16O7840C21O7840C26O7866C28O7883C36O7913C43O7999C49O8017C56O7883C62O8036",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 22,
    "tm": 19167,
    "source": {
      "script": 17,
      "start": 985,
      "end": 1228,
      "positions": "C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 23,
    "tm": 19167,
    "source": {
      "script": 17,
      "start": 497,
      "end": 598,
      "positions": "C0O504C6O527C11O554C15O539C21O578C23O596",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupTraceCategoryState node:internal/process/pre_execution:460:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 24,
    "tm": 19292,
    "source": {
      "script": 67,
      "start": 13707,
      "end": 13934,
      "positions": "C0O13749C6O13749C11O13722C16O13821C22O13821C27O13792C32O13863C35O13888C40O13863C45O13933",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:410:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 25,
    "tm": 19334,
    "source": {
      "script": 27,
      "start": 12013,
      "end": 12310,
      "positions": "C0O12037C4O12066C10O12101C16O12132C21O12176C26O12177C30O12122C32O12201C35O12222C40O12222C46O12241C52O12273C55O12294C60O12294C65O12309",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupInspectorHooks node:internal/process/pre_execution:466:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 26,
    "tm": 19792,
    "source": {
      "script": 67,
      "start": 13964,
      "end": 14518,
      "positions": "C0O14307C6O14311C11O14336C17O14402C23O14402C28O14371C33O14385C38O14448C44O14448C49O14476C54O14477C61O14517",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWarningHandler node:internal/process/pre_execution:261:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 27,
    "tm": 19792,
    "source": {
      "script": 67,
      "start": 8067,
      "end": 8559,
      "positions": "C0O8067C11O8130C19O8130C24O8086C30O8101C36O8169C46O8173C57O8217C62O8221C69O8238C74O8253C79O8261C90O8261C96O8388C103O8392C108O8422C120O8422C125O8558",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupUndici node:internal/process/pre_execution:283:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 28,
    "tm": 19834,
    "source": {
      "script": 67,
      "start": 8654,
      "end": 10014,
      "positions": "C0O8654C19O8661C26O8665C30O8685C36O8710C37O8717C38O8729C39O8729C41O9133C51O9138C62O9347C73O9363C82O9347C87O9397C99O9420C107O9450C118O9492C129O9533C140O9575C148O9397C153O9690C161O9690C166O9721C176O9722C181O9865C189O9869C195O9919C206O9942C217O9973C225O9919C231O10013",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 29,
    "tm": 19875,
    "source": {
      "script": 17,
      "start": 760,
      "end": 877,
      "positions": "C0O767C6O795C11O813C14O811C16O852C18O875",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyInterface node:internal/process/pre_execution:298:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 30,
    "tm": 19875,
    "source": {
      "script": 67,
      "start": 8910,
      "end": 9129,
      "positions": "C0O8910C9O8923C14O8989C22O9047C32O9125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWebCrypto node:internal/process/pre_execution:341:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 31,
    "tm": 19917,
    "source": {
      "script": 67,
      "start": 10141,
      "end": 11070,
      "positions": "C0O10148C5O10152C9O10172C17O10199C23O10199C29O10259C30O10266C31O10274C37O10278C42O10303C48O10322C55O10360C73O10322C78O10633C89O10661C94O10633C101O10771C108O10792C121O10861C152O10861C165O10771C171O11069",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupCustomEvent node:internal/process/pre_execution:389:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 32,
    "tm": 20000,
    "source": {
      "script": 67,
      "start": 11724,
      "end": 11976,
      "positions": "C0O11731C5O11735C9O11755C17O11782C23O11782C29O11844C30O11851C31O11882C37O11882C42O11866C47O11918C54O11934C63O11918C69O11975",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupCodeCoverage node:internal/process/pre_execution:374:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 33,
    "tm": 20000,
    "source": {
      "script": 67,
      "start": 11098,
      "end": 11593,
      "positions": "C0O11404C3O11416C8O11420C16O11447C22O11447C28O11501C31O11509C38O11538C44O11565C49O11569C54O11538C58O11530C63O11592",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupDebugEnv node:internal/process/pre_execution:420:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 34,
    "tm": 20042,
    "source": {
      "script": 67,
      "start": 12478,
      "end": 12687,
      "positions": "C0O12485C6O12485C11O12518C19O12546C24O12550C29O12519C34O12565C42O12569C48O12613C54O12613C59O12648C64O12662C69O12663C74O12686",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:21:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 35,
    "tm": 20084,
    "source": {
      "script": 22,
      "start": 530,
      "end": 976,
      "positions": "C0O545C7O556C13O581C24O694C38O694C45O738C56O739C63O767C74O768C82O818C94O833C110O818C115O818C117O856C126O868C138O944C145O956C152O975",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReport node:internal/process/pre_execution:408:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 36,
    "tm": 20209,
    "source": {
      "script": 67,
      "start": 12230,
      "end": 12454,
      "positions": "C0O12237C11O12258C16O12350C24O12237C30O12453",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializePermission node:internal/process/pre_execution:573:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 37,
    "tm": 20292,
    "source": {
      "script": 67,
      "start": 17535,
      "end": 19389,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/pre_execution:626:53",
    "type": "JS",
    "kind": "Unopt",
    "func": 38,
    "tm": 20334,
    "source": {
      "script": 67,
      "start": 19221,
      "end": 19381,
      "positions": "C0O19253C5O19253C10O19291C16O19309C26O19315C31O19309C33O19380",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/process/pre_execution:707:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 39,
    "tm": 20375,
    "source": {
      "script": 67,
      "start": 21949,
      "end": 22110,
      "positions": "C0O21996C6O21996C11O21968C16O22047C18O22068C24O22068C29O22047C34O22109",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 40,
    "tm": 20375,
    "source": {
      "script": 38,
      "start": 1690,
      "end": 2203,
      "positions": "C0O1700C8O1700C13O1732C18O1732C22O1760C26O1816C32O1816C37O1789C42O1872C47O1872C53O1930C59O2089C65O2089C70O2062C75O2121C80O2121C84O2177C86O2195C93O2202",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateBoolean node:internal/validators:216:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 41,
    "tm": 20792,
    "source": {
      "script": 15,
      "start": 5595,
      "end": 5706,
      "positions": "C0O5613C6O5649C22O5655C27O5649C29O5705",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDeprecations node:internal/process/pre_execution:484:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 42,
    "tm": 21375,
    "source": {
      "script": 67,
      "start": 14744,
      "end": 16665,
      "positions": "C0O14773C6O14773C11O14759C16O14828C24O14828C29O15019C35O15019C40O15060C46O15060C51O15113C73O15105C101O15105C104O15431C112O15451C116O15493C127O15567C138O15657C149O15612C158O15478C167O15716C170O15449C174O15094C239O15993C245O15993C250O15972C255O16022C257O16050C268O16071C275O16212C279O16050C284O16245C288O16275C294O16311C304O16388C311O16293C316O16291C320O16474C326O16516C337O16498C342O16496C347O16664",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDns node:internal/dns/utils:202:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 43,
    "tm": 21417,
    "source": {
      "script": 71,
      "start": 5449,
      "end": 5813,
      "positions": "C0O5477C8O5477C13O5517C15O5542C25O5551C29O5652C31O5661C37O5684C42O5689C47O5717C48O5724C49O5732C59O5732C64O5812",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupSymbolDisposePolyfill node:internal/process/pre_execution:138:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 44,
    "tm": 21792,
    "source": {
      "script": 67,
      "start": 3709,
      "end": 4409,
      "positions": "C0O3879C5O3897C13O3925C24O3946C31O4055C37O3925C42O4167C45O4185C53O4218C64O4239C71O4353C77O4218C83O4408",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 45,
    "tm": 21834,
    "source": {
      "script": 11,
      "start": 172,
      "end": 307,
      "positions": "C0O193C4O242C7O242C11O259C13O265C18O259C20O306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPolicyFromDisk node:internal/process/pre_execution:635:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 46,
    "tm": 21875,
    "source": {
      "script": 67,
      "start": 19418,
      "end": 21210,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/process/pre_execution:398:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 47,
    "tm": 21917,
    "source": {
      "script": 67,
      "start": 12017,
      "end": 12203,
      "positions": "C0O12024C8O12029C14O12069C15O12076C16O12110C22O12110C27O12091C32O12160C38O12193C43O12193C48O12202",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReportSignalHandlers node:internal/process/pre_execution:428:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 48,
    "tm": 21959,
    "source": {
      "script": 67,
      "start": 12788,
      "end": 12937,
      "positions": "C0O12795C8O12799C14O12872C20O12872C25O12851C30O12912C34O12936",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:435:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 49,
    "tm": 21959,
    "source": {
      "script": 67,
      "start": 12984,
      "end": 13673,
      "positions": "C0O12984C20O13006C30O13006C34O13006C36O13071C44O13071C48O13071C50O13110C54O13127C55O13134C56O13138C64O13138C69O13168C77O13169C82O13229C90O13229C95O13207C101O13404C106O13412C117O13412C123O13540C130O13544C135O13572C147O13572C152O13672",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/process/pre_execution:545:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 50,
    "tm": 22000,
    "source": {
      "script": 67,
      "start": 16703,
      "end": 17232,
      "positions": "C0O16710C3O16722C8O16726C14O16764C20O16764C25O16808C33O16831C38O16835C46O16808C52O16861C53O16871C57O16861C61O16952C64O16967C73O17025C76O17033C81O17037C90O17084C93O17099C102O17141C108O17141C113O17165C118O17166C124O17205C127O17220C132O17205C137O17231",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeClusterIPC node:internal/process/pre_execution:564:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 51,
    "tm": 22042,
    "source": {
      "script": 67,
      "start": 17263,
      "end": 17504,
      "positions": "C0O17270C3O17282C10O17286C18O17301C23O17305C29O17343C35O17343C40O17375C45O17375C49O17464C52O17479C62O17503",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 52,
    "tm": 22042,
    "source": {
      "script": 53,
      "start": 863,
      "end": 1004,
      "positions": "C0O905C5O898C11O905C16O949C19O970C24O970C31O927C38O940C42O983C46O870C51O1003",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupUserModules node:internal/process/pre_execution:163:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 53,
    "tm": 22209,
    "source": {
      "script": 67,
      "start": 4436,
      "end": 4839,
      "positions": "C10O4465C13O4465C16O4490C19O4490C23O4547C29O4547C34O4589C39O4607C45O4589C49O4700C53O4726C54O4733C55O4740C58O4740C61O4808C64O4808C68O4838",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCJSLoader node:internal/process/pre_execution:685:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 54,
    "tm": 22209,
    "source": {
      "script": 67,
      "start": 21240,
      "end": 21333,
      "positions": "C0O21273C6O21273C11O21255C16O21315C20O21332",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCJS node:internal/modules/cjs/loader:383:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 55,
    "tm": 22292,
    "source": {
      "script": 63,
      "start": 10714,
      "end": 11192,
      "positions": "C0O10816C5O10830C10O10830C15O10876C20O10900C23O10900C27O10898C31O10933C36O10933C39O10963C44O10968C48O10988C54O11016C57O11023C62O11023C66O11110C75O11131C80O11167C84O11125C89O11191",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:313:50",
    "type": "JS",
    "kind": "Unopt",
    "func": 56,
    "tm": 24125,
    "source": {
      "script": 9,
      "start": 9879,
      "end": 9948,
      "positions": "C0O9888C11O9905C14O9895C18O9944",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "desc.value node:internal/per_context/primordials:388:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 57,
    "tm": 24167,
    "source": {
      "script": 6,
      "start": 11260,
      "end": 11319,
      "positions": "C0O11277C7O11284C12O11307",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:333:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 58,
    "tm": 24917,
    "source": {
      "script": 6,
      "start": 9523,
      "end": 9583,
      "positions": "C0O9542C3O9559C7O9557C12O9582",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:336:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 59,
    "tm": 24959,
    "source": {
      "script": 6,
      "start": 9592,
      "end": 9637,
      "positions": "C0O9603C3O9620C8O9610C12O9631",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCjsConditions node:internal/modules/helpers:65:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 60,
    "tm": 25000,
    "source": {
      "script": 64,
      "start": 1806,
      "end": 2166,
      "positions": "C0O1836C8O1836C13O1887C19O1887C24O1944C35O2055C48O2119C93O2143C140O2071C148O2069C155O2165",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1530:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 61,
    "tm": 25375,
    "source": {
      "script": 63,
      "start": 49693,
      "end": 50650,
      "positions": "C0O49716C9O49736C14O49740C22O49754C28O49754C33O49793C40O49813C45O49817C53O49829C59O49829C64O50024C70O50040C73O50045C81O50061C89O50045C99O50083C102O50088C110O50104C121O50088C127O50144C137O50150C151O50150C163O50189C167O50208C175O50242C183O50242C190O50208C195O50284C201O50318C209O50318C216O50284C221O50361C225O50381C232O50415C237O50443C243O50479C248O50443C256O50497C259O50415C265O50381C270O50521C272O50533C278O50594C283O50615C289O50615C293O50613C298O50649",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:160:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 62,
    "tm": 25417,
    "source": {
      "script": 15,
      "start": 4120,
      "end": 4229,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:414:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 63,
    "tm": 25417,
    "source": {
      "script": 6,
      "start": 11988,
      "end": 12005,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 23,
    "tm": 25459,
    "source": {
      "script": 17,
      "start": 497,
      "end": 598,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 22,
    "tm": 25459,
    "source": {
      "script": 17,
      "start": 985,
      "end": 1228,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/process/pre_execution:248:33",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 21,
    "tm": 25459,
    "source": {
      "script": 67,
      "start": 7788,
      "end": 8037,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "exposeLazyInterfaces node:internal/util:686:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 64,
    "tm": 25500,
    "source": {
      "script": 16,
      "start": 18687,
      "end": 18758,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defineLazyProperties node:internal/util:603:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 65,
    "tm": 26417,
    "source": {
      "script": 16,
      "start": 16850,
      "end": 17754,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:336:9",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 59,
    "tm": 26417,
    "source": {
      "script": 6,
      "start": 9592,
      "end": 9637,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:427:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 66,
    "tm": 26417,
    "source": {
      "script": 6,
      "start": 12317,
      "end": 12334,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeESMLoader node:internal/process/pre_execution:690:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 67,
    "tm": 26459,
    "source": {
      "script": 67,
      "start": 21363,
      "end": 21910,
      "positions": "C0O21410C6O21410C11O21392C16O21451C20O21614C28O21618C34O21734C40O21734C45O21683C50O21691C55O21709C60O21780C66O21780C71O21799C73O21809C77O21823C79O21843C83O21867C85O21886C90O21909",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeESM node:internal/modules/esm/utils:192:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 68,
    "tm": 26500,
    "source": {
      "script": 66,
      "start": 6390,
      "end": 6744,
      "positions": "C10O6419C12O6435C18O6455C21O6455C24O6605C32O6605C36O6674C44O6674C49O6743",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDefaultConditions node:internal/modules/esm/utils:60:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 69,
    "tm": 26792,
    "source": {
      "script": 66,
      "start": 1463,
      "end": 1809,
      "positions": "C0O1493C8O1493C13O1544C19O1544C24O1601C35O1637C48O1705C93O1729C138O1657C145O1655C151O1753C161O1776C169O1774C176O1808",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:72:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 70,
    "tm": 26834,
    "source": {
      "script": 63,
      "start": 2217,
      "end": 2257,
      "positions": "C0O2222C4O2255",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadPreloadModules node:internal/process/pre_execution:722:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 71,
    "tm": 26875,
    "source": {
      "script": 67,
      "start": 22398,
      "end": 22719,
      "positions": "C0O22485C8O22485C13O22516C15O22553C21O22560C26O22637C32O22637C37O22593C42O22603C47O22681C52O22718",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1564:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 72,
    "tm": 26917,
    "source": {
      "script": 63,
      "start": 50792,
      "end": 51381,
      "positions": "C0O50807C5O50812C11O50838C12O50845C13O50851C17O50864C23O51059C33O51059C42O51109C45O51131C53O51156C58O51156C63O51131C68O51122C85O51184C88O51190C95O51195C100O51217C101O51230C105O51245C107O51245C110O51279C112O51295C116O51284C121O51314C126O51346C130O51314C135O51304C140O51266C144O51358C145O51371C148O51380",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module node:internal/modules/cjs/loader:252:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 73,
    "tm": 27000,
    "source": {
      "script": 63,
      "start": 7243,
      "end": 7985,
      "positions": "C14O7265C16O7273C20O7281C22O7293C25O7298C30O7298C35O7291C39O7313C52O7313C57O7352C62O7370C67O7370C73O7391C84O7391C89O7430C90O7444C94O7454C95O7466C99O7477C101O7491C105O7503C107O7533C112O7533C118O7541C126O7555C128O7593C133O7593C138O7637C143O7637C149O7733C157O7765C160O7765C169O7733C174O7849C177O7869C188O7891C194O7849C199O7936C201O7941C206O7965C211O7984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1278:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 74,
    "tm": 27042,
    "source": {
      "script": 34,
      "start": 38877,
      "end": 39546,
      "positions": "C0O38890C8O38890C13O38933C19O38940C24O38953C26O38964C27O38985C34O38985C42O39024C44O39020C48O39058C51O39085C53O39113C57O39120C61O39127C63O39127C68O39146C71O39150C79O39185C84O39219C88O39250C93O39269C97O39356C99O39135C104O39095C108O39397C110O39405C115O39419C125O39446C126O39451C132O39470C137O39483C139O39495C140O39500C153O39507C158O39542",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setOwnProperty node:internal/util:726:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 75,
    "tm": 27042,
    "source": {
      "script": 16,
      "start": 19725,
      "end": 19892,
      "positions": "C0O19747C5O19780C12O19858C22O19754C27O19890",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:217:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 76,
    "tm": 27084,
    "source": {
      "script": 63,
      "start": 6182,
      "end": 6361,
      "positions": "C0O6225C7O6231C15O6245C19O6263C23O6271C26O6271C33O6319C38O6319C44O6360",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util:797:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 77,
    "tm": 27125,
    "source": {
      "script": 16,
      "start": 22002,
      "end": 22122,
      "positions": "C0O22011C10O22046C13O22054C19O22052C25O22075C26O22087C28O22105C32O22118",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:117:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 78,
    "tm": 27125,
    "source": {
      "script": 63,
      "start": 3473,
      "end": 3564,
      "positions": "C0O3480C8O3480C20O3522C27O3564",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:793:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 79,
    "tm": 27167,
    "source": {
      "script": 63,
      "start": 24237,
      "end": 25417,
      "positions": "C0O24292C5O24304C10O24304C17O24483C19O24492C24O24509C28O24534C29O24783C32O24809C36O24816C40O24825C42O24840C47O24850C48O24850C53O24882C58O24882C64O24924C66O24937C68O24933C73O24967C75O24977C77O24973C82O24996C89O25047C100O25047C108O25083C112O24996C117O25133C120O25151C124O25171C126O25177C131O25195C138O25206C144O25210C149O25232C156O25264C159O24858C164O24791C168O25351C176O25351C181O25400C183O25413",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalRequire node:internal/modules/cjs/loader:167:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 80,
    "tm": 27209,
    "source": {
      "script": 63,
      "start": 4815,
      "end": 5116,
      "positions": "C0O4832C8O4832C13O4860C15O4867C20O4881C36O4887C41O4881C42O4996C48O5008C53O5024C56O5038C69O5038C86O5095C90O5107C110O5115",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:950:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 81,
    "tm": 27292
  },
  {
    "name": "logger node:internal/util/debuglog:100:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 82,
    "tm": 27334,
    "source": {
      "script": 22,
      "start": 2965,
      "end": 3160,
      "positions": "C0O2965C3O2997C24O3021C30O3038C34O3028C38O3043C39O3058C45O3075C51O3084C55O3065C60O3089C61O3105C65O3112C72O3125C77O3121C83O3112C88O3150",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/per_context/primordials:339:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 83,
    "tm": 27375,
    "source": {
      "script": 6,
      "start": 9658,
      "end": 9687,
      "positions": "C0O9669C2O9681",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debug node:internal/util/debuglog:81:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 84,
    "tm": 27417,
    "source": {
      "script": 22,
      "start": 2453,
      "end": 2847,
      "positions": "C0O2453C3O2472C6O2472C9O2580C16O2601C22O2588C30O2586C36O2620C42O2656C48O2656C52O2684C73O2708C77O2725C81O2715C85O2730C86O2745C90O2762C96O2771C100O2752C105O2776C106O2792C115O2812C120O2808C126O2799C131O2837",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init node:internal/util/debuglog:77:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 85,
    "tm": 27417,
    "source": {
      "script": 22,
      "start": 2355,
      "end": 2438,
      "positions": "C0O2364C10O2370C14O2368C16O2407C26O2417C33O2415C40O2437",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "testEnabled node:internal/util/debuglog:31:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 86,
    "tm": 27459,
    "source": {
      "script": 22,
      "start": 958,
      "end": 969,
      "positions": "C0O964C1O969",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:54:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 87,
    "tm": 27459,
    "source": {
      "script": 22,
      "start": 1554,
      "end": 2091,
      "positions": "C0O1554C9O1573C18O1587C23O1614C34O1647C39O1655C43O1647C45O1666C55O1666C59O1698C69O1709C73O1714C81O2030C93O2048C95O2046C99O2066C106O2083C109O2089",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:357:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 88,
    "tm": 27500,
    "source": {
      "script": 63,
      "start": 9947,
      "end": 9972,
      "positions": "C0O9959C2O9965C9O9971",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:46:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 89,
    "tm": 27500,
    "source": {
      "script": 22,
      "start": 1404,
      "end": 1412,
      "positions": "C1O1411",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:228:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 90,
    "tm": 27542,
    "source": {
      "script": 63,
      "start": 6510,
      "end": 6634,
      "positions": "C0O6525C5O6529C13O6570C19O6582C22O6590C32O6614C41O6615C51O6590C57O6633",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:119:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 91,
    "tm": 27542,
    "source": {
      "script": 63,
      "start": 3613,
      "end": 3656,
      "positions": "C0O3631C3O3627C8O3631C12O3656",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:1058:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 92,
    "tm": 27625
  },
  {
    "name": "normalizeRequirableId node:internal/bootstrap/realm:292:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 93,
    "tm": 27709,
    "source": {
      "script": 9,
      "start": 9252,
      "end": 9576,
      "positions": "C0O9263C10O9267C17O9336C27O9336C33O9371C38O9389C43O9389C50O9435C52O9455C55O9475C60O9493C65O9493C72O9533C74O9543C75O9555C76O9572",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 94,
    "tm": 27709,
    "source": {
      "script": 9,
      "start": 9152,
      "end": 9220,
      "positions": "C0O9163C7O9208C12O9208C17O9216",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:839:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 95,
    "tm": 27750,
    "source": {
      "script": 63,
      "start": 25560,
      "end": 26839,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:520:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 96,
    "tm": 27792,
    "source": {
      "script": 63,
      "start": 15194,
      "end": 15461,
      "positions": "C0O15207C4O15222C5O15235C6O15252C12O15282C16O15291C17O15312C24O15315C29O15338C36O15341C44O15383C47O15398C52O15398C59O15406C62O15411C66O15404C69O15415C72O15436C73O15449C75O15460",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:539:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 97,
    "tm": 27834,
    "source": {
      "script": 63,
      "start": 15685,
      "end": 16597,
      "positions": "C0O15711C4O15730C5O15743C6O15786C11O15804C16O15804C22O15763C27O15774C32O15836C36O15852C43O15875C49O15901C50O15914C51O15926C53O15959C57O15951C62O15971C67O15997C72O16043C84O16001C91O16059C96O16077C99O16111C104O16116C109O16077C114O16075C120O16140C121O16153C125O16205C131O16205C136O16179C141O16250C146O16308C151O16330C155O16308C163O16372C170O16399C173O16399C183O16279C195O16257C200O16441C212O16462C215O16468C222O16473C227O16509C234O16553C238O16515C243O16509C244O16583C246O16583",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/package_json_reader:132:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 98,
    "tm": 27875,
    "source": {
      "script": 65,
      "start": 3526,
      "end": 4321,
      "positions": "C0O3569C7O3603C10O3569C16O3615C18O3659C23O3670C28O3670C33O3694C41O3711C47O3759C60O3771C67O3915C74O3952C84O3977C88O3952C96O3993C97O4006C98O4017C108O4060C112O4021C119O4087C120O4100C121O4125C126O4147C130O4125C135O4169C141O4185C148O4208C154O4229C160O4248C161O4281C163O4281C168O3685C172O4306C173O4319",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEnabled node:internal/process/permission:16:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 99,
    "tm": 28084,
    "source": {
      "script": 46,
      "start": 324,
      "end": 559,
      "positions": "C0O333C6O410C12O410C17O391C22O445C25O470C29O468C31O525C33O555",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/package_json_reader:123:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 100,
    "tm": 28125,
    "source": {
      "script": 65,
      "start": 3214,
      "end": 3284,
      "positions": "C0O3232C5O3244C11O3244C17O3239C21O3282",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:47:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 101,
    "tm": 28209,
    "source": {
      "script": 65,
      "start": 1099,
      "end": 3126,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1269:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 102,
    "tm": 28250,
    "source": {
      "script": 34,
      "start": 38744,
      "end": 38804,
      "positions": "C0O38788C2O38800",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:610:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 103,
    "tm": 28417
  },
  {
    "name": "isAbsolute node:path:1159:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 104,
    "tm": 28500,
    "source": {
      "script": 34,
      "start": 35583,
      "end": 35729,
      "positions": "C0O35596C8O35596C13O35642C19O35649C26O35667C31O35667C39O35706C41O35702C44O35725",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:185:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 105,
    "tm": 28500,
    "source": {
      "script": 63,
      "start": 5267,
      "end": 5668,
      "positions": "C0O5282C5O5298C10O5298C17O5328C23O5373C26O5383C31O5383C37O5402C39O5430C41O5444C42O5468C47O5468C52O5500C57O5533C62O5613C65O5623C70O5623C76O5652C78O5666",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:487:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 106,
    "tm": 28542,
    "source": {
      "script": 63,
      "start": 14187,
      "end": 14385,
      "positions": "C0O14229C2O14241C6O14234C11O14277C16O14300C19O14294C23O14277C29O14319C31O14341C33O14357C34O14250C39O14216C43O14370C44O14383",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:472:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 107,
    "tm": 28584,
    "source": {
      "script": 63,
      "start": 13680,
      "end": 13900,
      "positions": "C0O13717C5O13717C10O13739C11O13746C16O13755C17O13762C18O13767C26O13771C34O13813C36O13827C41O13839C46O13839C51O13860C52O13867C57O13874C61O13898",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toRealPath node:internal/modules/helpers:54:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 108,
    "tm": 28625,
    "source": {
      "script": 64,
      "start": 1545,
      "end": 1658,
      "positions": "C0O1563C5O1573C10O1586C17O1606C20O1617C28O1636C35O1573C41O1656",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2613:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 109,
    "tm": 28834
  },
  {
    "name": "getOptions node:internal/fs/utils:323:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 110,
    "tm": 31875,
    "source": {
      "script": 60,
      "start": 7457,
      "end": 8064,
      "positions": "C9O7484C16O7502C27O7562C29O7584C30O7592C36O7631C41O7675C43O7699C47O7714C54O7749C60O7788C78O7794C83O7788C84O7881C91O7890C96O7908C99O7931C104O7908C108O7957C114O7985C119O8013C127O7985C132O8047C134O8062",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:158:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 111,
    "tm": 32875,
    "source": {
      "script": 60,
      "start": 3655,
      "end": 3832,
      "positions": "C0O3670C6O3687C9O3694C14O3694C21O3737C24O3764C40O3770C45O3764C47O3831",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toPathIfFileURL node:internal/url:1487:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 112,
    "tm": 32959,
    "source": {
      "script": 39,
      "start": 42909,
      "end": 43022,
      "positions": "C0O42929C3O42934C9O42960C11O42981C12O42984C15O42991C19O43020",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURL node:internal/url:761:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 113,
    "tm": 34542,
    "source": {
      "script": 39,
      "start": 21405,
      "end": 21516,
      "positions": "C0O21416C12O21435C21O21450C27O21467C34O21494C40O21423C44O21514",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:697:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 114,
    "tm": 34584,
    "source": {
      "script": 60,
      "start": 18901,
      "end": 19171,
      "positions": "C14O18934C22O18967C25O18967C31O18993C36O19024C49O18999C54O18993C55O19089C68O19089C74O19126C76O19155C78O19155C80O19170",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:366:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 115,
    "tm": 34584,
    "source": {
      "script": 60,
      "start": 8792,
      "end": 9388,
      "positions": "C16O8856C21O8909C26O8909C31O9003C37O9026C41O9054C45O9071C51O9071C60O9122C64O9143C69O9143C76O9188C77O9195C78O9215C94O9215C100O9336C104O9358C106O9358C107O9375C109O9386",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 116,
    "tm": 34625,
    "source": {
      "script": 18,
      "start": 257,
      "end": 342,
      "positions": "C0O269C5O276C12O323C15O340",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2569:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 117,
    "tm": 34750,
    "source": {
      "script": 55,
      "start": 67705,
      "end": 67897,
      "positions": "C0O67730C2O67741C6O67735C11O67762C16O67766C24O67804C26O67800C31O67832C44O67839C49O67871C50O67751C55O67717C59O67882C61O67893",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2602:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 118,
    "tm": 34750,
    "source": {
      "script": 55,
      "start": 68612,
      "end": 68670,
      "positions": "C0O68625C14O68632C19O68666",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:349:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 119,
    "tm": 34792,
    "source": {
      "script": 60,
      "start": 8153,
      "end": 8651,
      "positions": "C0O8171C6O8234C11O8234C16O8256C24O8256C29O8313C31O8313C32O8338C38O8566C43O8593C51O8566C56O8639C60O8629C62O8650",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:206:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 120,
    "tm": 34834,
    "source": {
      "script": 55,
      "start": 5086,
      "end": 5327,
      "positions": "C0O5220C2O5225C6O5232C10O5266C15O5273C20O5289C22O5304C24O5302C30O5312C33O5325",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodeRealpathResult node:fs:2578:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 121,
    "tm": 34875,
    "source": {
      "script": 55,
      "start": 67931,
      "end": 68189,
      "positions": "C0O67953C4O67978C10O67998C17O68007C22O68023C24O68037C25O68057C30O68064C35O68064C41O68092C48O68101C53O68121C55O68137C56O68160C61O68177C66O68160C71O68187",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:1194:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 122,
    "tm": 34917,
    "source": {
      "script": 63,
      "start": 38021,
      "end": 38862,
      "positions": "C0O38036C8O38082C16O38036C21O38090C26O38103C32O38090C36O38114C38O38128C42O38142C45O38162C52O38179C55O38184C60O38184C66O38162C71O38153C75O38225C78O38225C83O38302C91O38306C101O38359C106O38370C112O38386C124O38392C129O38386C130O38436C133O38443C140O38454C144O38465C150O38485C151O38497C155O38531C160O38531C164O38643C169O38678C174O38689C186O38729C191O38736C196O38736C203O38750C205O38748C210O38787C215O38796C220O38796C227O38828C232O38837C237O38837C244O38861",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:502:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 123,
    "tm": 35000,
    "source": {
      "script": 63,
      "start": 14608,
      "end": 15045,
      "positions": "C0O14636C5O14641C10O14641C16O14667C18O14691C20O14717C22O14785C36O14738C44O14785C49O14799C51O14818C55O14827C56O14837C61O14846C63O14895C68O14914C74O14953C77O14964C84O14975C89O14997C91O15021C92O14722C96O15030C98O15043",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:1309:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 124,
    "tm": 35042,
    "source": {
      "script": 34,
      "start": 39650,
      "end": 42069,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1389:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 125,
    "tm": 35125,
    "source": {
      "script": 63,
      "start": 44948,
      "end": 46869,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readFileSync node:fs:446:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 126,
    "tm": 35209,
    "source": {
      "script": 55,
      "start": 11263,
      "end": 12881,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEncoding node:buffer:569:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 127,
    "tm": 35292,
    "source": {
      "script": 24,
      "start": 15940,
      "end": 16072,
      "positions": "C0O15955C6O16003C12O16010C20O16028C23O16028C28O16056C29O16070",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeEncoding node:internal/util:212:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 128,
    "tm": 36750,
    "source": {
      "script": 16,
      "start": 5652,
      "end": 5757,
      "positions": "C0O5662C7O5685C14O5703C19O5716C21O5730C22O5733C25O5740C29O5755",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInt32 node:internal/validators:43:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 129,
    "tm": 36792,
    "source": {
      "script": 15,
      "start": 851,
      "end": 894,
      "positions": "C0O863C2O887C5O876C8O892",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:727:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 130,
    "tm": 36792,
    "source": {
      "script": 60,
      "start": 19896,
      "end": 20054,
      "positions": "C14O19951C19O19951C24O19985C29O19985C34O20017C37O20024C41O20052",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "possiblyTransformPath node:internal/fs/utils:715:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 131,
    "tm": 36792,
    "source": {
      "script": 60,
      "start": 19572,
      "end": 19853,
      "positions": "C0O19583C5O19598C10O19598C16O19617C22O19655C27O19662C31O19680C32O19691C39O19698C42O19698C47O19691C51O19723C56O19728C62O19750C67O19757C73O19779C80O19797C85O19809C88O19809C93O19797C98O19786C102O19832C103O19839C105O19851",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToFlags node:internal/fs/utils:584:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 132,
    "tm": 36834,
    "source": {
      "script": 60,
      "start": 15805,
      "end": 17039,
      "positions": "C14O15833C20O15870C25O15870C30O15902C32O15915C33O15923C38O15948C42O15964C43O15972C202O16004C206O16020C207O16070C214O16088C216O16086C219O16095C220O16112C224O16126C225O16178C232O16194C234O16192C237O16201C238O16218C245O16235C247O16233C253O16245C255O16243C258O16254C259O16304C266O16321C268O16319C274O16331C276O16329C282O16342C284O16340C287O16349C288O16367C295O16384C297O16382C303O16394C305O16392C308O16401C309O16451C316O16468C318O16466C324O16478C326O16476C332O16487C334O16485C337O16494C338O16511C345O16529C347O16527C353O16539C355O16537C358O16548C359O16598C366O16616C368O16614C374O16626C376O16624C382O16637C384O16635C387O16644C388O16694C395O16712C397O16710C403O16722C405O16720C411O16733C413O16731C416O16740C417O16758C424O16776C426O16774C432O16786C434O16784C437O16793C438O16843C445O16861C447O16859C453O16871C455O16869C461O16880C463O16878C466O16887C467O16937C474O16955C476O16953C482O16965C484O16963C490O16974C492O16972C495O16981C496O16989C509O16995C514O16989",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1330:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 133,
    "tm": 37042,
    "source": {
      "script": 63,
      "start": 42944,
      "end": 44762,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1257:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 134,
    "tm": 37084,
    "source": {
      "script": 63,
      "start": 40039,
      "end": 42615,
      "positions": "C0O40039C14O40121C26O40135C31O40121C36O40405C44O40440C49O40447C54O40447C60O40481C89O40481C95O41013C101O41035C115O41105C126O41035C131O41131C145O41138C150O41182C151O41205C159O41295C196O41295C202O42014C206O42046C224O42086C229O42108C234O42109C240O42126C245O42134C253O42134C258O42253C264O42275C278O42345C289O42275C294O42385C298O42394C310O42417C315O42429C322O42440C327O42498C335O42498C340O42479C345O42549C356O42549C361O42599C363O42599",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalCompileFunction node:internal/vm:73:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 135,
    "tm": 37125,
    "source": {
      "script": 36,
      "start": 2177,
      "end": 3028,
      "positions": "C0O2366C35O2366C41O2568C45O2604C50O2641C54O2632C58O2679C64O2704C69O2733C73O2724C77O2770C85O2817C90O2854C94O2845C98O2881C102O2930C105O2969C110O2930C115O3012C117O3026",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 136,
    "tm": 37334,
    "source": {
      "script": 81,
      "start": 0,
      "end": 119,
      "positions": "C0O0C4O119",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 137,
    "tm": 37375,
    "source": {
      "script": 81,
      "start": 0,
      "end": 119,
      "positions": "C0O16C3O16C8O44C21O44C28O118",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "registerImportModuleDynamically node:internal/vm:63:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 138,
    "tm": 37375,
    "source": {
      "script": 36,
      "start": 1818,
      "end": 2143,
      "positions": "C0O1898C6O1898C11O1866C16O1958C22O1958C27O1939C32O2014C37O2082C45O1999C51O2142",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:428:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 139,
    "tm": 37417,
    "source": {
      "script": 68,
      "start": 11652,
      "end": 12095,
      "positions": "C0O11652C13O11721C18O12093",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "registerModule node:internal/modules/esm/utils:135:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 140,
    "tm": 37917,
    "source": {
      "script": 66,
      "start": 4020,
      "end": 4540,
      "positions": "C0O4062C2O4071C4O4070C8O4102C10O4119C12O4115C19O4170C21O4166C26O4404C27O4411C28O4455C41O4481C45O4497C50O4514C55O4514C62O4539",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeRequireFunction node:internal/modules/helpers:127:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 141,
    "tm": 37959,
    "source": {
      "script": 64,
      "start": 3790,
      "end": 6294,
      "positions": "C0O3790C22O3849C27O3849C30O3849C32O3865C37O3873C46O3907C64O3913C69O3907C70O4005C72O4016C92O4048C97O4052C108O4068C112O4048C114O4095C119O4095C122O4095C124O4127C130O4136C136O4164C145O5314C150O5800C152O5816C156O6067C158O6081C162O6093C177O6133C185O6093C190O6199C193O6227C197O6218C201O6243C204O6266C208O6257C212O6277C214O6292",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyModule node:internal/modules/helpers:110:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 142,
    "tm": 38000,
    "source": {
      "script": 64,
      "start": 3079,
      "end": 3173,
      "positions": "C0O3086C12O3107C17O3145C21O3094C23O3156C25O3171",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "require node:internal/modules/helpers:174:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 143,
    "tm": 38000,
    "source": {
      "script": 64,
      "start": 5340,
      "end": 5464,
      "positions": "C0O5433C3O5444C8O5444C13O5458",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1227:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 144,
    "tm": 38042,
    "source": {
      "script": 63,
      "start": 39157,
      "end": 39448,
      "positions": "C0O39166C8O39166C13O39194C15O39201C20O39215C36O39221C41O39215C42O39330C48O39342C53O39358C56O39372C69O39372C86O39427C90O39439C110O39447",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadBuiltinModule node:internal/modules/helpers:93:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 145,
    "tm": 38042,
    "source": {
      "script": 64,
      "start": 2613,
      "end": 2967,
      "positions": "C0O2631C5O2650C10O2650C17O2682C18O2689C19O2777C22O2791C27O2795C32O2795C38O2806C46O2806C51O2926C56O2926C60O2954C62O2965",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/realm:284:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 146,
    "tm": 38084,
    "source": {
      "script": 9,
      "start": 9060,
      "end": 9115,
      "positions": "C0O9071C7O9103C12O9103C17O9111",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/helpers:37:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 147,
    "tm": 38084,
    "source": {
      "script": 64,
      "start": 1032,
      "end": 1057,
      "positions": "C0O1044C2O1050C9O1056",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/realm:322:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 148,
    "tm": 38125,
    "source": {
      "script": 9,
      "start": 10128,
      "end": 10818,
      "positions": "C0O10137C5O10156C10O10182C15O10156C22O10309C32O10352C49O10315C54O10309C55O10389C60O10389C64O10431C70O10620C77O10651C85O10620C91O10675C96O10693C106O10709C109O10725C114O10709C118O10691C122O10750C127O10750C131O10775C136O10775C140O10806C144O10814",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 149,
    "tm": 38167,
    "source": {
      "script": 82,
      "start": 0,
      "end": 1376,
      "positions": "C0O0C4O1376",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 150,
    "tm": 38209,
    "source": {
      "script": 82,
      "start": 0,
      "end": 1376,
      "positions": "C0O1190C5O1266C13O1245C27O1312C32O1357C37O1329C41O1327C46O1375",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 151,
    "tm": 38417,
    "source": {
      "script": 83,
      "start": 0,
      "end": 10127,
      "positions": "C0O0C4O10127",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 152,
    "tm": 38792
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 153,
    "tm": 39167,
    "source": {
      "script": 84,
      "start": 0,
      "end": 27198,
      "positions": "C0O0C4O27198",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 154,
    "tm": 40125,
    "source": {
      "script": 84,
      "start": 0,
      "end": 27198,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 155,
    "tm": 40625,
    "source": {
      "script": 85,
      "start": 0,
      "end": 31777,
      "positions": "C0O0C4O31777",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 156,
    "tm": 41709
  },
  {
    "name": "Control node:internal/child_process:536:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 157,
    "tm": 41792,
    "source": {
      "script": 85,
      "start": 13925,
      "end": 14887,
      "positions": "C3O13940C12O13956C21O13981C28O14887",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 158,
    "tm": 42625,
    "source": {
      "script": 86,
      "start": 0,
      "end": 65932,
      "positions": "C0O0C4O65932",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 159,
    "tm": 44959
  },
  {
    "name": " node:stream:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 160,
    "tm": 45375,
    "source": {
      "script": 87,
      "start": 0,
      "end": 4792,
      "positions": "C0O0C4O4792",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:stream:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 161,
    "tm": 45584
  },
  {
    "name": " node:internal/streams/operators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 162,
    "tm": 45792,
    "source": {
      "script": 88,
      "start": 0,
      "end": 10140,
      "positions": "C0O0C4O10140",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/operators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 163,
    "tm": 46209,
    "source": {
      "script": 88,
      "start": 0,
      "end": 10140,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/abort_controller:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 164,
    "tm": 46459,
    "source": {
      "script": 89,
      "start": 0,
      "end": 12492,
      "positions": "C0O0C4O12492",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/abort_controller:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 165,
    "tm": 46917
  },
  {
    "name": "AbortController node:internal/abort_controller:381:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 166,
    "tm": 46959,
    "source": {
      "script": 89,
      "start": 10205,
      "end": 10839,
      "positions": "C4O10209C10O10839",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:441:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 167,
    "tm": 47042,
    "source": {
      "script": 6,
      "start": 12769,
      "end": 12814,
      "positions": "C3O12789C27O12789C41O12813",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "defineEventHandler node:internal/event_target:1100:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 168,
    "tm": 47167,
    "source": {
      "script": 47,
      "start": 29066,
      "end": 30505,
      "positions": "C0O29066C24O29090C36O29184C41O29189C46O29338C56O29359C66O29413C77O29338C82O30275C90O30296C100O30350C111O30275C116O30371C121O30401C128O30438C134O30447C144O30371C150O30504",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/end-of-stream:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 169,
    "tm": 48417,
    "source": {
      "script": 90,
      "start": 0,
      "end": 8360,
      "positions": "C0O0C4O8360",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/end-of-stream:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 170,
    "tm": 48792,
    "source": {
      "script": 90,
      "start": 0,
      "end": 8360,
      "positions": "C0O0C120O172C126O172C131O147C137O161C142O210C148O234C154O309C160O309C165O283C171O299C177O427C183O427C188O345C194O368C200O388C206O406C212O470C218O481C224O505C230O833C236O833C241O548C247O560C253O574C259O598C265O618C271O640C277O661C283O675C289O699C295O719C301O741C307O762C313O793C319O811C325O872C326O872C328O1000C332O1000C334O8302C336O8317C340O8331C347O8348C352O8359",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 171,
    "tm": 49042,
    "source": {
      "script": 91,
      "start": 0,
      "end": 8416,
      "positions": "C0O0C4O8416",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 172,
    "tm": 49292,
    "source": {
      "script": 91,
      "start": 0,
      "end": 8416,
      "positions": "C0O0C169O25C175O48C181O66C186O346C190O346C194O346C196O403C200O403C204O403C206O459C210O459C214O459C216O516C220O516C224O516C226O574C230O574C234O574C236O638C240O638C245O718C249O718C254O7817C262O7838C268O7853C274O7869C280O7884C286O7900C292O7913C298O7927C304O7941C310O7956C316O7976C322O8004C328O8019C334O8031C340O8053C346O8067C352O8081C358O8105C364O8125C370O8144C376O8166C382O8187C388O8203C394O8218C400O8232C406O8256C412O8276C418O8295C424O8317C430O8338C436O8357C442O8377C448O8394C454O7832C459O8415",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/compose:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 173,
    "tm": 49500,
    "source": {
      "script": 92,
      "start": 0,
      "end": 5451,
      "positions": "C0O0C4O5451",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/compose:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 174,
    "tm": 49667,
    "source": {
      "script": 92,
      "start": 0,
      "end": 5451,
      "positions": "C0O0C47O36C50O36C55O23C61O89C64O89C68O89C70O147C73O147C78O133C84O316C87O316C92O194C98O210C104O224C110O238C116O253C122O274C128O294C134O442C137O442C142O361C148O382C153O388C159O415C165O482C168O482C172O482C174O526C178O541C183O5450",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/pipeline:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 175,
    "tm": 49875,
    "source": {
      "script": 93,
      "start": 0,
      "end": 12326,
      "positions": "C0O0C4O12326",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/pipeline:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 176,
    "tm": 50334,
    "source": {
      "script": 93,
      "start": 0,
      "end": 12326,
      "positions": "C0O0C153O138C159O154C165O165C171O188C177O233C183O233C187O233C189O293C195O293C200O284C206O339C212O339C216O339C218O391C224O391C228O391C230O627C236O627C241O437C247O466C252O472C258O498C264O528C270O550C276O576C282O611C288O711C294O711C299O666C305O686C311O902C317O902C322O754C328O768C334O782C340O806C346O822C352O843C358O858C364O878C370O965C376O965C381O945C387O1008C388O1008C390O1025C391O1025C393O1039C394O1039C396O12281C403O12300C409O12314C415O12296C420O12325",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/destroy:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 177,
    "tm": 50542,
    "source": {
      "script": 94,
      "start": 0,
      "end": 6826,
      "positions": "C0O0C4O6826",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/destroy:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 178,
    "tm": 50792,
    "source": {
      "script": 94,
      "start": 0,
      "end": 6826,
      "positions": "C0O0C122O106C125O106C130O25C136O54C141O60C147O90C153O144C158O245C161O245C166O179C172O195C178O210C184O224C190O298C193O298C197O298C199O337C202O337C206O337C208O6736C215O6757C221O6770C227O6783C233O6794C239O6807C245O6751C250O6825",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/duplex:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 179,
    "tm": 50917,
    "source": {
      "script": 95,
      "start": 0,
      "end": 4938,
      "positions": "C0O0C4O4938",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/duplex:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 180,
    "tm": 51084,
    "source": {
      "script": 95,
      "start": 0,
      "end": 4938,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/readable:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 181,
    "tm": 51709,
    "source": {
      "script": 96,
      "start": 0,
      "end": 49050,
      "positions": "C0O0C4O49050",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/readable:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 182,
    "tm": 53417
  },
  {
    "name": " node:internal/streams/legacy:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 183,
    "tm": 53750,
    "source": {
      "script": 97,
      "start": 0,
      "end": 2934,
      "positions": "C0O0C4O2934",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/legacy:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 184,
    "tm": 53834,
    "source": {
      "script": 97,
      "start": 0,
      "end": 2934,
      "positions": "C0O0C22O25C28O41C33O92C36O92C40O92C42O189C50O203C55O161C60O215C63O215C68O257C77O272C81O2888C88O2907C94O2915C100O2903C105O2933",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/add-abort-signal:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 185,
    "tm": 53917,
    "source": {
      "script": 98,
      "start": 0,
      "end": 1704,
      "positions": "C0O0C4O1704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/add-abort-signal:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 186,
    "tm": 54000,
    "source": {
      "script": 98,
      "start": 0,
      "end": 1704,
      "positions": "C0O0C40O25C46O93C52O93C57O68C63O82C68O193C74O193C79O132C85O148C91O163C97O241C103O241C107O241C109O292C115O328C116O328C118O557C122O557C124O719C127O726C136O749C140O1065C143O1072C152O1105C157O1703",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/buffer_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 187,
    "tm": 54084,
    "source": {
      "script": 99,
      "start": 0,
      "end": 4060,
      "positions": "C0O0C4O4060",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/buffer_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 188,
    "tm": 54250,
    "source": {
      "script": 99,
      "start": 0,
      "end": 4060,
      "positions": "C0O0C20O25C26O49C31O67C37O93C43O142C46O142C51O131C57O181C60O181C65O169C71O216C120O2055C143O3869C147O3869C170O231C175O4059",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/state:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 189,
    "tm": 54334,
    "source": {
      "script": 100,
      "start": 0,
      "end": 1332,
      "positions": "C0O0C4O1332",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/state:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 190,
    "tm": 54375,
    "source": {
      "script": 100,
      "start": 0,
      "end": 1332,
      "positions": "C0O0C45O25C51O38C57O100C60O100C65O80C71O167C74O167C79O193C84O141C90O234C94O234C96O282C98O282C100O1236C107O1257C113O1277C119O1304C125O1251C130O1331",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:string_decoder:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 191,
    "tm": 54459,
    "source": {
      "script": 101,
      "start": 0,
      "end": 5213,
      "positions": "C0O0C4O5213",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:string_decoder:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 192,
    "tm": 54667,
    "source": {
      "script": 101,
      "start": 0,
      "end": 5213,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/from:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 193,
    "tm": 54792,
    "source": {
      "script": 102,
      "start": 0,
      "end": 2614,
      "positions": "C0O0C4O2614",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/from:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 194,
    "tm": 54917,
    "source": {
      "script": 102,
      "start": 0,
      "end": 2614,
      "positions": "C0O0C32O25C38O49C44O72C50O124C53O124C58O113C64O206C67O206C72O232C77O154C83O178C89O2591C91O2606C96O2613",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/readable:120:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 195,
    "tm": 55000,
    "source": {
      "script": 96,
      "start": 3765,
      "end": 3958,
      "positions": "C0O3765C9O3775C14O3811C22O3861C32O3956",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/writable:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 196,
    "tm": 55459,
    "source": {
      "script": 103,
      "start": 0,
      "end": 33751,
      "positions": "C0O0C4O33751",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/writable:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 197,
    "tm": 56667
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/writable:116:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 198,
    "tm": 56959,
    "source": {
      "script": 103,
      "start": 3773,
      "end": 3966,
      "positions": "C0O3773C9O3783C14O3819C22O3869C32O3964",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/writable:116:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 198,
    "tm": 57000,
    "source": {
      "script": 103,
      "start": 3773,
      "end": 3966,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1095:10",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 9,
    "tm": 57042,
    "source": {
      "script": 34,
      "start": 33911,
      "end": 34827,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:793:37",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 79,
    "tm": 57084,
    "source": {
      "script": 63,
      "start": 24237,
      "end": 25417,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1269:19",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 102,
    "tm": 57084,
    "source": {
      "script": 34,
      "start": 38744,
      "end": 38804,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1278:10",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 74,
    "tm": 57084,
    "source": {
      "script": 34,
      "start": 38877,
      "end": 39546,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/readable:120:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 195,
    "tm": 57125,
    "source": {
      "script": 96,
      "start": 3765,
      "end": 3958,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:stream/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 199,
    "tm": 57250,
    "source": {
      "script": 104,
      "start": 0,
      "end": 917,
      "positions": "C0O0C4O917",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:stream/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 200,
    "tm": 57292,
    "source": {
      "script": 104,
      "start": 0,
      "end": 917,
      "positions": "C0O0C28O25C34O46C40O130C43O130C48O83C54O97C60O113C66O195C69O195C74O188C80O254C83O254C88O241C93O298C96O298C100O871C107O892C113O904C119O886C124O916",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/transform:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 201,
    "tm": 57459,
    "source": {
      "script": 105,
      "start": 0,
      "end": 7368,
      "positions": "C0O0C4O7368",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/transform:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 202,
    "tm": 57709,
    "source": {
      "script": 105,
      "start": 0,
      "end": 7368,
      "positions": "C0O0C39O3508C44O3532C49O3558C51O3573C55O3628C58O3628C63O3654C68O3596C74O3677C77O3677C81O3677C83O3742C86O3742C91O3721C97O3777C100O3808C108O3826C113O3777C118O3838C124O3838C129O3898C132O3898C136O3898C138O6278C141O6288C148O6305C152O6315C155O6325C164O6346C168O6446C171O6456C180O6473C184O7213C187O7223C196O7239C201O7367",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/passthrough:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 203,
    "tm": 57792,
    "source": {
      "script": 106,
      "start": 0,
      "end": 1762,
      "positions": "C0O0C4O1762",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/streams/passthrough:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 204,
    "tm": 57875,
    "source": {
      "script": 106,
      "start": 0,
      "end": 1762,
      "positions": "C0O0C14O1288C19O1328C21O1343C25O1377C28O1377C32O1377C34O1416C37O1449C45O1470C50O1416C55O1482C61O1482C66O1673C69O1685C78O1706C83O1761",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/stream_base_commons:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 205,
    "tm": 58125,
    "source": {
      "script": 107,
      "start": 0,
      "end": 7041,
      "positions": "C0O0C4O7041",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/stream_base_commons:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 206,
    "tm": 58334,
    "source": {
      "script": 107,
      "start": 0,
      "end": 7041,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 207,
    "tm": 58584,
    "source": {
      "script": 108,
      "start": 0,
      "end": 9791,
      "positions": "C0O0C4O9791",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 208,
    "tm": 58959,
    "source": {
      "script": 108,
      "start": 0,
      "end": 9791,
      "positions": "C0O0C131O25C137O45C143O70C149O92C155O116C161O144C167O168C173O192C179O203C185O227C191O245C197O262C203O278C209O289C214O380C217O380C222O343C227O349C233O440C236O440C241O418C247O510C250O510C255O481C261O564C264O564C269O546C297O759C354O734C409O2160C427O3888C503O3717C505O4516C507O4516C512O4516C514O5148C518O5148C565O5359C567O9683C574O9704C580O9715C586O9733C592O9746C598O9764C604O9779C610O9698C615O9790",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WeakRefMap node:diagnostics_channel:35:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 209,
    "tm": 59000,
    "source": {
      "script": 108,
      "start": 767,
      "end": 1143,
      "positions": "C0O767C14O785C28O785C39O1143",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WeakRefMap node:diagnostics_channel:35:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 210,
    "tm": 59084,
    "source": {
      "script": 108,
      "start": 734,
      "end": 734,
      "positions": "C0O734C5O734C29O734C51O734",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "channel node:diagnostics_channel:213:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 211,
    "tm": 59125,
    "source": {
      "script": 108,
      "start": 4551,
      "end": 4801,
      "positions": "C0O4578C5O4587C10O4587C16O4600C18O4613C20O4628C21O4632C33O4696C51O4702C56O4696C57O4774C64O4781C69O4799",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:diagnostics_channel:45:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 212,
    "tm": 59125,
    "source": {
      "script": 108,
      "start": 980,
      "end": 1025,
      "positions": "C0O992C2O1005C13O1005C21O1013C26O1015C33O1021",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Channel node:diagnostics_channel:168:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 213,
    "tm": 59167,
    "source": {
      "script": 108,
      "start": 3746,
      "end": 3876,
      "positions": "C0O3759C1O3777C5O3794C6O3807C10O3824C12O3834C16O3847C23O3856C28O3856C35O3875",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:diagnostics_channel:40:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 214,
    "tm": 59167,
    "source": {
      "script": 108,
      "start": 859,
      "end": 973,
      "positions": "C0O878C2O883C6O895C11O895C17O921C19O934C28O947C33O943C45O934C50O969",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WeakReference node:internal/util:838:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 215,
    "tm": 59209,
    "source": {
      "script": 16,
      "start": 23185,
      "end": 23241,
      "positions": "C0O23185C14O23200C21O23217C26O23213C31O23211C36O23240",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeWeakRef node:internal/per_context/primordials:448:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 216,
    "tm": 59209,
    "source": {
      "script": 6,
      "start": 12978,
      "end": 13005,
      "positions": "C3O12989C27O12989C41O13004",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/perf/observe:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 217,
    "tm": 59459,
    "source": {
      "script": 109,
      "start": 0,
      "end": 16722,
      "positions": "C0O0C4O16722",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/perf/observe:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 218,
    "tm": 60042
  },
  {
    "name": "PerformanceObserver node:internal/perf/observe:243:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 219,
    "tm": 60084,
    "source": {
      "script": 109,
      "start": 5962,
      "end": 9533,
      "positions": "C3O5976C13O5996C20O5996C34O6013C43O6022C49O9533",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/perf/performance_entry:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 220,
    "tm": 60250,
    "source": {
      "script": 110,
      "start": 0,
      "end": 3272,
      "positions": "C0O0C4O3272",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/perf/performance_entry:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 221,
    "tm": 60375,
    "source": {
      "script": 110,
      "start": 0,
      "end": 3272,
      "positions": "C0O0C53O25C58O51C63O134C66O134C71O94C76O100C82O231C85O231C90O194C95O206C100O291C103O291C108O265C114O344C117O344C122O332C128O376C131O376C135O376C137O428C140O428C144O428C146O485C149O485C153O485C155O541C158O541C162O541C164O594C167O594C171O594C173O652C176O652C180O652C211O1595C239O750C241O2067C244O2107C256O2128C262O2162C268O2196C274O2229C280O2260C284O2067C292O2518C320O2483C322O3114C329O3135C335O3161C341O3181C347O3203C353O3227C359O3257C365O3129C370O3271",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:866:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 222,
    "tm": 60542,
    "source": {
      "script": 86,
      "start": 22670,
      "end": 22832,
      "positions": "C0O22691C8O22719C13O22730C20O22815C27O22691C33O22831",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 223,
    "tm": 60959,
    "source": {
      "script": 111,
      "start": 0,
      "end": 28253,
      "positions": "C0O0C4O28253",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 224,
    "tm": 61875
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 225,
    "tm": 62084,
    "source": {
      "script": 112,
      "start": 0,
      "end": 1851,
      "positions": "C0O0C4O1851",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 226,
    "tm": 62167,
    "source": {
      "script": 112,
      "start": 0,
      "end": 1851,
      "positions": "C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C103O195C108O175C114O264C120O264C125O231C131O242C137O318C140O318C145O304C151O351C157O404C160O404C165O432C166O432C168O1777C175O1798C181O1814C187O1837C193O1792C198O1850",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 227,
    "tm": 62375,
    "source": {
      "script": 113,
      "start": 0,
      "end": 2709,
      "positions": "C0O0C4O2709",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 228,
    "tm": 62459,
    "source": {
      "script": 113,
      "start": 0,
      "end": 2709,
      "positions": "C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C72O1527C99O2653C106O2672C112O2688C118O2668C123O2708",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "customPromiseExecFunction node:child_process:239:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 229,
    "tm": 62584,
    "source": {
      "script": 84,
      "start": 6932,
      "end": 7296,
      "positions": "C0O6932C9O6946C13O7294",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 230,
    "tm": 62667,
    "source": {
      "script": 114,
      "start": 0,
      "end": 3453,
      "positions": "C0O0C4O3453",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 231,
    "tm": 62792,
    "source": {
      "script": 114,
      "start": 0,
      "end": 3453,
      "positions": "C0O0C46O25C52O41C58O52C64O94C67O94C71O94C73O134C76O134C80O134C82O173C85O173C90O158C96O256C99O256C104O216C110O224C116O230C122O239C128O245C134O310C137O310C142O296C148O340C150O355C154O1336C163O1350C167O2001C176O2018C180O2399C189O2420C193O2862C202O2880C207O3452",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 232,
    "tm": 62875,
    "source": {
      "script": 115,
      "start": 0,
      "end": 1054,
      "positions": "C0O0C4O1054",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 233,
    "tm": 62917,
    "source": {
      "script": 115,
      "start": 0,
      "end": 1054,
      "positions": "C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O135C60O135C65O135C67O160C68O160C71O1053",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 234,
    "tm": 62959,
    "source": {
      "script": 116,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C4O1102",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 235,
    "tm": 63000,
    "source": {
      "script": 116,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 236,
    "tm": 63084,
    "source": {
      "script": 117,
      "start": 0,
      "end": 1379,
      "positions": "C0O0C4O1379",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 237,
    "tm": 63125,
    "source": {
      "script": 117,
      "start": 0,
      "end": 1379,
      "positions": "C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O876C63O904C71O928C76O876C81O940C87O940C92O985C95O992C104O1007C108O1073C111O1080C120O1095C124O1181C127O1188C136O1205C140O1299C143O1306C152O1328C157O1378",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getESMFacade node:internal/bootstrap/realm:340:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 238,
    "tm": 63209,
    "source": {
      "script": 9,
      "start": 10834,
      "end": 11584,
      "positions": "C0O10834C8O10852C14O10872C18O10879C19O10907C29O10907C34O10892C39O11025C46O11057C53O11025C58O11091C61O11104C70O11130C72O11130C74O11160C81O11185C86O11160C91O11202C101O11202C106O11250C108O11302C121O11264C126O11262C130O11498C135O11505C140O11505C144O11529C149O11536C159O11536C165O11573C169O11580",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/realm:351:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 239,
    "tm": 63250,
    "source": {
      "script": 9,
      "start": 11329,
      "end": 11424,
      "positions": "C0O11342C5O11350C10O11350C14O11378C25O11407C30O11378C37O11423",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/realm:365:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 240,
    "tm": 63292,
    "source": {
      "script": 9,
      "start": 11891,
      "end": 12224,
      "positions": "C0O11919C5O11944C11O11973C13O11986C17O11978C22O12028C24O12033C28O12046C30O12061C35O12076C37O12099C42O12106C51O12158C54O12170C59O12196C67O12158C73O12106C79O11995C84O11960C89O12223",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/realm:202:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 241,
    "tm": 63292,
    "source": {
      "script": 9,
      "start": 6377,
      "end": 6531,
      "positions": "C0O6413C5O6420C14O6474C26O6474C34O6529",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:122:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 242,
    "tm": 63334,
    "source": {
      "script": 63,
      "start": 3697,
      "end": 3751,
      "positions": "C0O3741C6O3703C11O3741C15O3751",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 243,
    "tm": 63375,
    "source": {
      "script": 118,
      "start": 0,
      "end": 1190,
      "positions": "C0O0C4O1190",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 244,
    "tm": 63417,
    "source": {
      "script": 118,
      "start": 0,
      "end": 1190,
      "positions": "C0O0C34O25C40O100C43O100C48O77C54O167C57O167C62O148C68O247C71O247C76O206C82O322C85O322C90O294C96O308C102O353C103O353C105O365C110O462C140O380C145O1189",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 245,
    "tm": 63625,
    "source": {
      "script": 119,
      "start": 0,
      "end": 22028,
      "positions": "C0O0C4O22028",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 246,
    "tm": 64417,
    "source": {
      "script": 119,
      "start": 0,
      "end": 22028,
      "positions": "C0O0C123O79C129O79C133O130C139O152C145O173C151O197C157O222C163O239C168O263C174O295C180O310C186O332C192O424C198O424C203O450C208O374C214O393C220O485C226O485C231O466C237O547C243O547C248O522C254O537C260O608C266O608C271O580C277O670C283O670C288O644C294O713C295O713C297O729C298O729C300O742C301O742C303O759C304O759C306O1876C307O1876C481O2304C483O15240C486O15274C493O15240C561O15293C563O17836C564O17836C566O21955C573O21976C579O21998C585O22015C591O21970C596O22027",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "CustomizedModuleLoader node:internal/modules/esm/loader:456:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 247,
    "tm": 64417,
    "source": {
      "script": 119,
      "start": 15322,
      "end": 17803,
      "positions": "C0O15352C6O17803",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ModuleLoader node:internal/modules/esm/loader:83:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 248,
    "tm": 64459,
    "source": {
      "script": 119,
      "start": 2323,
      "end": 15239,
      "positions": "C3O2434C10O2434C18O2530C25O2530C34O2648C42O2719C47O2719C55O2822C60O2822C67O2944C72O2944C80O3172C88O3551C94O15239",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get esmLoader node:internal/process/esm_loader:17:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 249,
    "tm": 64542,
    "source": {
      "script": 118,
      "start": 399,
      "end": 458,
      "positions": "C0O408C10O429C15O429C19O425C21O454",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createModuleLoader node:internal/modules/esm/loader:530:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 250,
    "tm": 64584,
    "source": {
      "script": 119,
      "start": 18326,
      "end": 19981,
      "positions": "C10O18386C12O18394C22O18601C27O18638C32O18639C38O18687C46O18687C51O18752C57O18759C62O18772C75O18839C79O18839C81O19344C86O19352C101O19587C108O19619C111O19637C116O19619C125O19587C140O19459C147O19352C153O19832C154O19857C160O19879C165O19896C171O19939C178O19946C183O19979",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isLoaderWorker node:internal/modules/esm/utils:205:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 251,
    "tm": 64625,
    "source": {
      "script": 66,
      "start": 6908,
      "end": 6940,
      "positions": "C0O6915C4O6938",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ModuleLoader node:internal/modules/esm/loader:132:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 252,
    "tm": 64625,
    "source": {
      "script": 119,
      "start": 3582,
      "end": 3764,
      "positions": "C5O3582C24O3605C34O3609C40O3667C50O3667C54O3726C59O3726C65O3763",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultConditions node:internal/modules/esm/utils:41:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 253,
    "tm": 64667,
    "source": {
      "script": 66,
      "start": 955,
      "end": 1032,
      "positions": "C0O962C7O969C10O987C12O962C16O1005C18O1030",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "newResolveCache node:internal/modules/esm/loader:35:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 254,
    "tm": 64667,
    "source": {
      "script": 119,
      "start": 950,
      "end": 1056,
      "positions": "C0O982C6O982C11O965C16O1035C21O1054",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 255,
    "tm": 64750,
    "source": {
      "script": 120,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C4O3877",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 256,
    "tm": 64875,
    "source": {
      "script": 120,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C36O25C42O47C48O68C54O90C60O107C66O121C71O179C77O179C82O155C88O231C94O231C99O264C112O265C118O231C120O342C126O342C131O368C136O317C142O403C148O403C153O384C179O838C227O811C231O2832C274O3826C281O3847C287O3860C293O3841C298O3876",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 257,
    "tm": 64959,
    "source": {
      "script": 121,
      "start": 0,
      "end": 3848,
      "positions": "C0O0C4O3848",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 258,
    "tm": 65125,
    "source": {
      "script": 121,
      "start": 0,
      "end": 3848,
      "positions": "C0O0C46O25C51O49C57O75C63O89C68O105C74O180C77O180C82O161C88O335C91O335C96O361C101O223C107O265C113O297C119O462C121O462C123O652C130O688C136O723C142O774C148O805C154O652C156O1231C159O1255C169O1231C174O1231C176O3781C183O3802C189O3825C195O3796C200O3847",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 259,
    "tm": 65167,
    "source": {
      "script": 121,
      "start": 1286,
      "end": 1324,
      "positions": "C0O1301C2O1305C4O1301C8O1324",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ResolveCache node:internal/modules/esm/module_map:26:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 260,
    "tm": 65209,
    "source": {
      "script": 120,
      "start": 861,
      "end": 878,
      "positions": "C3O867C27O867C51O877",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "newLoadCache node:internal/modules/esm/loader:44:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 261,
    "tm": 65209,
    "source": {
      "script": 119,
      "start": 1233,
      "end": 1333,
      "positions": "C0O1262C6O1262C11O1248C16O1315C21O1331",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "LoadCache node:internal/modules/esm/module_map:90:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 262,
    "tm": 65209,
    "source": {
      "script": 120,
      "start": 2855,
      "end": 2872,
      "positions": "C3O2861C27O2861C41O2871",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getTranslators node:internal/modules/esm/loader:53:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 263,
    "tm": 65250,
    "source": {
      "script": 119,
      "start": 1518,
      "end": 1617,
      "positions": "C0O1549C6O1549C11O1533C16O1615",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 264,
    "tm": 65459,
    "source": {
      "script": 122,
      "start": 0,
      "end": 19320,
      "positions": "C0O0C4O19320",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 265,
    "tm": 66125,
    "source": {
      "script": 122,
      "start": 0,
      "end": 19320,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setCustomizations node:internal/modules/esm/loader:187:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 266,
    "tm": 66250,
    "source": {
      "script": 119,
      "start": 5321,
      "end": 5548,
      "positions": "C0O5344C5O5365C9O5387C13O5460C17O5443C23O5503C24O5531C29O5547",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2613:22",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 109,
    "tm": 66417,
    "source": {
      "script": 55,
      "start": 68865,
      "end": 72615,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:866:21",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 222,
    "tm": 66417,
    "source": {
      "script": 86,
      "start": 22670,
      "end": 22832,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDeprecationWarningEmitter node:internal/util:111:38",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 267,
    "tm": 66459,
    "source": {
      "script": 16,
      "start": 2744,
      "end": 3356,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:156:19",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 268,
    "tm": 66459,
    "source": {
      "script": 16,
      "start": 4123,
      "end": 5103,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/realm:202:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 241,
    "tm": 66500,
    "source": {
      "script": 9,
      "start": 6377,
      "end": 6531,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/realm:365:14",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 240,
    "tm": 66500,
    "source": {
      "script": 9,
      "start": 11891,
      "end": 12224,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:420:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 269,
    "tm": 66500,
    "source": {
      "script": 6,
      "start": 12160,
      "end": 12177,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/package_json_reader:123:21",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 100,
    "tm": 66542,
    "source": {
      "script": 65,
      "start": 3214,
      "end": 3284,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2602:31",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 118,
    "tm": 66542,
    "source": {
      "script": 55,
      "start": 68612,
      "end": 68670,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:206:20",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 120,
    "tm": 66542,
    "source": {
      "script": 55,
      "start": 5086,
      "end": 5327,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 270,
    "tm": 66709,
    "source": {
      "script": 123,
      "start": 0,
      "end": 494,
      "positions": "C0O0C4O494",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 271,
    "tm": 66750,
    "source": {
      "script": 123,
      "start": 0,
      "end": 494,
      "positions": "C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get BlockList node:net:2373:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 272,
    "tm": 66834,
    "source": {
      "script": 86,
      "start": 65403,
      "end": 65492,
      "positions": "C0O65412C14O65426C19O65455C23O65422C25O65471C27O65488",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 273,
    "tm": 66917,
    "source": {
      "script": 124,
      "start": 0,
      "end": 3892,
      "positions": "C0O0C4O3892",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 274,
    "tm": 67084,
    "source": {
      "script": 124,
      "start": 0,
      "end": 3892,
      "positions": "C0O0C38O25C44O36C49O60C54O128C57O128C62O107C68O205C71O205C76O191C81O294C84O294C89O242C95O268C101O388C104O388C109O340C115O360C120O370C125O453C128O453C133O441C139O504C142O504C146O504C148O548C151O548C156O531C162O614C165O614C170O640C175O587C181O691C184O691C189O657C195O672C210O892C246O3233C257O3394C283O724C302O3706C307O3740C312O3750C316O3728C320O3802C325O3823C330O3763C335O3836C342O3857C348O3870C354O3851C359O3891",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 275,
    "tm": 67209,
    "source": {
      "script": 125,
      "start": 0,
      "end": 3402,
      "positions": "C0O0C4O3402",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 276,
    "tm": 67292,
    "source": {
      "script": 125,
      "start": 0,
      "end": 3402,
      "positions": "C0O0C44O25C49O49C54O143C57O143C62O100C68O118C74O129C80O257C83O257C88O185C94O203C100O221C106O237C112O345C115O345C120O307C125O313C131O435C134O435C139O405C144O417C150O482C153O482C158O470C164O575C167O575C172O527C178O547C183O557C188O636C191O636C195O636C197O671C200O671C204O671C240O2105C251O2348C262O2517C294O691C313O3183C318O3223C323O3233C327O3205C331O3289C336O3314C341O3246C346O3327C353O3348C359O3365C365O3390C371O3342C376O3401",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get SocketAddress node:net:2377:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 277,
    "tm": 67375,
    "source": {
      "script": 86,
      "start": 65513,
      "end": 65618,
      "positions": "C0O65522C14O65540C19O65573C23O65536C25O65593C27O65614",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 278,
    "tm": 67417,
    "source": {
      "script": 126,
      "start": 0,
      "end": 743,
      "positions": "C0O0C4O743",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 279,
    "tm": 67459,
    "source": {
      "script": 126,
      "start": 0,
      "end": 743,
      "positions": "C0O140C3O140C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O286C46O286C51O179C56O194C61O212C66O240C71O264C76O382C79O382C84O328C89O352C94O411C101O432C107O448C113O463C119O481C125O505C131O533C137O561C143O585C149O603C155O615C161O628C167O678C173O698C179O720C185O426C190O742",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 280,
    "tm": 67709,
    "source": {
      "script": 127,
      "start": 0,
      "end": 16328,
      "positions": "C0O0C4O16328",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 281,
    "tm": 68250
  },
  {
    "name": " node:internal/perf/event_loop_utilization:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 282,
    "tm": 68417,
    "source": {
      "script": 128,
      "start": 0,
      "end": 1527,
      "positions": "C0O0C4O1527",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/perf/event_loop_utilization:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 283,
    "tm": 68500,
    "source": {
      "script": 128,
      "start": 0,
      "end": 1527,
      "positions": "C0O0C29O120C32O120C37O36C42O42C48O88C54O104C60O1449C67O1470C73O1502C79O1464C84O1526",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker/io:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 284,
    "tm": 68750,
    "source": {
      "script": 129,
      "start": 0,
      "end": 15479,
      "positions": "C0O0C4O15479",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker/io:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 285,
    "tm": 69250
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 286,
    "tm": 69542,
    "source": {
      "script": 130,
      "start": 0,
      "end": 5723,
      "positions": "C0O0C4O5723",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 287,
    "tm": 69750,
    "source": {
      "script": 130,
      "start": 0,
      "end": 5723,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket node:net:353:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 288,
    "tm": 69959
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 289,
    "tm": 70042,
    "source": {
      "script": 95,
      "start": 2011,
      "end": 2663,
      "positions": "C0O2025C2O2036C7O2060C12O2067C17O2087C18O2091C23O2100C28O2100C34O2123C39O2132C44O2132C50O2156C54O2204C62O2218C63O2194C67O2246C77O2279C83O2303C87O2323C93O2344C97O2363C103O2389C107O2420C117O2453C123O2477C127O2497C133O2519C137O2538C143O2559C147O2578C153O2602C159O2631C160O2650C165O2662",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable node:internal/streams/readable:314:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 290,
    "tm": 70042,
    "source": {
      "script": 96,
      "start": 10487,
      "end": 11358,
      "positions": "C0O10487C9O10501C16O10512C21O10538C28O10545C33O10567C34O10722C41O10738C44O10745C48O10727C52O10756C71O10778C76O10776C80O10825C84O10863C92O10890C95O10911C99O10901C103O10941C111O10971C114O10995C118O10985C122O11028C130O11060C133O11086C137O11076C141O11114C149O11125C151O11141C158O11164C166O11141C171O11186C176O11193C184O11193C190O11217C197O11229C210O11229C217O11357",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 291,
    "tm": 70084,
    "source": {
      "script": 97,
      "start": 127,
      "end": 160,
      "positions": "C0O138C5O141C10O141C17O159",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ReadableState node:internal/streams/readable:253:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 292,
    "tm": 70125,
    "source": {
      "script": 96,
      "start": 7949,
      "end": 10467,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:32:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 293,
    "tm": 70209,
    "source": {
      "script": 100,
      "start": 826,
      "end": 1234,
      "positions": "C0O880C12O880C18O931C21O954C26O959C33O987C38O1013C47O1035C56O1080C69O1086C74O1080C75O1134C80O1141C84O1156C85O1183C88O1220C93O1190C97O1232",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:14:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 294,
    "tm": 70209,
    "source": {
      "script": 100,
      "start": 313,
      "end": 454,
      "positions": "C0O363C7O395C15O415C19O433C25O452",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/streams/readable:123:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 295,
    "tm": 70209,
    "source": {
      "script": 96,
      "start": 3814,
      "end": 3855,
      "positions": "C0O3819C4O3832C6O3831C12O3840C17O3847C21O3853",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:19:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 296,
    "tm": 70250,
    "source": {
      "script": 100,
      "start": 488,
      "end": 586,
      "positions": "C0O505C6O525C12O558C14O584",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 297,
    "tm": 70250,
    "source": {
      "script": 99,
      "start": 265,
      "end": 338,
      "positions": "C0O274C1O284C5O296C6O306C10O318C11O330C16O337",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "construct node:internal/streams/destroy:219:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 298,
    "tm": 70292,
    "source": {
      "script": 94,
      "start": 4433,
      "end": 4821,
      "positions": "C0O4468C8O4501C9O4508C10O4533C15O4568C20O4587C24O4600C25O4614C29O4629C33O4642C34O4656C38O4679C45O4684C48O4679C54O4715C62O4715C70O4741C75O4766C76O4773C77O4781C80O4789C88O4789C95O4820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable node:internal/streams/writable:375:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 299,
    "tm": 70334,
    "source": {
      "script": 103,
      "start": 12486,
      "end": 14066,
      "positions": "C0O12486C9O13060C16O13077C19O13084C23O13066C27O13096C33O13114C44O13114C51O13170C58O13177C63O13199C64O13203C83O13225C88O13223C92O13272C96O13310C104O13338C107O13360C111O13350C115O13391C123O13420C126O13443C130O13433C134O13475C142O13505C145O13529C149O13519C153O13562C161O13590C164O13612C168O13602C172O13643C180O13675C183O13701C187O13691C191O13729C197O13743C204O13766C212O13743C217O13788C222O13795C230O13795C236O13819C243O13831C256O13831C263O14065",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WritableState node:internal/streams/writable:292:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 300,
    "tm": 70375,
    "source": {
      "script": 103,
      "start": 9280,
      "end": 11922,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/streams/writable:119:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 301,
    "tm": 70417,
    "source": {
      "script": 103,
      "start": 3822,
      "end": 3863,
      "positions": "C0O3827C4O3840C6O3839C12O3848C17O3855C21O3861",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resetBuffer node:internal/streams/writable:357:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 302,
    "tm": 70459,
    "source": {
      "script": 103,
      "start": 11944,
      "end": 12088,
      "positions": "C0O11956C2O11962C6O11978C10O11988C11O12008C15O12015C17O12021C26O12032C31O12046C33O12044C39O12029C43O12058C46O12064C52O12076C54O12075C59O12072C64O12087",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/readable:124:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 303,
    "tm": 70459,
    "source": {
      "script": 96,
      "start": 3864,
      "end": 3950,
      "positions": "C0O3880C4O3891C8O3896C17O3907C20O3904C26O3923C30O3928C39O3939C44O3936C49O3949",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createHandle node:net:165:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 304,
    "tm": 70500,
    "source": {
      "script": 86,
      "start": 4563,
      "end": 4925,
      "positions": "C0O4583C13O4583C18O4626C23O4626C28O4649C30O4658C35O4676C42O4699C46O4711C49O4725C57O4734C60O4748C67O4683C72O4762C73O4770C75O4779C80O4796C87O4818C91O4830C94O4843C102O4852C105O4865C112O4803C117O4879C118O4887C125O4893C130O4887",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:114:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 305,
    "tm": 70542,
    "source": {
      "script": 15,
      "start": 2811,
      "end": 3274,
      "positions": "C36O2952C42O2991C58O2997C63O2991C64O3056C69O3061C75O3093C91O3099C96O3093C97O3158C99O3168C106O3183C111O3198C121O3237C134O3250C147O3204C152O3198C154O3273",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "guessHandleType node:internal/util:829:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 306,
    "tm": 70542,
    "source": {
      "script": 16,
      "start": 23024,
      "end": 23097,
      "positions": "C0O23046C5O23046C10O23070C17O23088C20O23095",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:net:2301:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 307,
    "tm": 70584,
    "source": {
      "script": 86,
      "start": 63606,
      "end": 63639,
      "positions": "C0O63612C2O63624C7O63633C13O63637",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:2300:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 308,
    "tm": 70625,
    "source": {
      "script": 86,
      "start": 63571,
      "end": 63599,
      "positions": "C0O63576C2O63588C4O63587C7O63597",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.on node:internal/streams/readable:1103:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 309,
    "tm": 70667,
    "source": {
      "script": 96,
      "start": 34992,
      "end": 35891,
      "positions": "C0O35017C5O35024C10O35034C15O35037C29O35037C35O35078C40O35097C42O35104C47O35286C55O35286C62O35312C65O35279C69O35405C79O35435C84O35435C90O35454C92O35461C97O35494C103O35515C109O35542C111O35587C117O35566C121O35601C122O35615C126O35630C127O35652C131O35667C139O35694C144O35708C149O35667C154O35734C160O35752C163O35752C169O35796C175O35815C178O35823C186O35823C192O35878C194O35889",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSocketHandle node:net:309:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 310,
    "tm": 70709,
    "source": {
      "script": 86,
      "start": 7887,
      "end": 8465,
      "positions": "C0O7903C5O7903C9O7919C10O7934C14O8020C20O8040C27O8048C32O8062C36O8079C43O8096C45O8094C49O8114C51O8119C57O8157C62O8138C66O8136C70O8186C72O8191C74O8190C78O8205C80O8241C82O8246C84O8245C88O8265C90O8306C94O8324C99O8329C105O8362C106O8369C107O8378C112O8392C116O8422C121O8430C126O8430C132O8464",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "undestroy node:internal/streams/destroy:154:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 311,
    "tm": 70750,
    "source": {
      "script": 94,
      "start": 2820,
      "end": 3492,
      "positions": "C0O2842C5O2875C10O2894C14O2907C15O2921C19O2933C20O2942C24O2955C25O2970C29O2983C30O2995C34O3008C35O3018C39O3030C40O3045C44O3058C45O3068C49O3093C57O3089C61O3134C69O3130C73O3161C77O3174C78O3188C82O3200C83O3212C87O3225C88O3234C92O3247C93O3262C97O3275C98O3285C102O3297C103O3312C107O3325C108O3339C112O3352C113O3366C117O3391C125O3387C129O3428C137O3424C141O3467C149O3463C154O3491",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/readable:177:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 312,
    "tm": 70792,
    "source": {
      "script": 96,
      "start": 6229,
      "end": 6392,
      "positions": "C0O6245C4O6266C6O6271C11O6286C15O6303C17O6308C26O6319C31O6316C37O6352C39O6357C48O6369C50O6368C55O6365C60O6391",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/writable:120:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 313,
    "tm": 70792,
    "source": {
      "script": 103,
      "start": 3872,
      "end": 3958,
      "positions": "C0O3888C4O3899C8O3904C17O3915C20O3912C26O3931C30O3936C39O3947C44O3944C49O3957",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/writable:205:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 314,
    "tm": 70834,
    "source": {
      "script": 103,
      "start": 7017,
      "end": 7180,
      "positions": "C0O7033C4O7054C6O7059C11O7074C15O7091C17O7096C26O7107C31O7104C37O7140C39O7145C48O7157C50O7156C55O7153C60O7179",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/streams/writable:218:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 315,
    "tm": 70834,
    "source": {
      "script": 103,
      "start": 7253,
      "end": 7350,
      "positions": "C0O7258C2O7271C4O7270C10O7281C12O7279C17O7295C24O7308C30O7319C32O7317C37O7330C44O7348",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getNewAsyncId node:net:184:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 316,
    "tm": 70875,
    "source": {
      "script": 86,
      "start": 4950,
      "end": 5066,
      "positions": "C0O4963C4O4996C14O5029C17O5029C22O5051C27O5051C31O5064",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:371:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 317,
    "tm": 70875,
    "source": {
      "script": 12,
      "start": 12775,
      "end": 12808,
      "positions": "C0O12786C4O12802",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 318,
    "tm": 70875,
    "source": {
      "script": 123,
      "start": 392,
      "end": 404,
      "positions": "C0O398C4O404",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:1309:11",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 124,
    "tm": 71042,
    "source": {
      "script": 34,
      "start": 39650,
      "end": 42069,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:349:32",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 119,
    "tm": 71042,
    "source": {
      "script": 60,
      "start": 8153,
      "end": 8651,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util:797:18",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 77,
    "tm": 71042,
    "source": {
      "script": 16,
      "start": 22002,
      "end": 22122,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/package_json_reader:132:26",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 98,
    "tm": 71084,
    "source": {
      "script": 65,
      "start": 3526,
      "end": 4321,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:46:14",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 89,
    "tm": 71084,
    "source": {
      "script": 22,
      "start": 1404,
      "end": 1412,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 94,
    "tm": 71084,
    "source": {
      "script": 9,
      "start": 9152,
      "end": 9220,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/readable:124:8",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 303,
    "tm": 71125,
    "source": {
      "script": 96,
      "start": 3864,
      "end": 3950,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/writable:120:8",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 313,
    "tm": 71125,
    "source": {
      "script": 103,
      "start": 3872,
      "end": 3958,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeRequirableId node:internal/bootstrap/realm:292:31",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 93,
    "tm": 71125,
    "source": {
      "script": 9,
      "start": 9252,
      "end": 9576,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:228:33",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 90,
    "tm": 71167,
    "source": {
      "script": 63,
      "start": 6510,
      "end": 6634,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 319,
    "tm": 71209,
    "source": {
      "script": 131,
      "start": 0,
      "end": 85,
      "positions": "C0O0C4O85",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 320,
    "tm": 71250,
    "source": {
      "script": 131,
      "start": 0,
      "end": 85,
      "positions": "C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/process/pre_execution:714:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 321,
    "tm": 71292,
    "source": {
      "script": 67,
      "start": 22147,
      "end": 22369,
      "positions": "C0O22154C8O22158C14O22203C17O22211C28O22211C34O22323C40O22323C45O22360C49O22368",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "markBootstrapComplete node:internal/process/pre_execution:735:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 322,
    "tm": 71334,
    "source": {
      "script": 67,
      "start": 22751,
      "end": 22815,
      "positions": "C0O22758C6O22758C11O22788C16O22789C21O22814",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:127:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 323,
    "tm": 71375,
    "source": {
      "script": 70,
      "start": 4520,
      "end": 4888,
      "positions": "C7O4536C14O4540C22O4570C25O4570C30O4616C33O4616C38O4652C40O4676C45O4687C50O4676C56O4807C62O4807C67O4796C72O4858C87O4858C93O4887",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 324,
    "tm": 71584,
    "source": {
      "script": 70,
      "start": 344,
      "end": 1479,
      "positions": "C0O375C8O375C13O452C15O464C17O480C22O500C28O504C34O550C35O557C36O564C41O580C46O580C54O765C60O765C65O754C70O827C77O837C80O842C85O842C98O827C104O876C108O893C109O900C110O935C116O935C121O981C123O1037C129O1037C134O1022C142O1101C150O1099C160O1149C162O1165C172O1184C182O1191C187O1258C195O1258C200O1223C205O1329C213O1329C218O1315C223O1363C226O1409C233O1363C238O1437C240O1437C241O1461C243O1477",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:52:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 325,
    "tm": 71625,
    "source": {
      "script": 70,
      "start": 1667,
      "end": 3093,
      "positions": "C0O1682C8O1686C15O1732C20O1748C21O1760C22O1936C28O1936C33O2152C39O2152C44O2198C50O2205C55O2224C61O2231C66O2238C67O2250C68O2309C74O2325C80O2325C87O2370C88O2382C89O2387C95O2404C101O2404C108O2449C109O2462C110O2497C116O2497C121O2476C126O2560C131O2670C138O2674C162O2709C163O2721C164O2749C165O2762C166O2823C172O2827C178O3004C185O3011C190O3053C191O3068C192O3081",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:158:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 111,
    "tm": 71709,
    "source": {
      "script": 60,
      "start": 3655,
      "end": 3832,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEnabled node:internal/process/permission:16:12",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 99,
    "tm": 71750,
    "source": {
      "script": 46,
      "start": 324,
      "end": 559,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:47:14",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 101,
    "tm": 71792,
    "source": {
      "script": 65,
      "start": 1099,
      "end": 3126,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setOwnProperty node:internal/util:726:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 75,
    "tm": 71792,
    "source": {
      "script": 16,
      "start": 19725,
      "end": 19892,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 326,
    "tm": 71959,
    "source": {
      "script": 132,
      "start": 0,
      "end": 9858,
      "positions": "C0O0C4O9858",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 327,
    "tm": 72250,
    "source": {
      "script": 132,
      "start": 0,
      "end": 9858,
      "positions": "C0O0C60O11C66O11C70O11C72O39C78O39C82O39C84O9824C88O9832C93O9842C97O9850C102O9837C107O9832C113O9857",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get ReadStream node:fs:3194:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 328,
    "tm": 72334,
    "source": {
      "script": 55,
      "start": 83633,
      "end": 83687,
      "positions": "C0O83642C3O83642C6O83665C10O83683",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyLoadStreams node:fs:3050:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 329,
    "tm": 72334,
    "source": {
      "script": 55,
      "start": 81210,
      "end": 81377,
      "positions": "C0O81217C6O81240C12O81271C17O81243C23O81255C36O81308C41O81323C47O81341C52O81357C59O81376",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 330,
    "tm": 72542,
    "source": {
      "script": 133,
      "start": 0,
      "end": 15271,
      "positions": "C0O0C4O15271",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 331,
    "tm": 73042
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 332,
    "tm": 73584,
    "source": {
      "script": 134,
      "start": 0,
      "end": 30543,
      "positions": "C0O0C4O30543",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 333,
    "tm": 74584
  },
  {
    "name": "FileHandle node:internal/fs/promises:133:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 334,
    "tm": 74625,
    "source": {
      "script": 134,
      "start": 3281,
      "end": 9350,
      "positions": "C0O3281C9O4925C18O9350",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 335,
    "tm": 74875,
    "source": {
      "script": 135,
      "start": 0,
      "end": 7454,
      "positions": "C0O0C4O7454",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 336,
    "tm": 75084,
    "source": {
      "script": 135,
      "start": 0,
      "end": 7454,
      "positions": "C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O643C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O663C257O663C262O655C267O703C270O703C275O688C281O740C284O740C289O730C295O793C302O793C307O793C309O864C316O864C321O864C323O959C330O968C333O951C335O1002C345O1002C347O1061C357O1061C359O1127C361O1127C363O1155C366O1162C371O1162C376O1155C378O7397C385O7416C391O7424C397O7440C403O7412C408O7453",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/dir:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 337,
    "tm": 75292,
    "source": {
      "script": 136,
      "start": 0,
      "end": 8071,
      "positions": "C0O0C4O8071",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/dir:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 338,
    "tm": 75542,
    "source": {
      "script": 136,
      "start": 0,
      "end": 8071,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/watchers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 339,
    "tm": 75792,
    "source": {
      "script": 137,
      "start": 0,
      "end": 11242,
      "positions": "C0O0C4O11242",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/watchers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 340,
    "tm": 76167
  },
  {
    "name": " node:internal/fs/recursive_watch:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 341,
    "tm": 76375,
    "source": {
      "script": 138,
      "start": 0,
      "end": 7634,
      "positions": "C0O0C4O7634",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/recursive_watch:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 342,
    "tm": 76625,
    "source": {
      "script": 138,
      "start": 0,
      "end": 7634,
      "positions": "C0O0C96O25C102O47C108O75C114O86C120O110C126O121C132O132C138O161C144O225C150O225C155O208C160O259C166O259C170O259C172O356C178O356C183O297C189O318C194O324C200O413C206O413C211O392C217O482C223O482C228O451C233O466C239O540C245O540C250O523C256O615C262O615C267O574C273O591C279O753C285O753C290O667C296O689C302O711C308O736C314O775C315O775C317O793C318O793C320O1012C321O1012C433O1644C445O5523C465O6542C500O7582C507O7603C513O7616C519O7597C524O7633",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "FSWatcher node:internal/fs/recursive_watch:71:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 343,
    "tm": 76667,
    "source": {
      "script": 138,
      "start": 1657,
      "end": 7580,
      "positions": "C3O1672C12O1690C21O1708C28O1708C41O1742C48O1742C61O1771C68O1771C79O1804C86O7580",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 344,
    "tm": 77125,
    "source": {
      "script": 139,
      "start": 0,
      "end": 39029,
      "positions": "C0O0C4O39029",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 345,
    "tm": 78375
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 346,
    "tm": 78667,
    "source": {
      "script": 140,
      "start": 0,
      "end": 12396,
      "positions": "C0O0C4O12396",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 347,
    "tm": 79125,
    "source": {
      "script": 140,
      "start": 0,
      "end": 12396,
      "positions": "C0O0C61O25C67O48C73O70C79O93C85O115C91O144C97O174C103O198C109O228C114O287C120O287C122O323C124O323C126O356C129O356C134O581C136O593C140O635C144O635C148O630C152O666C156O666C160O661C164O692C168O692C172O687C176O724C180O724C184O719C188O12285C195O12306C201O12322C207O12340C213O12356C219O12368C225O12388C231O12300C236O12395",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "CSI node:internal/readline/utils:19:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 348,
    "tm": 79209,
    "source": {
      "script": 140,
      "start": 397,
      "end": 579,
      "positions": "C0O397C8O430C20O460C22O475C26O465C31O494C33O508C43O530C47O523C52O544C54O555C64O484C69O447C73O566C75O577",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 349,
    "tm": 79250,
    "source": {
      "script": 141,
      "start": 0,
      "end": 2754,
      "positions": "C0O0C4O2754",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 350,
    "tm": 79375,
    "source": {
      "script": 141,
      "start": 0,
      "end": 2754,
      "positions": "C0O0C56O25C62O139C65O139C70O73C75O79C81O106C87O200C90O200C95O178C101O251C104O251C109O242C115O378C118O298C124O312C130O332C136O357C142O2674C149O2695C155O2708C161O2727C167O2739C173O2689C178O2753",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "promisify node:internal/util:405:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 351,
    "tm": 79459,
    "source": {
      "script": 16,
      "start": 11138,
      "end": 13175,
      "positions": "C0O11138C17O11200C25O11240C33O11264C38O11243C46O11300C57O11300C62O11343C69O11356C71O11355C76O11400C83O11408C87O11441C95O11441C100O11493C112O11525C119O11589C126O11500C131O11656C132O11819C139O11828C141O11827C144O11819C146O12577C157O12602C163O12602C168O12577C173O12638C185O12663C192O12723C199O12638C204O12812C214O12812C219O12882C226O12882C231O12924C233O12948C237O12929C242O13071C249O13108C255O13071C260O12957C265O12911C269O13126C276O13133C281O13173",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get WriteStream node:fs:3203:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 352,
    "tm": 79584,
    "source": {
      "script": 55,
      "start": 83759,
      "end": 83814,
      "positions": "C0O83768C3O83768C6O83791C10O83810",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get FileReadStream node:fs:3214:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 353,
    "tm": 79584,
    "source": {
      "script": 55,
      "start": 84024,
      "end": 84082,
      "positions": "C0O84033C3O84033C6O84056C10O84078",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get FileWriteStream node:fs:3223:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 354,
    "tm": 79584,
    "source": {
      "script": 55,
      "start": 84166,
      "end": 84225,
      "positions": "C0O84175C3O84175C6O84198C10O84221",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/util:620:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 355,
    "tm": 79625,
    "source": {
      "script": 16,
      "start": 17298,
      "end": 17482,
      "positions": "C0O17309C19O17325C22O17317C26O17313C30O17336C36O17381C43O17403C45O17402C48O17397C50O17417C56O17417C60O17453C62O17476",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/util:609:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 356,
    "tm": 79625,
    "source": {
      "script": 16,
      "start": 17052,
      "end": 17183,
      "positions": "C0O17068C11O17089C16O17097C26O17161C30O17068C36O17182",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:fs:3257:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 357,
    "tm": 79667,
    "source": {
      "script": 55,
      "start": 84923,
      "end": 85016,
      "positions": "C0O84934C14O84947C19O84978C23O84943C25O84994C27O85010",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "main /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:236:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 358,
    "tm": 79709,
    "source": {
      "script": 132,
      "start": 8965,
      "end": 9822,
      "positions": "C0O8965C11O8991C16O9009C24O9009C30O8991C34O8991C36O9024C40O9053C42O9062C43O9097C51O9123C59O9151C64O9097C69O9097C71O9183C74O9191C79O9203C85O9210C90O9227C93O9231C98O9243C108O9243C113O9811C114O9820",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseOptions /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:188:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 359,
    "tm": 79750,
    "source": {
      "script": 132,
      "start": 7470,
      "end": 8950,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadSearchJS /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:157:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 360,
    "tm": 79834,
    "source": {
      "script": 132,
      "start": 6052,
      "end": 7075,
      "positions": "C0O6052C11O6110C18O6115C28O6147C34O6165C38O6115C45O6199C50O6199C55O6248C60O6253C68O6253C75O6308C82O6311C87O6311C93O6335C103O6336C109O6398C119O6411C124O6411C131O6398C135O6398C137O6465C140O6478C145O6501C150O6478C155O6465C157O6520C162O6547C170O6764C181O7055C191O7073",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "join node:path:1169:7",
    "type": "JS",
    "kind": "Unopt",
    "func": 361,
    "tm": 79834,
    "source": {
      "script": 34,
      "start": 35802,
      "end": 36212,
      "positions": "C0O35802C3O35827C9O35834C14O35847C16O35858C17O35867C19O35892C21O35904C25O35897C30O35937C32O35941C36O35952C44O35952C49O35995C55O36002C60O36017C64O36053C71O36090C76O36104C87O35914C92O35879C96O36129C100O36161C102O36172C103O36177C108O36190C113O36190C118O36208",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalize node:path:1130:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 362,
    "tm": 79875,
    "source": {
      "script": 34,
      "start": 34902,
      "end": 35506,
      "positions": "C0O34915C8O34915C13O34959C19O34966C24O34979C26O34990C27O35021C34O35021C42O35060C44O35056C48O35116C51O35153C55O35160C59O35116C67O35165C71O35220C76O35250C87O35227C94O35304C100O35311C105O35326C109O35350C111O35361C112O35368C122O35406C123O35417C127O35446C137O35464C146O35488C154O35502",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Opt",
    "func": 13,
    "tm": 83875,
    "source": {
      "script": 34,
      "start": 1854,
      "end": 1902,
      "positions": "C0O1854C52O1877C64O1900C128O1854",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/search-index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 363,
    "tm": 93375,
    "source": {
      "script": 142,
      "start": 0,
      "end": 2363872,
      "positions": "C0O0C4O2363872",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/search-index.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 364,
    "tm": 173292,
    "source": {
      "script": 142,
      "start": 0,
      "end": 2363872,
      "positions": "C0O18C4O23C12O23C18O2363709C25O2363746C29O2363753C35O2363766C39O2363773C44O2363773C49O2363799C55O2363836C57O2363856C62O2363871",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Opt",
    "func": 12,
    "tm": 174459,
    "source": {
      "script": 34,
      "start": 2161,
      "end": 4085,
      "positions": "C0O2161C56O2341C160O2333C172O2530C184O2366C192O2443C220O2394C400O2530C440O2581C444O2575C456O2593C464O3110C472O2640C484O3787C488O3750C524O3713C532O3827C540O3750C548O3827C564O3738C580O3750C708O3903C720O3915C756O2672C764O2697C772O2881C780O2923C848O2998C868O3110C912O3210C916O3217C920O3223C992O3221C1080O4006C1092O4022C1128O2351C1132O2315C1144O4083C1196O2760C1200O3384C1204O2161C1252O2394C1380O2998C1392O3110C1420O3221C1432O2315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readdirSync node:fs:1505:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 365,
    "tm": 190584,
    "source": {
      "script": 55,
      "start": 38716,
      "end": 39204,
      "positions": "C0O38736C5O38746C11O38769C16O38776C22O38814C29O38839C34O38863C42O38839C47O38915C53O38932C56O38939C61O38975C62O38998C67O39006C74O39019C77O39030C82O39030C88O39066C93O39090C99O39006C105O39113C107O39152C115O39168C118O39168C127O39202",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:162:55",
    "type": "JS",
    "kind": "Unopt",
    "func": 366,
    "tm": 190750,
    "source": {
      "script": 132,
      "start": 6341,
      "end": 6370,
      "positions": "C0O6348C11O6348C16O6370",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "search.*\\.js$",
    "timestamp": 190834,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "toPathIfFileURL node:internal/url:1487:25",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 112,
    "tm": 190917,
    "source": {
      "script": 39,
      "start": 42909,
      "end": 43022,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptions node:internal/fs/utils:323:20",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 110,
    "tm": 190959,
    "source": {
      "script": 60,
      "start": 7457,
      "end": 8064,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURL node:internal/url:761:15",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 113,
    "tm": 190959,
    "source": {
      "script": 39,
      "start": 21405,
      "end": 21516,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 116,
    "tm": 191000,
    "source": {
      "script": 18,
      "start": 257,
      "end": 342,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:697:38",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 114,
    "tm": 191000,
    "source": {
      "script": 60,
      "start": 18901,
      "end": 19171,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/realm:284:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 146,
    "tm": 191000,
    "source": {
      "script": 9,
      "start": 9060,
      "end": 9115,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2569:33",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 117,
    "tm": 191000,
    "source": {
      "script": 55,
      "start": 67705,
      "end": 67897,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:366:35",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 115,
    "tm": 191042,
    "source": {
      "script": 60,
      "start": 8792,
      "end": 9388,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:162:55",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 366,
    "tm": 191042,
    "source": {
      "script": 132,
      "start": 6341,
      "end": 6370,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:185:14",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 105,
    "tm": 191042,
    "source": {
      "script": 63,
      "start": 5267,
      "end": 5668,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 45,
    "tm": 191084,
    "source": {
      "script": 11,
      "start": 172,
      "end": 307,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 367,
    "tm": 191792,
    "source": {
      "script": 143,
      "start": 0,
      "end": 46961,
      "positions": "C0O0C4O46961",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 368,
    "tm": 193334,
    "source": {
      "script": 143,
      "start": 0,
      "end": 46961,
      "positions": "C0O0C9O13C13O23C18O33C24O44C28O50C37O69C41O157C46O46959C50O46960",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:167",
    "type": "JS",
    "kind": "Unopt",
    "func": 369,
    "tm": 193334,
    "source": {
      "script": 143,
      "start": 166,
      "end": 46958,
      "positions": "C0O166C50O185C54O185C56O487C60O487C62O821C65O831C73O831C78O821C80O869C83O879C91O879C96O869C98O915C101O925C109O925C114O915C116O960C123O988C127O995C135O960C137O1891C142O1933C152O1891C154O46809C161O46841C167O46858C171O46870C175O46880C181O46905C184O46916C188O46923C193O46905C199O46942C204O46942C209O46957",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSearch /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3068",
    "type": "JS",
    "kind": "Unopt",
    "func": 370,
    "tm": 193459,
    "source": {
      "script": 143,
      "start": 3067,
      "end": 46809,
      "positions": "C0O3067C313O3102C317O3102C319O3127C321O3127C323O3134C324O3134C326O3150C327O3150C329O3169C330O3169C332O3197C336O3197C341O3197C343O3211C344O3211C346O3233C347O3233C349O3255C350O3255C352O46524C355O46524C359O46524C361O46551C368O46583C371O46606C375O46616C380O46628C385O46628C390O46650C396O46659C399O46659C402O46669C410O46702C419O46720C423O46732C430O46749C434O46760C441O46778C445O46790C447O46808",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "type": "JS",
    "kind": "Unopt",
    "func": 371,
    "tm": 193584
  },
  {
    "name": "buildTypeMapIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3307",
    "type": "JS",
    "kind": "Unopt",
    "func": 372,
    "tm": 193625,
    "source": {
      "script": 143,
      "start": 3306,
      "end": 3482,
      "positions": "C0O3313C2O3320C11O3340C12O3351C13O3352C18O3369C23O3369C30O3380C33O3401C38O3401C43O3410C44O3425C47O3439C52O3444C55O3458C60O3458C66O3471C68O3480",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasOwnPropertyRustdoc /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1041",
    "type": "JS",
    "kind": "Unopt",
    "func": 373,
    "tm": 193667,
    "source": {
      "script": 143,
      "start": 1040,
      "end": 1113,
      "positions": "C0O1055C4O1069C9O1079C14O1094C19O1094C25O1112",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildFunctionSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6558",
    "type": "JS",
    "kind": "Unopt",
    "func": 374,
    "tm": 193792,
    "source": {
      "script": 143,
      "start": 40260,
      "end": 41162,
      "positions": "C0O40314C2O40334C5O40336C6O40357C11O40363C12O40374C13O40379C15O40386C17O40393C19O40421C26O40447C38O40493C42O40455C58O40529C63O40577C67O40536C73O40629C80O40635C85O40639C87O40667C94O40693C106O40739C110O40701C126O40775C131O40823C135O40782C143O40859C146O40888C149O40918C154O40935C157O40938C159O40938C164O40959C171O40989C181O40992C193O41043C197O41005C215O41105C219O41064C225O40959C230O40943C235O40925C239O41126C246O41133C252O41140C258O41147C264O41161",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 371,
    "tm": 193959,
    "source": {
      "script": 143,
      "start": 41181,
      "end": 43812,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildItemSearchTypeAll /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5912",
    "type": "JS",
    "kind": "Unopt",
    "func": 375,
    "tm": 193959,
    "source": {
      "script": 143,
      "start": 39614,
      "end": 39702,
      "positions": "C0O39614C9O39650C19O39650C24O39701",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5952",
    "type": "JS",
    "kind": "Unopt",
    "func": 376,
    "tm": 194000,
    "source": {
      "script": 143,
      "start": 39654,
      "end": 39700,
      "positions": "C0O39660C8O39660C13O39700",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildItemSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6028",
    "type": "JS",
    "kind": "Unopt",
    "func": 377,
    "tm": 194000,
    "source": {
      "script": 143,
      "start": 39730,
      "end": 40228,
      "positions": "C0O39774C2O39796C5O39802C7O39812C9O39821C15O39848C18O39863C23O39880C25O39894C29O39912C34O39948C38O39921C44O39980C45O39992C50O39996C57O40006C65O40019C73O40040C79O40050C80O40051C81O40063C86O40069C93O40102C99O40112C100O40124C102O40148C105O40138C109O40152C117O40185C122O40162C130O40199C138O40212C148O40217C154O40227",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildItemSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6028",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 377,
    "tm": 195292,
    "source": {
      "script": 143,
      "start": 39730,
      "end": 40228,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildTypeMapIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3307",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 372,
    "tm": 195292,
    "source": {
      "script": 143,
      "start": 3306,
      "end": 3482,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5952",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 376,
    "tm": 195292,
    "source": {
      "script": 143,
      "start": 39654,
      "end": 39700,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildItemSearchTypeAll /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5912",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 375,
    "tm": 195334,
    "source": {
      "script": 143,
      "start": 39614,
      "end": 39702,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildFunctionSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6558",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 374,
    "tm": 195334,
    "source": {
      "script": 143,
      "start": 40260,
      "end": 41162,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildTypeMapIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3307",
    "type": "JS",
    "kind": "Opt",
    "func": 372,
    "tm": 197000,
    "source": {
      "script": 143,
      "start": 3306,
      "end": 3482,
      "positions": "C0O3306C60O3320C88O3352C112O3369C172O3401C224O3410C272O3439C280O3458C336O3480C348O3351C352O3306C400O3352",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildItemSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6028",
    "type": "JS",
    "kind": "Opt",
    "func": 377,
    "tm": 200459,
    "source": {
      "script": 143,
      "start": 39730,
      "end": 40228,
      "positions
      "inlined": "F0O39921F1O39650I0F2O40162FO39660I1F2O40162I3",
      "fns": [
        375,
        376,
        372
      ]
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5952",
    "type": "JS",
    "kind": "Opt",
    "func": 376,
    "tm": 201334,
    "source": {
      "script": 143,
      "start": 39654,
      "end": 39700,
      "positions
      "inlined": "F0O39660F1O39921I0FO39650I1F2O40162I0F0O39660I2F2O40162I4",
      "fns": [
        377,
        375,
        372
      ]
    }
  },
  {
    "name": "buildItemSearchTypeAll /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5912",
    "type": "JS",
    "kind": "Opt",
    "func": 375,
    "tm": 205584,
    "source": {
      "script": 143,
      "start": 39614,
      "end": 39702,
      "positions
      "inlined": "F0O39650F1O39660I0FO39921I1F0O39650I2F2O40162I1F1O39660I3F2O40162I5",
      "fns": [
        376,
        377,
        372
      ]
    }
  },
  {
    "name": "buildFunctionSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6558",
    "type": "JS",
    "kind": "Opt",
    "func": 374,
    "tm": 211250
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "type": "JS",
    "kind": "Opt",
    "func": 371,
    "tm": 212875,
    "source": {
      "script": 143,
      "start": 41181,
      "end": 43812,
      "positions": "C0O41181C68O41465C100O43811C144O41465C148O41181",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "type": "JS",
    "kind": "Opt",
    "func": 371,
    "tm": 225792,
    "source": {
      "script": 143,
      "start": 41181,
      "end": 43812,
      "positions": "C0O41181C68O41465C100O43811C144O41465C148O41181",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:248:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 378,
    "tm": 231834,
    "source": {
      "script": 132,
      "start": 9251,
      "end": 9798,
      "positions": "C0O9274C4O9282C9O9289C19O9306C30O9289C35O9347C39O9347C45O9386C50O9401C59O9423C62O9427C70O9401C76O9468C80O9468C86O9492C90O9500C95O9507C103O9533C108O9541C123O9570C128O9579C143O9606C148O9613C157O9507C162O9636C166O9644C171O9651C179O9651C184O9676C188O9684C193O9691C201O9716C206O9716C211O9734C216O9734C220O9726C228O9691C233O9759C237O9767C242O9774C250O9774C256O9797",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable.write node:internal/streams/writable:493:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 379,
    "tm": 231875,
    "source": {
      "script": 103,
      "start": 16082,
      "end": 16160,
      "positions": "C0O16108C15O16115C24O16158",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_write node:internal/streams/writable:443:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 380,
    "tm": 231917,
    "source": {
      "script": 103,
      "start": 14539,
      "end": 16045,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "type": "JS",
    "kind": "Opt",
    "func": 371,
    "tm": 233209,
    "source": {
      "script": 143,
      "start": 41181,
      "end": 43812,
      "positions": "C0O41181C68O41465C100O43811C144O41465C148O41181",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:532:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 381,
    "tm": 233250,
    "source": {
      "script": 103,
      "start": 17136,
      "end": 18296,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._write node:net:963:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 382,
    "tm": 233292,
    "source": {
      "script": 86,
      "start": 25001,
      "end": 25074,
      "positions": "C0O25031C19O25031C25O25073",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._writeGeneric node:net:921:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 383,
    "tm": 233334,
    "source": {
      "script": 86,
      "start": 23960,
      "end": 24864,
      "positions": "C0O23960C21O24162C37O24180C41O24198C45O24210C49O24232C53O24253C66O24253C72O24479C83O24479C89O24507C90O24514C91O24521C92O24539C96O24549C98O24571C102O24590C108O24605C115O24612C118O24608C124O24605C128O24638C129O24651C130O24664C135O24664C139O24686C141O24693C145O24709C161O24715C169O24757C188O24763C194O24813C200O24824C204O24829C207O24856C211O24850C216O24863",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_unrefTimer node:net:505:52",
    "type": "JS",
    "kind": "Unopt",
    "func": 384,
    "tm": 233375,
    "source": {
      "script": 86,
      "start": 13871,
      "end": 13981,
      "positions": "C0O13891C5O13899C9O13930C11O13936C13O13935C18O13953C20O13954C24O13965C29O13965C33O13915C38O13878C43O13980",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeGeneric node:internal/stream_base_commons:147:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 385,
    "tm": 233417,
    "source": {
      "script": 107,
      "start": 3600,
      "end": 3784,
      "positions": "C0O3643C5O3664C7O3663C11O3643C17O3693C29O3693C35O3733C47O3733C52O3771C54O3782",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteWrap node:internal/stream_base_commons:109:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 386,
    "tm": 233417,
    "source": {
      "script": 107,
      "start": 2722,
      "end": 2936,
      "positions": "C0O2757C5O2757C11O2777C13O2788C17O2800C19O2815C23O2836C24O2846C28O2857C29O2867C33O2874C34O2885C38O2895C40O2908C44O2923C46O2934",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleWriteReq node:internal/stream_base_commons:45:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 387,
    "tm": 233459,
    "source": {
      "script": 107,
      "start": 1177,
      "end": 2009,
      "positions": "C0O1211C5O1230C80O1300C85O1300C92O1330C99O1350C101O1349C106O1379C108O1390C112O1404C114O1415C115O1480C120O1480C126O1509C127O1565C132O1565C138O1592C139O1631C144O1631C150O1659C151O1756C156O1756C162O1783C163O1824C168O1831C173O1831C180O1878C185O1878C192O1910C199O1930C201O1929C206O1959C208O1970C212O1986C214O1997",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterWriteDispatched node:internal/stream_base_commons:155:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 388,
    "tm": 233500,
    "source": {
      "script": 107,
      "start": 3815,
      "end": 4089,
      "positions": "C0O3834C2O3846C7O3862C9O3861C12O3844C16O3880C21O3910C23O3909C27O3890C31O3934C32O3942C37O3953C39O3963C45O3996C53O3963C59O3960C63O4004C64O4017C70O4037C78O4072C83O4072C88O4088",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onwrite node:internal/streams/writable:599:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 389,
    "tm": 233584
  },
  {
    "name": "doSearch /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:167:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 390,
    "tm": 233625,
    "source": {
      "script": 132,
      "start": 6555,
      "end": 6738,
      "positions": "C0O6607C5O6627C13O6650C18O6650C26O6672C35O6627C40O6728",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14840",
    "type": "JS",
    "kind": "Unopt",
    "func": 391,
    "tm": 233709,
    "source": {
      "script": 143,
      "start": 14839,
      "end": 15748,
      "positions": "C0O14839C11O15162C16O15162C22O15187C27O15205C35O15283C40O15283C51O15309C56O15309C64O15339C69O15339C74O15393C96O15379C126O15379C129O15400C133O15400C137O15369C204O15454C226O15440C256O15440C259O15464C263O15464C267O15430C347O15506C352O15512C357O15538C359O15549C363O15554C365O15566C366O15577C372O15624C379O15634C382O15611C386O15660C391O15666C396O15679C401O15688C405O15672C408O15653C412O15724C416O15711C420O15735C422O15747",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "newParsedQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14191",
    "type": "JS",
    "kind": "Unopt",
    "func": 392,
    "tm": 233750,
    "source": {
      "script": 143,
      "start": 14190,
      "end": 14410,
      "positions": "C0O14202C7O14218C11O14248C16O14248C26O14409",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseInput /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:12226",
    "type": "JS",
    "kind": "Unopt",
    "func": 393,
    "tm": 233792
  },
  {
    "name": "isStopCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3684",
    "type": "JS",
    "kind": "Unopt",
    "func": 394,
    "tm": 233875,
    "source": {
      "script": 143,
      "start": 3683,
      "end": 3712,
      "positions": "C0O3687C3O3694C7O3711",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEndCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3627",
    "type": "JS",
    "kind": "Unopt",
    "func": 395,
    "tm": 233875,
    "source": {
      "script": 143,
      "start": 3626,
      "end": 3659,
      "positions": "C0O3630C3O3643C8O3643C16O3653C20O3658",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3504",
    "type": "JS",
    "kind": "Unopt",
    "func": 396,
    "tm": 233917,
    "source": {
      "script": 143,
      "start": 3503,
      "end": 3539,
      "positions": "C0O3507C3O3523C8O3523C16O3533C20O3538",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getNextElem /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:8928",
    "type": "JS",
    "kind": "Unopt",
    "func": 397,
    "tm": 233959,
    "source": {
      "script": 143,
      "start": 8927,
      "end": 10148,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "skipWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5410",
    "type": "JS",
    "kind": "Unopt",
    "func": 398,
    "tm": 233959,
    "source": {
      "script": 143,
      "start": 5409,
      "end": 5569,
      "positions": "C0O5441C5O5457C10O5467C14O5444C19O5495C24O5517C28O5504C32O5522C35O5526C41O5543C43O5549C50O5564C54O5423C59O5568",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getIdentEndPosition /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:7405",
    "type": "JS",
    "kind": "Unopt",
    "func": 399,
    "tm": 234042,
    "source": {
      "script": 143,
      "start": 7404,
      "end": 8907,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4873",
    "type": "JS",
    "kind": "Unopt",
    "func": 400,
    "tm": 234084,
    "source": {
      "script": 143,
      "start": 4872,
      "end": 4946,
      "positions": "C0O4876C2O4884C9O4894C16O4902C23O4912C30O4920C37O4930C44O4938C47O4945",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isErrorCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3738",
    "type": "JS",
    "kind": "Unopt",
    "func": 401,
    "tm": 234084,
    "source": {
      "script": 143,
      "start": 3737,
      "end": 3768,
      "positions": "C0O3741C3O3752C8O3752C16O3762C20O3767",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPathSeparator /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5019",
    "type": "JS",
    "kind": "Unopt",
    "func": 402,
    "tm": 234125,
    "source": {
      "script": 143,
      "start": 5018,
      "end": 5054,
      "positions": "C0O5022C2O5030C10O5038C14O5053",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createQueryElement /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5597",
    "type": "JS",
    "kind": "Unopt",
    "func": 403,
    "tm": 234167,
    "source": {
      "script": 143,
      "start": 5596,
      "end": 7376,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSeparatorCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4976",
    "type": "JS",
    "kind": "Unopt",
    "func": 404,
    "tm": 234250,
    "source": {
      "script": 143,
      "start": 4975,
      "end": 4994,
      "positions": "C0O4979C2O4987C5O4993",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isReturnArrow /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4757",
    "type": "JS",
    "kind": "Unopt",
    "func": 405,
    "tm": 234292,
    "source": {
      "script": 143,
      "start": 4756,
      "end": 4847,
      "positions": "C0O4789C5O4799C10O4817C15O4833C19O4836C23O4799C32O4839C35O4846",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getItemsBefore /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:10172",
    "type": "JS",
    "kind": "Unopt",
    "func": 406,
    "tm": 234334
  },
  {
    "name": "::|\\s+",
    "timestamp": 234417,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "convertTypeFilterOnElem /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14884",
    "type": "JS",
    "kind": "Unopt",
    "func": 407,
    "tm": 234417,
    "source": {
      "script": 143,
      "start": 14883,
      "end": 15142,
      "positions": "C0O14898C6O14937C11O14948C13O14961C18O14973C21O14995C26O15011C30O15010C36O15045C40O15061C42O15060C46O15100C68O15086C96O15086C99O15110C102O15110C106O15076C171O15141",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "execQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:15963",
    "type": "JS",
    "kind": "Unopt",
    "func": 408,
    "tm": 234500,
    "source": {
      "script": 143,
      "start": 15962,
      "end": 30298,
      "positions": "C0O15962C113O16035C117O16035C122O16035C124O16061C128O16061C133O16061C135O16088C139O16088C144O16088C146O29902C149O29917C155O29931C158O29957C171O29976C185O30023C199O30071C208O29957C214O30131C217O30161C222O30170C236O30170C252O30131C257O30214C260O30229C266O30247C271O30254C277O30260C282O30270C288O30281C292O30287C294O30297",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "innerRunQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27314",
    "type": "JS",
    "kind": "Unopt",
    "func": 409,
    "tm": 234584
  },
  {
    "name": "convertNameToId /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27603",
    "type": "JS",
    "kind": "Unopt",
    "func": 410,
    "tm": 234667
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "type": "JS",
    "kind": "Unopt",
    "func": 411,
    "tm": 234709,
    "source": {
      "script": 143,
      "start": 26945,
      "end": 27291,
      "positions": "C0O26945C9O26963C22O26998C31O27003C39O27026C45O27032C46O27038C47O27039C55O27066C60O27071C70O27090C78O27100C83O27105C95O27043C102O27226C103O27232C104O27233C112O27260C123O27273C127O27280C138O27233C144O27290",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Unopt",
    "func": 412,
    "tm": 234834
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Unopt",
    "func": 413,
    "tm": 234917,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "type": "JS",
    "kind": "Unopt",
    "func": 414,
    "tm": 235000,
    "source": {
      "script": 143,
      "start": 23454,
      "end": 23789,
      "positions": "C0O23468C4O23479C6O23477C13O23501C18O23509C19O23521C20O23532C29O23541C33O23548C40O23564C74O23589C76O23600C79O23624C80O23633C82O23644C89O23661C92O23675C93O23686C95O23697C102O23717C105O23737C106O23749C108O23760C111O23775C112O23776C113O23788",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Unopt",
    "func": 415,
    "tm": 235000,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "C0O21941C6O21943C11O21957C17O21959C22O21964C26O21981C27O21993C28O22003C33O22014C38O22003C45O22025C50O22036C55O22025C62O22039C67O22045C68O22057C69O22058C72O22100C76O22092C78O22103C81O22090C91O22065C96O22129C97O22145C103O22162C108O22171C114O22177C119O22181C122O22209C133O22188C138O22240C139O22241C140O22253",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Unopt",
    "func": 416,
    "tm": 235042,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions": "C0O22319C17O22310C45O22310C48O22325C60O22328C67O22363C74O22300C144O22376C145O22388",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22408",
    "type": "JS",
    "kind": "Unopt",
    "func": 417,
    "tm": 235084,
    "source": {
      "script": 143,
      "start": 22407,
      "end": 22789,
      "positions": "C0O22438C6O22440C11O22455C17O22457C25O22479C36O22461C41O22505C42O22513C48O22515C53O22524C59O22526C64O22535C69O22551C75O22557C83O22585C88O22600C93O22563C100O22610C105O22619C111O22625C116O22636C125O22641C127O22638C132O22678C137O22688C141O22680C149O22710C160O22692C165O22736C166O22737C178O22764C191O22770C198O22744C203O22788",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Unopt",
    "func": 418,
    "tm": 235167,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:19855",
    "type": "JS",
    "kind": "Unopt",
    "func": 419,
    "tm": 235209,
    "source": {
      "script": 143,
      "start": 19854,
      "end": 19982,
      "positions": "C0O19869C5O19885C17O19891C25O19906C33O19936C43O19952C49O19885C54O19969C55O19981",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27124",
    "type": "JS",
    "kind": "Unopt",
    "func": 420,
    "tm": 235209,
    "source": {
      "script": 143,
      "start": 27123,
      "end": 27223,
      "positions": "C0O27131C8O27161C13O27166C23O27185C31O27198C36O27203C44O27138C49O27222",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addIntoResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25188",
    "type": "JS",
    "kind": "Unopt",
    "func": 421,
    "tm": 235250,
    "source": {
      "script": 143,
      "start": 25187,
      "end": 25565,
      "positions": "C0O25259C2O25263C9O25287C14O25293C15O25300C23O25320C31O25335C33O25357C38O25357C45O25391C50O25391C56O25413C62O25434C69O25438C74O25446C75O25452C76O25462C81O25466C88O25477C94O25486C101O25517C111O25536C117O25551C121O25462C128O25564",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 412,
    "tm": 235375,
    "source": {
      "script": 143,
      "start": 18306,
      "end": 20797,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasOwnPropertyRustdoc /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1041",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 373,
    "tm": 235375,
    "source": {
      "script": 143,
      "start": 1040,
      "end": 1113,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:371:8",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 317,
    "tm": 235375,
    "source": {
      "script": 12,
      "start": 12775,
      "end": 12808,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:2300:6",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 308,
    "tm": 235417,
    "source": {
      "script": 86,
      "start": 63571,
      "end": 63599,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 415,
    "tm": 235417,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 413,
    "tm": 235542,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 414,
    "tm": 235542,
    "source": {
      "script": 143,
      "start": 23454,
      "end": 23789,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 416,
    "tm": 235584,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 418,
    "tm": 238125,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:19855",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 419,
    "tm": 238167,
    "source": {
      "script": 143,
      "start": 19854,
      "end": 19982,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 411,
    "tm": 238167,
    "source": {
      "script": 143,
      "start": 26945,
      "end": 27291,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27124",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 420,
    "tm": 238209,
    "source": {
      "script": 143,
      "start": 27123,
      "end": 27223,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addIntoResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25188",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 421,
    "tm": 238209,
    "source": {
      "script": 143,
      "start": 25187,
      "end": 25565,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "innerRunQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27314",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 409,
    "tm": 238542,
    "source": {
      "script": 143,
      "start": 27313,
      "end": 29902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22408",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 417,
    "tm": 238584,
    "source": {
      "script": 143,
      "start": 22407,
      "end": 22789,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "type": "JS",
    "kind": "Opt",
    "func": 414,
    "tm": 240917,
    "source": {
      "script": 143,
      "start": 23454,
      "end": 23789,
      "positions": "C0O23454C52O23477C76O23501C96O23541C148O23564C240O23788C284O23760C288O23697C292O23644C296O23600C300O23521C308O23454",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Opt",
    "func": 415,
    "tm": 241625,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "C0O21894C60O21941C92O21943C112O21957C144O21959C156O22145C224O22171C252O22177C260O21957C312O22310I0C424O22438I1C448O22440I1C456O22455I1C464O22440I1C468O22455I1C492O22457I1C524O22479I1C548O22461I1C612O22328I0C680O22300I0C692O22513I1C720O22515I1C740O22300I0C764O22240C808O22300I0C848O22240C856O22253C860O21964C928O22003C932O21993C940O21894C988O22145C1024O22328I0C1080O22300I0C1132O21964",
      "inlined": "F0O22188F1O22328I0",
      "fns": [
        416,
        417
      ]
    }
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Opt",
    "func": 418,
    "tm": 242125,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "type": "JS",
    "kind": "Opt",
    "func": 411,
    "tm": 245959,
    "source": {
      "script": 143,
      "start": 26945,
      "end": 27291,
      "positions": "C0O26945C56O26963C180O26945C216O26963C224O27026C312O27071C332O27105C396O27043C512O27233C520O27260C548O27233C612O27290C656O27232C664O27038C672O26945C720O26963C820O27026C856O27043",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:19855",
    "type": "JS",
    "kind": "Opt",
    "func": 419,
    "tm": 246292,
    "source": {
      "script": 143,
      "start": 19854,
      "end": 19982,
      "positions": "C0O19854C60O19869C80O19885C188O19891C208O19906C232O19936C256O19952C276O19885C336O19981C380O19854C464O19885C520O19952C576O19936C632O19891C688O19869",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Opt",
    "func": 416,
    "tm": 247584,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions": "C0O22276C60O22319C164O22310C296O22438I0C324O22440I0C332O22455I0C340O22440I0C344O22455I0C372O22457I0C404O22479I0C428O22319I1C520O22310I1C656O22438I2C672O22440I2C680O22455I2C688O22440I2C692O22455I2C716O22457I2C748O22479I2C772O22461I2C836O22328I1C904O22300I1C976O22328C1040O22300C1052O22513I0C1084O22515I0C1088O22513I2C1112O22515I2C1116O22300I1C1176O22300C1200O22388C1240O22300C1288O22276C1352O22328I1C1408O22300I1C1476O22328C1528O22300",
      "inlined": "F0O22328FO22461I0F0O22328I1",
      "fns": [
        417
      ]
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 248459,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions": "C0O20839C60O20907C92O20925C124O23477I0C144O23501I0C160O23541I0C212O23564I0C304O20942C348O23760I0C352O23697I0C356O23644I0C360O23600I0C364O20953C368O20955C384O20969C388O20971C404O21214C416O21219C428O21216C432O20984C496O21006C560O21020C584O21049C732O21067C928O21060C992O21064C1056O21098C1068O21100C1084O21118C1100O21120C1136O21153C1140O21050C1168O21171C1184O21173C1196O21050C1232O21851C1240O21050C1284O20839C1332O21219C1384O21067C1572O21050",
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27124",
    "type": "JS",
    "kind": "Opt",
    "func": 420,
    "tm": 248542,
    "source": {
      "script": 143,
      "start": 27123,
      "end": 27223,
      "positions": "C0O27123C60O27131C76O27161C104O27166C128O27185C156O27203C160O27138C216O27222C256O27123",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Opt",
    "func": 415,
    "tm": 249167,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "C0O21894C60O21941C92O21943C112O21957C144O21959C156O22145C224O22171C264O22177C272O21957C320O22310I0C456O22438I1C480O22440I1C488O22455I1C496O22440I1C500O22455I1C524O22457I1C556O22479I1C580O22461I1C644O22328I0C712O22300I0C724O22513I1C748O22515I1C768O22300I0C792O22240C836O22300I0C876O22240C884O22253C888O21964C956O22003C960O21993C968O21894C1016O22145C1060O22328I0C1116O22300I0C1168O21964",
      "inlined": "F0O22188F1O22328I0",
      "fns": [
        416,
        417
      ]
    }
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Opt",
    "func": 418,
    "tm": 251709,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Opt",
    "func": 412,
    "tm": 254667
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Opt",
    "func": 415,
    "tm": 259292,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "C0O21894C60O21941C92O21943C128O21957C160O21959C172O22145C260O22171C300O22177C308O21957C352O22310I0C488O22438I1C512O22440I1C520O22455I1C528O22440I1C532O22455I1C556O22457I1C588O22479I1C612O22461I1C676O22328I0C744O22300I0C756O22513I1C784O22515I1C804O22300I0C828O22240C872O22300I0C912O22240C920O22253C924O21964C992O22003C996O21993C1004O21894C1052O22145C1096O22328I0C1152O22300I0C1204O21964",
      "inlined": "F0O22188F1O22328I0",
      "fns": [
        416,
        417
      ]
    }
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "type": "JS",
    "kind": "Opt",
    "func": 414,
    "tm": 259459,
    "source": {
      "script": 143,
      "start": 23454,
      "end": 23789,
      "positions": "C0O23454C52O23477C76O23501C104O23541C128O23564C256O23788C300O23760C304O23697C308O23644C312O23600C324O23521C332O23454",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Opt",
    "func": 418,
    "tm": 260084,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 262417,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions": "C0O20839C60O20907C92O20925C124O23477I0C152O23501I0C176O23541I0C204O23564I0C332O20942C376O23760I0C380O23697I0C384O23644I0C388O23600I0C412O20953C428O20955C444O20969C460O20971C476O21214C500O21219C512O21216C516O20984C580O21006C644O21020C668O21049C820O21067C1016O21060C1080O21064C1144O21098C1156O21100C1172O21118C1188O21120C1224O21153C1228O21050C1256O21171C1272O21173C1284O21050C1320O21851C1328O21050C1372O20839C1420O21219C1472O21067C1660O21050",
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": "addIntoResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25188",
    "type": "JS",
    "kind": "Opt",
    "func": 421,
    "tm": 262625,
    "source": {
      "script": 143,
      "start": 25187,
      "end": 25565,
      "positions": "C0O25187C52O25263C144O25287C148O25300C160O25320C232O25357C296O25391C332O25466C388O25477C404O25486C420O25517C444O25536C452O25551C468O25462C516O25564C560O25187C608O25320",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Opt",
    "func": 412,
    "tm": 268500
  },
  {
    "name": "sortResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16576",
    "type": "JS",
    "kind": "Unopt",
    "func": 422,
    "tm": 277709,
    "source": {
      "script": 143,
      "start": 16575,
      "end": 18279,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Unopt",
    "func": 423,
    "tm": 278834
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 423,
    "tm": 278959,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "sortResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16576",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 422,
    "tm": 279000,
    "source": {
      "script": 143,
      "start": 16575,
      "end": 18279,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Opt",
    "func": 423,
    "tm": 281459,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions": "C0O16850C56O16877C92O16881C108O16902C140O16906C260O16881C344O16924C372O16881C380O16924C404O16938C408O16948C412O16964C416O16969C420O16977C436O16953C448O16977C472O16991C476O17000C480O17016C484O17030C500O17044C504O17075C512O17089C516O17099C520O17112C524O17122C540O17136C544O17145C548O17150C552O17167C556O17172C560O17187C604O17201C608O17216C616O17221C632O17252C640O17257C744O17221C812O17280C836O17221C844O17280C868O17294C872O17326C880O17308C888O17337C896O17351C900O17353C944O17380C1028O17394C1048O17403C1064O17419C1088O17543C1112O17664C1116O17687C1120O17691C1132O17702C1148O17668C1156O17702C1180O17716C1184O17718C1192O17751C1200O17765C1208O17767C1216O17779C1220O17795C1224O17804C1336O17818C1356O17827C1372O17836C1380O17569C1384O17625C1388O17445C1392O17499C1396O16850",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Opt",
    "func": 423,
    "tm": 284209,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Opt",
    "func": 423,
    "tm": 287042,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "transformResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16124",
    "type": "JS",
    "kind": "Unopt",
    "func": 424,
    "tm": 287500,
    "source": {
      "script": 143,
      "start": 16123,
      "end": 16555,
      "positions": "C0O16150C4O16150C10O16170C13O16193C30O16183C58O16183C61O16212C68O16214C73O16231C80O16250C84O16242C88O16270C92O16262C96O16285C101O16285C106O16307C112O16339C116O16323C120O16322C124O16361C129O16377C133O16372C136O16356C140O16382C148O16404C152O16399C158O16394C162O16421C167O16429C172O16421C179O16440C181O16460C186O16468C191O16460C196O16478C198O16490C201O16486C205O16498C210O16498C215O16515C224O16523C226O16521C231O16536C233O16173C297O16544C299O16554",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildHrefAndPath /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:31198",
    "type": "JS",
    "kind": "Unopt",
    "func": 425,
    "tm": 287584
  },
  {
    "name": "pathSplitter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:32637",
    "type": "JS",
    "kind": "Unopt",
    "func": 426,
    "tm": 287667,
    "source": {
      "script": 143,
      "start": 32636,
      "end": 32771,
      "positions": "C0O32653C3O32667C17O32667C23O32661C27O32707C35O32707C42O32738C49O32750C53O32756C57O32738C63O32759C64O32760C66O32770",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "buildHrefAndPath /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:31198",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 425,
    "tm": 287750,
    "source": {
      "script": 143,
      "start": 31197,
      "end": 32615,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createQueryResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:15776",
    "type": "JS",
    "kind": "Unopt",
    "func": 427,
    "tm": 288000,
    "source": {
      "script": 143,
      "start": 15775,
      "end": 15944,
      "positions": "C0O15837C7O15854C13O15881C19O15907C25O15930C31O15943",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "sortResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16576",
    "type": "JS",
    "kind": "Opt",
    "func": 422,
    "tm": 288875,
    "source": {
      "script": 143,
      "start": 16575,
      "end": 18279,
      "positions": "C0O16575C68O18011C240O18044C328O18001C384O18242C392O18249C396O18001C436O18085C440O16575C488O18011C540O18044C576O18001",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleAliases /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:24045",
    "type": "JS",
    "kind": "Unopt",
    "func": 428,
    "tm": 288959,
    "source": {
      "script": 143,
      "start": 24044,
      "end": 25164,
      "positions": "C0O24044C13O24099C17O24105C23O24105C28O24133C31O24155C34O24158C38O24182C46O24193C52O24193C65O24220C71O24220C78O24237C84O24238C91O24275C97O24283C103O24283C110O24300C116O24301C123O24336C144O24327C175O24327C178O24359C194O24384C200O24395C205O24364C211O24359C216O24317C290O24449C319O24445C350O24445C370O24422C411O24428C523O24479C529O24479C536O24509C538O24514C550O24589C556O24589C562O24624C583O24615C614O24615C617O24646C633O24671C639O24682C644O24651C650O24646C655O24605C732O24412C808O24710C813O24814C819O24814C824O24837C830O24837C835O24867C840O25115C846O25115C851O25146C857O25146C863O25163",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "type": "JS",
    "kind": "Opt",
    "func": 414,
    "tm": 290084,
    "source": {
      "script": 143,
      "start": 23454,
      "end": 23789,
      "positions": "C0O23454C60O23468C72O23479C88O23477C116O23501C148O23532C172O23541C192O23548C208O23564C340O23788C384O23760C388O23697C392O23644C396O23600C408O23521C416O23454C464O23532C516O23479",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "type": "JS",
    "kind": "Opt",
    "func": 411,
    "tm": 290875,
    "source": {
      "script": 143,
      "start": 26945,
      "end": 27291,
      "positions": "C0O26945C60O26963C192O26945C228O26963C252O26998C256O27026C344O27039C348O27071C372O27090C400O27105C464O27043C612O27233C628O27260C656O27233C760O27290C804O27232C812O27038C820O26945C868O26963C968O27026C1004O27043",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Opt",
    "func": 415,
    "tm": 291459,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions": "C0O21894C64O21941C96O21943C132O21957C164O21959C176O22145C264O22171C304O22177C312O21957C316O22181C324O22188C432O22310I0C564O22325I0C568O22328I0C616O22438I1C648O22440I1C656O22455I1C664O22440I1C668O22455I1C692O22457I1C732O22479I1C756O22461I1C860O22328I0C928O22300I0C940O22513I1C968O22515I1C988O22300I0C1012O22240C1056O22300I0C1096O22240C1104O22253C1108O21964C1176O22003C1180O21993C1188O21894C1236O22145C1280O22328I0C1336O22300I0C1388O21964",
      "inlined": "F0O22188F1O22328I0",
      "fns": [
        416,
        417
      ]
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 294042,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions": "C0O20839C64O20876C72O20907C104O20925C136O20880C184O23468I0C192O23479I0C224O23477I0C248O23501I0C276O23532I0C300O23541I0C324O23548I0C340O23564I0C472O20942C516O23760I0C520O23697I0C524O23644I0C528O23600I0C556O20953C580O20955C596O20969C612O20971C628O21214C652O21219C660O21216C664O20984C728O21006C792O21020C816O21049C964O21067C1160O21060C1224O21064C1288O21098C1300O21100C1316O21118C1332O21120C1368O21153C1372O21050C1400O21171C1416O21173C1428O21050C1464O21851C1472O21050C1516O20839C1564O23532I0C1616O21219C1668O21067C1856O21050C2000O23479I0",
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": "addIntoResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25188",
    "type": "JS",
    "kind": "Opt",
    "func": 421,
    "tm": 296834,
    "source": {
      "script": 143,
      "start": 25187,
      "end": 25565,
      "positions": "C0O25187C60O25263C152O25287C156O25300C176O25320C268O25357C332O25391C368O25466C424O25477C440O25486C464O25517C508O25536C516O25551C532O25462C580O25564C624O25187C672O25320",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Opt",
    "func": 412,
    "tm": 305209
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Opt",
    "func": 416,
    "tm": 309209,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions": "C0O22276C64O22319C164O22310C296O22325C300O22328C348O22438I0C384O22440I0C392O22455I0C400O22440I0C404O22455I0C432O22457I0C472O22479I0C496O22461I0C544O22319I1C648O22310I1C784O22325I1C788O22328I1C832O22438I2C856O22440I2C864O22455I2C872O22440I2C876O22455I2C900O22457I2C940O22479I2C964O22461I2C1068O22328I1C1136O22300I1C1208O22328C1272O22300C1284O22513I0C1316O22515I0C1320O22513I2C1348O22515I2C1352O22300I1C1412O22300C1436O22388C1476O22300C1524O22276C1588O22328I1C1644O22300I1C1712O22328C1764O22300",
      "inlined": "F0O22328FO22461I0F0O22328I1",
      "fns": [
        417
      ]
    }
  },
  {
    "name": "innerRunQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27314",
    "type": "JS",
    "kind": "Opt",
    "func": 409,
    "tm": 313167,
    "source": {
      "script": 143,
      "start": 27313,
      "end": 29902,
      "positions": "C0O27313C72O29837C144O29856C160O29867C176O29878C232O29884C248O29856C332O26963I0C336O26945I0C368O26963I0C452O27026I0C544O27039I0C548O27071I0C572O27090I0C600O27105I0C664O27043I0C812O27233I0C828O27260I0C856O27233I0C904O25357I1C1132O25466I1C1180O25477I1C1192O25486I1C1196O25517I1C1240O25536I1C1248O25462I1C1296O29853C1312O29796C1324O29901C1356O26998I0C1360O25391I1C1364O27313C1476O26963I0C1540O27026I0C1576O27043I0C1628O25357I1C1692O29796C1732O29884C1780O29867",
      "inlined": "F0O29856F1O27233I0",
      "fns": [
        411,
        421
      ]
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27124",
    "type": "JS",
    "kind": "Opt",
    "func": 420,
    "tm": 314000,
    "source": {
      "script": 143,
      "start": 27123,
      "end": 27223,
      "positions": "C0O27123C60O27131C76O27161C128O27166C152O27185C180O27203C184O27138C272O27222C312O27123",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Opt",
    "func": 423,
    "tm": 319167,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "type": "JS",
    "kind": "Opt",
    "func": 423,
    "tm": 322875,
    "source": {
      "script": 143,
      "start": 16850,
      "end": 17837,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "onwrite node:internal/streams/writable:599:17",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 389,
    "tm": 323042,
    "source": {
      "script": 103,
      "start": 19140,
      "end": 21717,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "pathSplitter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:32637",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 426,
    "tm": 323042,
    "source": {
      "script": 143,
      "start": 32636,
      "end": 32771,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "transformResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16124",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 424,
    "tm": 323084,
    "source": {
      "script": 143,
      "start": 16123,
      "end": 16555,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_unrefTimer node:net:505:52",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 384,
    "tm": 323125,
    "source": {
      "script": 86,
      "start": 13871,
      "end": 13981,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3504",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 396,
    "tm": 323125,
    "source": {
      "script": 143,
      "start": 3503,
      "end": 3539,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEndCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3627",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 395,
    "tm": 323125,
    "source": {
      "script": 143,
      "start": 3626,
      "end": 3659,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 318,
    "tm": 323167,
    "source": {
      "script": 123,
      "start": 392,
      "end": 404,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteWrap node:internal/stream_base_commons:109:25",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 386,
    "tm": 323167,
    "source": {
      "script": 107,
      "start": 2722,
      "end": 2936,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:532:23",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 381,
    "tm": 323209,
    "source": {
      "script": 103,
      "start": 17136,
      "end": 18296,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterWriteDispatched node:internal/stream_base_commons:155:30",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 388,
    "tm": 323250,
    "source": {
      "script": 107,
      "start": 3815,
      "end": 4089,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "writeGeneric node:internal/stream_base_commons:147:22",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 385,
    "tm": 323250,
    "source": {
      "script": 107,
      "start": 3600,
      "end": 3784,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._writeGeneric node:net:921:42",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 383,
    "tm": 323292,
    "source": {
      "script": 86,
      "start": 23960,
      "end": 24864,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket._write node:net:963:35",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 382,
    "tm": 323292,
    "source": {
      "script": 86,
      "start": 25001,
      "end": 25074,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getIdentEndPosition /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:7405",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 399,
    "tm": 323375,
    "source": {
      "script": 143,
      "start": 7404,
      "end": 8907,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_write node:internal/streams/writable:443:16",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 380,
    "tm": 323417,
    "source": {
      "script": 103,
      "start": 14539,
      "end": 16045,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable.write node:internal/streams/writable:493:36",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 379,
    "tm": 323417,
    "source": {
      "script": 103,
      "start": 16082,
      "end": 16160,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isStopCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3684",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 394,
    "tm": 323417,
    "source": {
      "script": 143,
      "start": 3683,
      "end": 3712,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "skipWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5410",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 398,
    "tm": 323459,
    "source": {
      "script": 143,
      "start": 5409,
      "end": 5569,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Opt",
    "func": 412,
    "tm": 329042
  },
  {
    "name": "innerRunQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27314",
    "type": "JS",
    "kind": "Opt",
    "func": 409,
    "tm": 331125
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 334459,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": "checkType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22408",
    "type": "JS",
    "kind": "Opt",
    "func": 417,
    "tm": 338375,
    "source": {
      "script": 143,
      "start": 22407,
      "end": 22789,
      "positions": "C0O22407C64O22438C96O22440C104O22513C112O22440C116O22513C144O22515C148O22455C176O22457C212O22479C236O22461C284O22319I0C392O22310I0C524O22325I0C528O22328I0C576O22438I1C600O22440I1C608O22455I1C616O22440I1C620O22455I1C644O22457I1C684O22479I1C708O22461I1C812O22328I0C880O22300I0C892O22513I1C924O22515I1C948O22300I0C972O22505C1012O22300I0C1052O22505C1068O22407C1124O22328I0C1180O22300I0",
      "inlined": "F0O22461FO22328I0",
      "fns": [
        416
      ]
    }
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "type": "JS",
    "kind": "Opt",
    "func": 411,
    "tm": 348542,
    "source": {
      "script": 143,
      "start": 26945,
      "end": 27291,
      "positions": "C0O26945C60O26963C192O26945C228O26963C252O26998C256O27026C368O27039C372O27071C396O27090C424O27105C488O27043C636O27233C652O27260C704O27233C808O27290C852O27232C860O27038C868O26945C916O26963C1016O27026C1052O27043",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleAliases /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:24045",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 428,
    "tm": 350834,
    "source": {
      "script": 143,
      "start": 24044,
      "end": 25164,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isIdentCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4873",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 400,
    "tm": 350875,
    "source": {
      "script": 143,
      "start": 4872,
      "end": 4946,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createQueryElement /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5597",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 403,
    "tm": 351000,
    "source": {
      "script": 143,
      "start": 5596,
      "end": 7376,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleWriteReq node:internal/stream_base_commons:45:24",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 387,
    "tm": 351042,
    "source": {
      "script": 107,
      "start": 1177,
      "end": 2009,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseInput /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:12226",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 393,
    "tm": 351125,
    "source": {
      "script": 143,
      "start": 12225,
      "end": 14167,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "editDistance /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:2991",
    "type": "JS",
    "kind": "Unopt",
    "func": 429,
    "tm": 351167,
    "source": {
      "script": 143,
      "start": 2990,
      "end": 3048,
      "positions": "C0O3002C5O3027C19O3027C24O3047",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "calculate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1952",
    "type": "JS",
    "kind": "Unopt",
    "func": 430,
    "tm": 351250
  },
  {
    "name": "calculate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1952",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 430,
    "tm": 351375,
    "source": {
      "script": 143,
      "start": 1951,
      "end": 2966,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "convertNameToId /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27603",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 410,
    "tm": 351500,
    "source": {
      "script": 143,
      "start": 27602,
      "end": 29056,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "editDistance /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:2991",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 429,
    "tm": 351500,
    "source": {
      "script": 143,
      "start": 2990,
      "end": 3048,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Unopt",
    "func": 431,
    "tm": 352500,
    "source": {
      "script": 143,
      "start": 25589,
      "end": 26926,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "sortResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16576",
    "type": "JS",
    "kind": "Opt",
    "func": 422,
    "tm": 357042
  },
  {
    "name": "editDistance /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:2991",
    "type": "JS",
    "kind": "Opt",
    "func": 429,
    "tm": 357125,
    "source": {
      "script": 143,
      "start": 2990,
      "end": 3048,
      "positions": "C0O2990C52O3027C108O3047C148O2990",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Opt",
    "func": 416,
    "tm": 357542,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions
      "inlined": "F0O22328FO22461I0",
      "fns": [
        417
      ]
    }
  },
  {
    "name": "checkType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22408",
    "type": "JS",
    "kind": "Opt",
    "func": 417,
    "tm": 358125
  },
  {
    "name": "calculate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1952",
    "type": "JS",
    "kind": "Opt",
    "func": 430,
    "tm": 358750
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Sparkplug",
    "func": 431,
    "tm": 359250,
    "source": {
      "script": 143,
      "start": 25589,
      "end": 26926,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "type": "JS",
    "kind": "Opt",
    "func": 416,
    "tm": 362667,
    "source": {
      "script": 143,
      "start": 22276,
      "end": 22389,
      "positions
      "inlined": "F0O22328",
      "fns": [
        417
      ]
    }
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Opt",
    "func": 431,
    "tm": 364834
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "type": "JS",
    "kind": "Opt",
    "func": 415,
    "tm": 365250,
    "source": {
      "script": 143,
      "start": 21894,
      "end": 22254,
      "positions
      "inlined": "F0O22188F0O22065",
      "fns": [
        416
      ]
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 366042,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions": "C0O20839C64O20876C72O20907C104O20925C136O20880C184O23468I0C192O23479I0C224O23477I0C248O23501I0C276O23532I0C300O23541I0C324O23548I0C340O23564I0C472O20942C516O23760I0C520O23697I0C524O23644I0C528O23600I0C544O20953C568O20955C612O20969C636O20971C652O21214C680O21219C696O21216C720O21325C740O21327C768O21354C784O21388C788O21377C796O21253C820O21258C828O21255C832O20984C860O20995C880O20984C920O21006C984O21020C1008O21049C1152O21067C1352O21060C1416O21064C1480O21098C1492O21100C1516O21118C1532O21120C1568O21153C1572O21171C1588O21173C1612O21050C1664O21851C1672O21050C1716O20839C1764O23532I0C1816O21258C1864O21219C1916O21067C2104O21050C2220O23479I0",
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Opt",
    "func": 431,
    "tm": 373334
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "type": "JS",
    "kind": "Opt",
    "func": 412,
    "tm": 377042
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Opt",
    "func": 431,
    "tm": 382917
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "type": "JS",
    "kind": "Opt",
    "func": 418,
    "tm": 386042,
    "source": {
      "script": 143,
      "start": 18635,
      "end": 19491,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "type": "JS",
    "kind": "Opt",
    "func": 413,
    "tm": 387500,
    "source": {
      "script": 143,
      "start": 20839,
      "end": 21852,
      "positions
      "inlined": "F0O20880",
      "fns": [
        414
      ]
    }
  },
  {
    "name": "validateResult /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:30322",
    "type": "JS",
    "kind": "Unopt",
    "func": 432,
    "tm": 388500,
    "source": {
      "script": 143,
      "start": 30321,
      "end": 30643,
      "positions": "C0O30361C4O30377C10O30385C11O30396C12O30414C29O30407C57O30407C60O30430C65O30430C73O30442C78O30452C83O30452C91O30464C100O30497C106O30522C111O30527C116O30527C121O30540C126O30541C134O30553C153O30559C161O30597C166O30617C173O30397C243O30631C244O30642",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "exit node:internal/process/per_thread:181:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 433,
    "tm": 388625,
    "source": {
      "script": 27,
      "start": 4812,
      "end": 5938,
      "positions": "C0O4812C2O4866C10O4866C15O4839C20O4923C25O4931C33O4931C39O4982C45O4989C50O5004C57O5021C61O5040C66O5053C72O5071C78O5088C82O5102C87O5110C100O5131C110O5143C113O5110C119O5355C124O5363C134O5382C144O5394C147O5363C152O5928C157O5928C161O5937",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/handle_process_exit:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 434,
    "tm": 388709,
    "source": {
      "script": 144,
      "start": 0,
      "end": 432,
      "positions": "C0O0C4O432",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/handle_process_exit:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 435,
    "tm": 388709,
    "source": {
      "script": 144,
      "start": 0,
      "end": 432,
      "positions": "C0O0C17O67C20O67C25O34C30O36C36O389C43O410C49O404C54O431",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "removeListener node:events:677:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 436,
    "tm": 388834,
    "source": {
      "script": 23,
      "start": 19594,
      "end": 20866,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "type": "JS",
    "kind": "Opt",
    "func": 431,
    "tm": 391209
  },
  {
    "name": " node:internal/validators:93:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 437,
    "tm": 391292,
    "source": {
      "script": 15,
      "start": 2186,
      "end": 2567,
      "positions": "C12O2206C25O2236C32O2269C38O2306C54O2312C59O2306C60O2365C65O2370C71O2400C87O2406C92O2400C93O2459C95O2469C102O2484C107O2497C117O2536C130O2549C143O2503C148O2497C150O2566",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:100:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 438,
    "tm": 391292,
    "source": {
      "script": 12,
      "start": 3833,
      "end": 3880,
      "positions": "C0O3844C9O3858C11O3857C17O3868C20O3874",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:113:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 439,
    "tm": 391292,
    "source": {
      "script": 12,
      "start": 4089,
      "end": 4122,
      "positions": "C0O4100C4O4116",
      "inlined": "",
      "fns": []
    }
  }
],
  "functions": [
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      30018
    ]
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      30019
    ]
  },
  {
    "name": "prepareMainThreadExecution node:internal/process/pre_execution:54:36",
    "codes": [
      30020
    ]
  },
  {
    "name": "prepareExecution node:internal/process/pre_execution:70:26",
    "codes": [
      30021
    ]
  },
  {
    "name": "refreshRuntimeOptions node:internal/process/pre_execution:177:31",
    "codes": [
      30022
    ]
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "codes": [
      30023
    ]
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1083:33",
    "codes": [
      30024
    ]
  },
  {
    "name": "patchProcessObject node:internal/process/pre_execution:188:28",
    "codes": [
      30025
    ]
  },
  {
    "name": "set node:internal/bootstrap/node:116:8",
    "codes": [
      30026
    ]
  },
  {
    "name": "resolve node:path:1095:10",
    "codes": [
      30027,
      30224
    ]
  },
  {
    "name": " node:path:1086:10",
    "codes": [
      30028
    ]
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:136:20",
    "codes": [
      30029
    ]
  },
  {
    "name": "normalizeString node:path:66:25",
    "codes": [
      30030,
      30032,
      30417
    ]
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "codes": [
      30031,
      30036,
      30414
    ]
  },
  {
    "name": "requireBuiltin node:internal/bootstrap/realm:414:24",
    "codes": [
      30033
    ]
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/realm:377:27",
    "codes": [
      30034
    ]
  },
  {
    "name": "internalBinding node:internal/bootstrap/realm:185:45",
    "codes": [
      30035
    ]
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:690:33",
    "codes": [
      30037
    ]
  },
  {
    "name": "value node:internal/console/constructor:205:20",
    "codes": [
      30038
    ]
  },
  {
    "name": "value node:internal/console/constructor:235:20",
    "codes": [
      30039
    ]
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:357:33",
    "codes": [
      30040
    ]
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/process/pre_execution:248:33",
    "codes": [
      30041,
      30086
    ]
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "codes": [
      30042,
      30085
    ]
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "codes": [
      30043,
      30084
    ]
  },
  {
    "name": "setupTraceCategoryState node:internal/process/pre_execution:460:33",
    "codes": [
      30044
    ]
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:410:34",
    "codes": [
      30045
    ]
  },
  {
    "name": "setupInspectorHooks node:internal/process/pre_execution:466:29",
    "codes": [
      30046
    ]
  },
  {
    "name": "setupWarningHandler node:internal/process/pre_execution:261:29",
    "codes": [
      30047
    ]
  },
  {
    "name": "setupUndici node:internal/process/pre_execution:283:21",
    "codes": [
      30048
    ]
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "codes": [
      30049
    ]
  },
  {
    "name": "lazyInterface node:internal/process/pre_execution:298:25",
    "codes": [
      30050
    ]
  },
  {
    "name": "setupWebCrypto node:internal/process/pre_execution:341:24",
    "codes": [
      30051
    ]
  },
  {
    "name": "setupCustomEvent node:internal/process/pre_execution:389:26",
    "codes": [
      30052
    ]
  },
  {
    "name": "setupCodeCoverage node:internal/process/pre_execution:374:27",
    "codes": [
      30053
    ]
  },
  {
    "name": "setupDebugEnv node:internal/process/pre_execution:420:23",
    "codes": [
      30054
    ]
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:21:28",
    "codes": [
      30055
    ]
  },
  {
    "name": "initializeReport node:internal/process/pre_execution:408:26",
    "codes": [
      30056
    ]
  },
  {
    "name": "initializePermission node:internal/process/pre_execution:573:30",
    "codes": [
      30057
    ]
  },
  {
    "name": " node:internal/process/pre_execution:626:53",
    "codes": [
      30058
    ]
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/process/pre_execution:707:38",
    "codes": [
      30059
    ]
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30",
    "codes": [
      30060
    ]
  },
  {
    "name": "validateBoolean node:internal/validators:216:25",
    "codes": [
      30061
    ]
  },
  {
    "name": "initializeDeprecations node:internal/process/pre_execution:484:32",
    "codes": [
      30062
    ]
  },
  {
    "name": "initializeDns node:internal/dns/utils:202:23",
    "codes": [
      30063
    ]
  },
  {
    "name": "setupSymbolDisposePolyfill node:internal/process/pre_execution:138:36",
    "codes": [
      30064
    ]
  },
  {
    "name": "assert node:internal/assert:11:16",
    "codes": [
      30065,
      30431
    ]
  },
  {
    "name": "readPolicyFromDisk node:internal/process/pre_execution:635:28",
    "codes": [
      30066
    ]
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/process/pre_execution:398:40",
    "codes": [
      30067
    ]
  },
  {
    "name": "initializeReportSignalHandlers node:internal/process/pre_execution:428:40",
    "codes": [
      30068
    ]
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:435:46",
    "codes": [
      30069
    ]
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/process/pre_execution:545:37",
    "codes": [
      30070
    ]
  },
  {
    "name": "initializeClusterIPC node:internal/process/pre_execution:564:30",
    "codes": [
      30071
    ]
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33",
    "codes": [
      30072
    ]
  },
  {
    "name": "setupUserModules node:internal/process/pre_execution:163:26",
    "codes": [
      30073
    ]
  },
  {
    "name": "initializeCJSLoader node:internal/process/pre_execution:685:29",
    "codes": [
      30074
    ]
  },
  {
    "name": "initializeCJS node:internal/modules/cjs/loader:383:23",
    "codes": [
      30075
    ]
  },
  {
    "name": "getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:313:50",
    "codes": [
      30076
    ]
  },
  {
    "name": "desc.value node:internal/per_context/primordials:388:32",
    "codes": [
      30077
    ]
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:333:16",
    "codes": [
      30078
    ]
  },
  {
    "name": "next node:internal/per_context/primordials:336:9",
    "codes": [
      30079,
      30089
    ]
  },
  {
    "name": "initializeCjsConditions node:internal/modules/helpers:65:33",
    "codes": [
      30080
    ]
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1530:29",
    "codes": [
      30081
    ]
  },
  {
    "name": "validateString node:internal/validators:160:24",
    "codes": [
      30082
    ]
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:414:16",
    "codes": [
      30083
    ]
  },
  {
    "name": "exposeLazyInterfaces node:internal/util:686:30",
    "codes": [
      30087
    ]
  },
  {
    "name": "defineLazyProperties node:internal/util:603:30",
    "codes": [
      30088
    ]
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:427:16",
    "codes": [
      30090
    ]
  },
  {
    "name": "initializeESMLoader node:internal/process/pre_execution:690:29",
    "codes": [
      30091
    ]
  },
  {
    "name": "initializeESM node:internal/modules/esm/utils:192:23",
    "codes": [
      30092
    ]
  },
  {
    "name": "initializeDefaultConditions node:internal/modules/esm/utils:60:37",
    "codes": [
      30093
    ]
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:72:32",
    "codes": [
      30094
    ]
  },
  {
    "name": "loadPreloadModules node:internal/process/pre_execution:722:28",
    "codes": [
      30095
    ]
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1564:34",
    "codes": [
      30096
    ]
  },
  {
    "name": "Module node:internal/modules/cjs/loader:252:16",
    "codes": [
      30097
    ]
  },
  {
    "name": "dirname node:path:1278:10",
    "codes": [
      30098,
      30227
    ]
  },
  {
    "name": "setOwnProperty node:internal/util:726:24",
    "codes": [
      30099,
      30376
    ]
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:217:24",
    "codes": [
      30100
    ]
  },
  {
    "name": " node:internal/util:797:18",
    "codes": [
      30101,
      30358
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:117:3",
    "codes": [
      30102
    ]
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:793:37",
    "codes": [
      30103,
      30225
    ]
  },
  {
    "name": "internalRequire node:internal/modules/cjs/loader:167:25",
    "codes": [
      30104
    ]
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:950:24",
    "codes": [
      30105
    ]
  },
  {
    "name": "logger node:internal/util/debuglog:100:18",
    "codes": [
      30106
    ]
  },
  {
    "name": " node:internal/per_context/primordials:339:21",
    "codes": [
      30107
    ]
  },
  {
    "name": "debug node:internal/util/debuglog:81:15",
    "codes": [
      30108
    ]
  },
  {
    "name": "init node:internal/util/debuglog:77:16",
    "codes": [
      30109
    ]
  },
  {
    "name": "testEnabled node:internal/util/debuglog:31:19",
    "codes": [
      30110
    ]
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:54:22",
    "codes": [
      30111
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:357:66",
    "codes": [
      30112
    ]
  },
  {
    "name": "noop node:internal/util/debuglog:46:14",
    "codes": [
      30113,
      30360
    ]
  },
  {
    "name": "reportModuleToWatchMode node:internal/modules/cjs/loader:228:33",
    "codes": [
      30114,
      30365
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:119:45",
    "codes": [
      30115
    ]
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:1058:35",
    "codes": [
      30116
    ]
  },
  {
    "name": "normalizeRequirableId node:internal/bootstrap/realm:292:31",
    "codes": [
      30117,
      30364
    ]
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/realm:288:36",
    "codes": [
      30118,
      30361
    ]
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:839:38",
    "codes": [
      30119
    ]
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:520:27",
    "codes": [
      30120
    ]
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:539:17",
    "codes": [
      30121
    ]
  },
  {
    "name": "readPackageScope node:internal/modules/package_json_reader:132:26",
    "codes": [
      30122,
      30359
    ]
  },
  {
    "name": "isEnabled node:internal/process/permission:16:12",
    "codes": [
      30123,
      30374
    ]
  },
  {
    "name": "readPackage node:internal/modules/package_json_reader:123:21",
    "codes": [
      30124,
      30304
    ]
  },
  {
    "name": "read node:internal/modules/package_json_reader:47:14",
    "codes": [
      30125,
      30375
    ]
  },
  {
    "name": "toNamespacedPath node:path:1269:19",
    "codes": [
      30126,
      30226
    ]
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:610:28",
    "codes": [
      30127
    ]
  },
  {
    "name": "isAbsolute node:path:1159:13",
    "codes": [
      30128
    ]
  },
  {
    "name": "stat node:internal/modules/cjs/loader:185:14",
    "codes": [
      30129,
      30430
    ]
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:487:23",
    "codes": [
      30130
    ]
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:472:17",
    "codes": [
      30131
    ]
  },
  {
    "name": "toRealPath node:internal/modules/helpers:54:20",
    "codes": [
      30132
    ]
  },
  {
    "name": "realpathSync node:fs:2613:22",
    "codes": [
      30133,
      30297
    ]
  },
  {
    "name": "getOptions node:internal/fs/utils:323:20",
    "codes": [
      30134,
      30422
    ]
  },
  {
    "name": "assertEncoding node:internal/fs/utils:158:24",
    "codes": [
      30135,
      30373
    ]
  },
  {
    "name": "toPathIfFileURL node:internal/url:1487:25",
    "codes": [
      30136,
      30421
    ]
  },
  {
    "name": "isURL node:internal/url:761:15",
    "codes": [
      30137,
      30423
    ]
  },
  {
    "name": " node:internal/fs/utils:697:38",
    "codes": [
      30138,
      30425
    ]
  },
  {
    "name": " node:internal/fs/utils:366:35",
    "codes": [
      30139,
      30428
    ]
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "codes": [
      30140,
      30424
    ]
  },
  {
    "name": "splitRoot node:fs:2569:33",
    "codes": [
      30141,
      30427
    ]
  },
  {
    "name": "nextPart node:fs:2602:31",
    "codes": [
      30142,
      30305
    ]
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:349:32",
    "codes": [
      30143,
      30357
    ]
  },
  {
    "name": "isFileType node:fs:206:20",
    "codes": [
      30144,
      30306
    ]
  },
  {
    "name": "encodeRealpathResult node:fs:2578:30",
    "codes": [
      30145
    ]
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:1194:33",
    "codes": [
      30146
    ]
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:502:40",
    "codes": [
      30147
    ]
  },
  {
    "name": "basename node:path:1309:11",
    "codes": [
      30148,
      30356
    ]
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1389:37",
    "codes": [
      30149
    ]
  },
  {
    "name": "readFileSync node:fs:446:22",
    "codes": [
      30150
    ]
  },
  {
    "name": "isEncoding node:buffer:569:40",
    "codes": [
      30151
    ]
  },
  {
    "name": "normalizeEncoding node:internal/util:212:27",
    "codes": [
      30152
    ]
  },
  {
    "name": "isInt32 node:internal/validators:43:17",
    "codes": [
      30153
    ]
  },
  {
    "name": " node:internal/fs/utils:727:42",
    "codes": [
      30154
    ]
  },
  {
    "name": "possiblyTransformPath node:internal/fs/utils:715:31",
    "codes": [
      30155
    ]
  },
  {
    "name": "stringToFlags node:internal/fs/utils:584:23",
    "codes": [
      30156
    ]
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1330:37",
    "codes": [
      30157
    ]
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1257:18",
    "codes": [
      30158
    ]
  },
  {
    "name": "internalCompileFunction node:internal/vm:73:33",
    "codes": [
      30159
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      30160
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      30161
    ]
  },
  {
    "name": "registerImportModuleDynamically node:internal/vm:63:41",
    "codes": [
      30162
    ]
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:428:37",
    "codes": [
      30163
    ]
  },
  {
    "name": "registerModule node:internal/modules/esm/utils:135:24",
    "codes": [
      30164
    ]
  },
  {
    "name": "makeRequireFunction node:internal/modules/helpers:127:29",
    "codes": [
      30165
    ]
  },
  {
    "name": "lazyModule node:internal/modules/helpers:110:20",
    "codes": [
      30166
    ]
  },
  {
    "name": "require node:internal/modules/helpers:174:31",
    "codes": [
      30167
    ]
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1227:36",
    "codes": [
      30168
    ]
  },
  {
    "name": "loadBuiltinModule node:internal/modules/helpers:93:27",
    "codes": [
      30169
    ]
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/realm:284:30",
    "codes": [
      30170,
      30426
    ]
  },
  {
    "name": " node:internal/modules/helpers:37:66",
    "codes": [
      30171
    ]
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/realm:322:25",
    "codes": [
      30172
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      30173
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      30174
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      30175
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      30176
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      30177
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      30178
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      30179
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      30180
    ]
  },
  {
    "name": "Control node:internal/child_process:536:36",
    "codes": [
      30181
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      30182
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      30183
    ]
  },
  {
    "name": " node:stream:1:1",
    "codes": [
      30184
    ]
  },
  {
    "name": " node:stream:1:1",
    "codes": [
      30185
    ]
  },
  {
    "name": " node:internal/streams/operators:1:1",
    "codes": [
      30186
    ]
  },
  {
    "name": " node:internal/streams/operators:1:1",
    "codes": [
      30187
    ]
  },
  {
    "name": " node:internal/abort_controller:1:1",
    "codes": [
      30188
    ]
  },
  {
    "name": " node:internal/abort_controller:1:1",
    "codes": [
      30189
    ]
  },
  {
    "name": "AbortController node:internal/abort_controller:381:23",
    "codes": [
      30190
    ]
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:441:16",
    "codes": [
      30191
    ]
  },
  {
    "name": "defineEventHandler node:internal/event_target:1100:28",
    "codes": [
      30192
    ]
  },
  {
    "name": " node:internal/streams/end-of-stream:1:1",
    "codes": [
      30193
    ]
  },
  {
    "name": " node:internal/streams/end-of-stream:1:1",
    "codes": [
      30194
    ]
  },
  {
    "name": " node:internal/streams/utils:1:1",
    "codes": [
      30195
    ]
  },
  {
    "name": " node:internal/streams/utils:1:1",
    "codes": [
      30196
    ]
  },
  {
    "name": " node:internal/streams/compose:1:1",
    "codes": [
      30197
    ]
  },
  {
    "name": " node:internal/streams/compose:1:1",
    "codes": [
      30198
    ]
  },
  {
    "name": " node:internal/streams/pipeline:1:1",
    "codes": [
      30199
    ]
  },
  {
    "name": " node:internal/streams/pipeline:1:1",
    "codes": [
      30200
    ]
  },
  {
    "name": " node:internal/streams/destroy:1:1",
    "codes": [
      30201
    ]
  },
  {
    "name": " node:internal/streams/destroy:1:1",
    "codes": [
      30202
    ]
  },
  {
    "name": " node:internal/streams/duplex:1:1",
    "codes": [
      30203
    ]
  },
  {
    "name": " node:internal/streams/duplex:1:1",
    "codes": [
      30204
    ]
  },
  {
    "name": " node:internal/streams/readable:1:1",
    "codes": [
      30205
    ]
  },
  {
    "name": " node:internal/streams/readable:1:1",
    "codes": [
      30206
    ]
  },
  {
    "name": " node:internal/streams/legacy:1:1",
    "codes": [
      30207
    ]
  },
  {
    "name": " node:internal/streams/legacy:1:1",
    "codes": [
      30208
    ]
  },
  {
    "name": " node:internal/streams/add-abort-signal:1:1",
    "codes": [
      30209
    ]
  },
  {
    "name": " node:internal/streams/add-abort-signal:1:1",
    "codes": [
      30210
    ]
  },
  {
    "name": " node:internal/streams/buffer_list:1:1",
    "codes": [
      30211
    ]
  },
  {
    "name": " node:internal/streams/buffer_list:1:1",
    "codes": [
      30212
    ]
  },
  {
    "name": " node:internal/streams/state:1:1",
    "codes": [
      30213
    ]
  },
  {
    "name": " node:internal/streams/state:1:1",
    "codes": [
      30214
    ]
  },
  {
    "name": " node:string_decoder:1:1",
    "codes": [
      30215
    ]
  },
  {
    "name": " node:string_decoder:1:1",
    "codes": [
      30216
    ]
  },
  {
    "name": " node:internal/streams/from:1:1",
    "codes": [
      30217
    ]
  },
  {
    "name": " node:internal/streams/from:1:1",
    "codes": [
      30218
    ]
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/readable:120:30",
    "codes": [
      30219,
      30228
    ]
  },
  {
    "name": " node:internal/streams/writable:1:1",
    "codes": [
      30220
    ]
  },
  {
    "name": " node:internal/streams/writable:1:1",
    "codes": [
      30221
    ]
  },
  {
    "name": "makeBitMapDescriptor node:internal/streams/writable:116:30",
    "codes": [
      30222,
      30223
    ]
  },
  {
    "name": " node:stream/promises:1:1",
    "codes": [
      30229
    ]
  },
  {
    "name": " node:stream/promises:1:1",
    "codes": [
      30230
    ]
  },
  {
    "name": " node:internal/streams/transform:1:1",
    "codes": [
      30231
    ]
  },
  {
    "name": " node:internal/streams/transform:1:1",
    "codes": [
      30232
    ]
  },
  {
    "name": " node:internal/streams/passthrough:1:1",
    "codes": [
      30233
    ]
  },
  {
    "name": " node:internal/streams/passthrough:1:1",
    "codes": [
      30234
    ]
  },
  {
    "name": " node:internal/stream_base_commons:1:1",
    "codes": [
      30235
    ]
  },
  {
    "name": " node:internal/stream_base_commons:1:1",
    "codes": [
      30236
    ]
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "codes": [
      30237
    ]
  },
  {
    "name": " node:diagnostics_channel:1:1",
    "codes": [
      30238
    ]
  },
  {
    "name": "WeakRefMap node:diagnostics_channel:35:34",
    "codes": [
      30239
    ]
  },
  {
    "name": "WeakRefMap node:diagnostics_channel:35:1",
    "codes": [
      30240
    ]
  },
  {
    "name": "channel node:diagnostics_channel:213:17",
    "codes": [
      30241
    ]
  },
  {
    "name": "get node:diagnostics_channel:45:6",
    "codes": [
      30242
    ]
  },
  {
    "name": "Channel node:diagnostics_channel:168:14",
    "codes": [
      30243
    ]
  },
  {
    "name": "set node:diagnostics_channel:40:6",
    "codes": [
      30244
    ]
  },
  {
    "name": "WeakReference node:internal/util:838:14",
    "codes": [
      30245
    ]
  },
  {
    "name": "SafeWeakRef node:internal/per_context/primordials:448:16",
    "codes": [
      30246
    ]
  },
  {
    "name": " node:internal/perf/observe:1:1",
    "codes": [
      30247
    ]
  },
  {
    "name": " node:internal/perf/observe:1:1",
    "codes": [
      30248
    ]
  },
  {
    "name": "PerformanceObserver node:internal/perf/observe:243:27",
    "codes": [
      30249
    ]
  },
  {
    "name": " node:internal/perf/performance_entry:1:1",
    "codes": [
      30250
    ]
  },
  {
    "name": " node:internal/perf/performance_entry:1:1",
    "codes": [
      30251
    ]
  },
  {
    "name": "protoGetter node:net:866:21",
    "codes": [
      30252,
      30298
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      30253
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      30254
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      30255
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      30256
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      30257
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      30258
    ]
  },
  {
    "name": "customPromiseExecFunction node:child_process:239:35",
    "codes": [
      30259
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      30260
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      30261
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      30262
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      30263
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      30264
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      30265
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      30266
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      30267
    ]
  },
  {
    "name": "getESMFacade node:internal/bootstrap/realm:340:15",
    "codes": [
      30268
    ]
  },
  {
    "name": " node:internal/bootstrap/realm:351:15",
    "codes": [
      30269
    ]
  },
  {
    "name": "syncExports node:internal/bootstrap/realm:365:14",
    "codes": [
      30270,
      30302
    ]
  },
  {
    "name": "getOwn node:internal/bootstrap/realm:202:16",
    "codes": [
      30271,
      30301
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:122:3",
    "codes": [
      30272
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      30273
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      30274
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      30275
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      30276
    ]
  },
  {
    "name": "CustomizedModuleLoader node:internal/modules/esm/loader:456:30",
    "codes": [
      30277
    ]
  },
  {
    "name": "ModuleLoader node:internal/modules/esm/loader:83:20",
    "codes": [
      30278
    ]
  },
  {
    "name": "get esmLoader node:internal/process/esm_loader:17:16",
    "codes": [
      30279
    ]
  },
  {
    "name": "createModuleLoader node:internal/modules/esm/loader:530:28",
    "codes": [
      30280
    ]
  },
  {
    "name": "isLoaderWorker node:internal/modules/esm/utils:205:24",
    "codes": [
      30281
    ]
  },
  {
    "name": "ModuleLoader node:internal/modules/esm/loader:132:14",
    "codes": [
      30282
    ]
  },
  {
    "name": "getDefaultConditions node:internal/modules/esm/utils:41:30",
    "codes": [
      30283
    ]
  },
  {
    "name": "newResolveCache node:internal/modules/esm/loader:35:25",
    "codes": [
      30284
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      30285
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      30286
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      30287
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      30288
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "codes": [
      30289
    ]
  },
  {
    "name": "ResolveCache node:internal/modules/esm/module_map:26:14",
    "codes": [
      30290
    ]
  },
  {
    "name": "newLoadCache node:internal/modules/esm/loader:44:22",
    "codes": [
      30291
    ]
  },
  {
    "name": "LoadCache node:internal/modules/esm/module_map:90:14",
    "codes": [
      30292
    ]
  },
  {
    "name": "getTranslators node:internal/modules/esm/loader:53:24",
    "codes": [
      30293
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      30294
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      30295
    ]
  },
  {
    "name": "setCustomizations node:internal/modules/esm/loader:187:20",
    "codes": [
      30296
    ]
  },
  {
    "name": "getDeprecationWarningEmitter node:internal/util:111:38",
    "codes": [
      30299
    ]
  },
  {
    "name": "deprecate node:internal/util:156:19",
    "codes": [
      30300
    ]
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:420:16",
    "codes": [
      30303
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      30307
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      30308
    ]
  },
  {
    "name": "get BlockList node:net:2373:16",
    "codes": [
      30309
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      30310
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      30311
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      30312
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      30313
    ]
  },
  {
    "name": "get SocketAddress node:net:2377:20",
    "codes": [
      30314
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      30315
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      30316
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      30317
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      30318
    ]
  },
  {
    "name": " node:internal/perf/event_loop_utilization:1:1",
    "codes": [
      30319
    ]
  },
  {
    "name": " node:internal/perf/event_loop_utilization:1:1",
    "codes": [
      30320
    ]
  },
  {
    "name": " node:internal/worker/io:1:1",
    "codes": [
      30321
    ]
  },
  {
    "name": " node:internal/worker/io:1:1",
    "codes": [
      30322
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      30323
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      30324
    ]
  },
  {
    "name": "Socket node:net:353:16",
    "codes": [
      30325
    ]
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "codes": [
      30326
    ]
  },
  {
    "name": "Readable node:internal/streams/readable:314:18",
    "codes": [
      30327
    ]
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "codes": [
      30328
    ]
  },
  {
    "name": "ReadableState node:internal/streams/readable:253:23",
    "codes": [
      30329
    ]
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:32:26",
    "codes": [
      30330
    ]
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:14:27",
    "codes": [
      30331
    ]
  },
  {
    "name": "get node:internal/streams/readable:123:8",
    "codes": [
      30332
    ]
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:19:33",
    "codes": [
      30333
    ]
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "codes": [
      30334
    ]
  },
  {
    "name": "construct node:internal/streams/destroy:219:19",
    "codes": [
      30335
    ]
  },
  {
    "name": "Writable node:internal/streams/writable:375:18",
    "codes": [
      30336
    ]
  },
  {
    "name": "WritableState node:internal/streams/writable:292:23",
    "codes": [
      30337
    ]
  },
  {
    "name": "get node:internal/streams/writable:119:8",
    "codes": [
      30338
    ]
  },
  {
    "name": "resetBuffer node:internal/streams/writable:357:21",
    "codes": [
      30339
    ]
  },
  {
    "name": "set node:internal/streams/readable:124:8",
    "codes": [
      30340,
      30362
    ]
  },
  {
    "name": "createHandle node:net:165:22",
    "codes": [
      30341
    ]
  },
  {
    "name": " node:internal/validators:114:3",
    "codes": [
      30342
    ]
  },
  {
    "name": "guessHandleType node:internal/util:829:25",
    "codes": [
      30343
    ]
  },
  {
    "name": "set node:net:2301:6",
    "codes": [
      30344
    ]
  },
  {
    "name": "get node:net:2300:6",
    "codes": [
      30345,
      30505
    ]
  },
  {
    "name": "Readable.on node:internal/streams/readable:1103:33",
    "codes": [
      30346
    ]
  },
  {
    "name": "initSocketHandle node:net:309:26",
    "codes": [
      30347
    ]
  },
  {
    "name": "undestroy node:internal/streams/destroy:154:19",
    "codes": [
      30348
    ]
  },
  {
    "name": "set node:internal/streams/readable:177:8",
    "codes": [
      30349
    ]
  },
  {
    "name": "set node:internal/streams/writable:120:8",
    "codes": [
      30350,
      30363
    ]
  },
  {
    "name": "set node:internal/streams/writable:205:8",
    "codes": [
      30351
    ]
  },
  {
    "name": "get node:internal/streams/writable:218:8",
    "codes": [
      30352
    ]
  },
  {
    "name": "getNewAsyncId node:net:184:23",
    "codes": [
      30353
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:371:8",
    "codes": [
      30354,
      30504
    ]
  },
  {
    "name": "get /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "codes": [
      30355,
      30565
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      30366
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      30367
    ]
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/process/pre_execution:714:36",
    "codes": [
      30368
    ]
  },
  {
    "name": "markBootstrapComplete node:internal/process/pre_execution:735:31",
    "codes": [
      30369
    ]
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:127:31",
    "codes": [
      30370
    ]
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "codes": [
      30371
    ]
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:52:28",
    "codes": [
      30372
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:1:1",
    "codes": [
      30377
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:1:1",
    "codes": [
      30378
    ]
  },
  {
    "name": "get ReadStream node:fs:3194:17",
    "codes": [
      30379
    ]
  },
  {
    "name": "lazyLoadStreams node:fs:3050:25",
    "codes": [
      30380
    ]
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "codes": [
      30381
    ]
  },
  {
    "name": " node:internal/fs/streams:1:1",
    "codes": [
      30382
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      30383
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      30384
    ]
  },
  {
    "name": "FileHandle node:internal/fs/promises:133:39",
    "codes": [
      30385
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      30386
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      30387
    ]
  },
  {
    "name": " node:internal/fs/dir:1:1",
    "codes": [
      30388
    ]
  },
  {
    "name": " node:internal/fs/dir:1:1",
    "codes": [
      30389
    ]
  },
  {
    "name": " node:internal/fs/watchers:1:1",
    "codes": [
      30390
    ]
  },
  {
    "name": " node:internal/fs/watchers:1:1",
    "codes": [
      30391
    ]
  },
  {
    "name": " node:internal/fs/recursive_watch:1:1",
    "codes": [
      30392
    ]
  },
  {
    "name": " node:internal/fs/recursive_watch:1:1",
    "codes": [
      30393
    ]
  },
  {
    "name": "FSWatcher node:internal/fs/recursive_watch:71:38",
    "codes": [
      30394
    ]
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "codes": [
      30395
    ]
  },
  {
    "name": " node:internal/readline/interface:1:1",
    "codes": [
      30396
    ]
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "codes": [
      30397
    ]
  },
  {
    "name": " node:internal/readline/utils:1:1",
    "codes": [
      30398
    ]
  },
  {
    "name": "CSI node:internal/readline/utils:19:13",
    "codes": [
      30399
    ]
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "codes": [
      30400
    ]
  },
  {
    "name": " node:internal/readline/callbacks:1:1",
    "codes": [
      30401
    ]
  },
  {
    "name": "promisify node:internal/util:405:19",
    "codes": [
      30402
    ]
  },
  {
    "name": "get WriteStream node:fs:3203:18",
    "codes": [
      30403
    ]
  },
  {
    "name": "get FileReadStream node:fs:3214:21",
    "codes": [
      30404
    ]
  },
  {
    "name": "get FileWriteStream node:fs:3223:22",
    "codes": [
      30405
    ]
  },
  {
    "name": "get node:internal/util:620:17",
    "codes": [
      30406
    ]
  },
  {
    "name": "set node:internal/util:609:17",
    "codes": [
      30407
    ]
  },
  {
    "name": "get node:fs:3257:8",
    "codes": [
      30408
    ]
  },
  {
    "name": "main /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:236:14",
    "codes": [
      30409
    ]
  },
  {
    "name": "parseOptions /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:188:22",
    "codes": [
      30410
    ]
  },
  {
    "name": "loadSearchJS /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:157:22",
    "codes": [
      30411
    ]
  },
  {
    "name": "join node:path:1169:7",
    "codes": [
      30412
    ]
  },
  {
    "name": "normalize node:path:1130:12",
    "codes": [
      30413
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/search-index.js:1:1",
    "codes": [
      30415
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/search-index.js:1:1",
    "codes": [
      30416
    ]
  },
  {
    "name": "readdirSync node:fs:1505:21",
    "codes": [
      30418
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:162:55",
    "codes": [
      30419,
      30429
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1",
    "codes": [
      30432
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1",
    "codes": [
      30433
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:167",
    "codes": [
      30434
    ]
  },
  {
    "name": "initSearch /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3068",
    "codes": [
      30435
    ]
  },
  {
    "name": "buildIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:7479",
    "codes": [
      30436,
      30440,
      30454,
      30455,
      30459
    ]
  },
  {
    "name": "buildTypeMapIndex /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3307",
    "codes": [
      30437,
      30445,
      30449
    ]
  },
  {
    "name": "hasOwnPropertyRustdoc /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1041",
    "codes": [
      30438,
      30503
    ]
  },
  {
    "name": "buildFunctionSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6558",
    "codes": [
      30439,
      30448,
      30453
    ]
  },
  {
    "name": "buildItemSearchTypeAll /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5912",
    "codes": [
      30441,
      30447,
      30452
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:5952",
    "codes": [
      30442,
      30446,
      30451
    ]
  },
  {
    "name": "buildItemSearchType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:5:6028",
    "codes": [
      30443,
      30444,
      30450
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:248:33",
    "codes": [
      30456
    ]
  },
  {
    "name": "Writable.write node:internal/streams/writable:493:36",
    "codes": [
      30457,
      30574
    ]
  },
  {
    "name": "_write node:internal/streams/writable:443:16",
    "codes": [
      30458,
      30573
    ]
  },
  {
    "name": "writeOrBuffer node:internal/streams/writable:532:23",
    "codes": [
      30460,
      30567
    ]
  },
  {
    "name": "Socket._write node:net:963:35",
    "codes": [
      30461,
      30571
    ]
  },
  {
    "name": "Socket._writeGeneric node:net:921:42",
    "codes": [
      30462,
      30570
    ]
  },
  {
    "name": "_unrefTimer node:net:505:52",
    "codes": [
      30463,
      30562
    ]
  },
  {
    "name": "writeGeneric node:internal/stream_base_commons:147:22",
    "codes": [
      30464,
      30569
    ]
  },
  {
    "name": "createWriteWrap node:internal/stream_base_commons:109:25",
    "codes": [
      30465,
      30566
    ]
  },
  {
    "name": "handleWriteReq node:internal/stream_base_commons:45:24",
    "codes": [
      30466,
      30585
    ]
  },
  {
    "name": "afterWriteDispatched node:internal/stream_base_commons:155:30",
    "codes": [
      30467,
      30568
    ]
  },
  {
    "name": "onwrite node:internal/streams/writable:599:17",
    "codes": [
      30468,
      30559
    ]
  },
  {
    "name": "doSearch /Users/michaelhowell/rustdoc-js-profiler/src/tester.js:167:27",
    "codes": [
      30469
    ]
  },
  {
    "name": "parseQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14840",
    "codes": [
      30470
    ]
  },
  {
    "name": "newParsedQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14191",
    "codes": [
      30471
    ]
  },
  {
    "name": "parseInput /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:12226",
    "codes": [
      30472,
      30586
    ]
  },
  {
    "name": "isStopCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3684",
    "codes": [
      30473,
      30575
    ]
  },
  {
    "name": "isEndCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3627",
    "codes": [
      30474,
      30564
    ]
  },
  {
    "name": "isWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3504",
    "codes": [
      30475,
      30563
    ]
  },
  {
    "name": "getNextElem /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:8928",
    "codes": [
      30476
    ]
  },
  {
    "name": "skipWhitespace /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5410",
    "codes": [
      30477,
      30576
    ]
  },
  {
    "name": "getIdentEndPosition /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:7405",
    "codes": [
      30478,
      30572
    ]
  },
  {
    "name": "isIdentCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4873",
    "codes": [
      30479,
      30583
    ]
  },
  {
    "name": "isErrorCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:3738",
    "codes": [
      30480
    ]
  },
  {
    "name": "isPathSeparator /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5019",
    "codes": [
      30481
    ]
  },
  {
    "name": "createQueryElement /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:5597",
    "codes": [
      30482,
      30584
    ]
  },
  {
    "name": "isSeparatorCharacter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4976",
    "codes": [
      30483
    ]
  },
  {
    "name": "isReturnArrow /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:4757",
    "codes": [
      30484
    ]
  },
  {
    "name": "getItemsBefore /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:10172",
    "codes": [
      30485
    ]
  },
  {
    "name": "convertTypeFilterOnElem /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:14884",
    "codes": [
      30487
    ]
  },
  {
    "name": "execQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:15963",
    "codes": [
      30488
    ]
  },
  {
    "name": "innerRunQuery /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27314",
    "codes": [
      30489,
      30515,
      30555,
      30578
    ]
  },
  {
    "name": "convertNameToId /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27603",
    "codes": [
      30490,
      30590
    ]
  },
  {
    "name": "handleArgs /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:26946",
    "codes": [
      30491,
      30512,
      30520,
      30549,
      30581
    ]
  },
  {
    "name": "unifyFunctionTypes /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18307",
    "codes": [
      30492,
      30502,
      30527,
      30533,
      30553,
      30577,
      30604
    ]
  },
  {
    "name": "unifyFunctionTypeIsMatchCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:20840",
    "codes": [
      30493,
      30507,
      30523,
      30531,
      30551,
      30579,
      30602,
      30607
    ]
  },
  {
    "name": "typePassesFilter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:23455",
    "codes": [
      30494,
      30508,
      30517,
      30529,
      30548
    ]
  },
  {
    "name": "unifyFunctionTypeIsUnboxCandidate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:21895",
    "codes": [
      30495,
      30506,
      30518,
      30525,
      30528,
      30550,
      30601
    ]
  },
  {
    "name": "checkIfInList /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22277",
    "codes": [
      30496,
      30509,
      30522,
      30554,
      30595,
      30599
    ]
  },
  {
    "name": "checkType /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:22408",
    "codes": [
      30497,
      30516,
      30580,
      30596
    ]
  },
  {
    "name": "backtrack /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:18636",
    "codes": [
      30498,
      30510,
      30519,
      30526,
      30530,
      30606
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:19855",
    "codes": [
      30499,
      30511,
      30521
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:27124",
    "codes": [
      30500,
      30513,
      30524,
      30556
    ]
  },
  {
    "name": "addIntoResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25188",
    "codes": [
      30501,
      30514,
      30532,
      30552
    ]
  },
  {
    "name": "sortResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16576",
    "codes": [
      30534,
      30537,
      30546,
      30593
    ]
  },
  {
    "name": " /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16851",
    "codes": [
      30535,
      30536,
      30538,
      30539,
      30540,
      30557,
      30558
    ]
  },
  {
    "name": "transformResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:16124",
    "codes": [
      30541,
      30561
    ]
  },
  {
    "name": "buildHrefAndPath /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:31198",
    "codes": [
      30542,
      30544
    ]
  },
  {
    "name": "pathSplitter /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:32637",
    "codes": [
      30543,
      30560
    ]
  },
  {
    "name": "createQueryResults /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:15776",
    "codes": [
      30545
    ]
  },
  {
    "name": "handleAliases /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:24045",
    "codes": [
      30547,
      30582
    ]
  },
  {
    "name": "editDistance /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:2991",
    "codes": [
      30587,
      30591,
      30594
    ]
  },
  {
    "name": "calculate /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:1952",
    "codes": [
      30588,
      30589,
      30597
    ]
  },
  {
    "name": "handleSingleArg /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:25590",
    "codes": [
      30592,
      30598,
      30600,
      30603,
      30605,
      30613
    ]
  },
  {
    "name": "validateResult /Users/michaelhowell/rustdoc-js-profiler/tmp/sqlx/toolchain_old/doc/static.files/search-83dad86cfc406332.js:1:30322",
    "codes": [
      30608
    ]
  },
  {
    "name": "exit node:internal/process/per_thread:181:16",
    "codes": [
      30609
    ]
  },
  {
    "name": " node:internal/modules/esm/handle_process_exit:1:1",
    "codes": [
      30610
    ]
  },
  {
    "name": " node:internal/modules/esm/handle_process_exit:1:1",
    "codes": [
      30611
    ]
  },
  {
    "name": "removeListener node:events:677:28",
    "codes": [
      30612
    ]
  },
  {
    "name": " node:internal/validators:93:3",
    "codes": [
      30614
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:100:8",
    "codes": [
      30615
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:113:8",
    "codes": [
      30616
    ]
  }
],
  "ticks": [
    {
  "tm": 834,
  "vm": 6,
  "s": [
    -1,
    6485887024
  ]
},
    {
  "tm": 2334,
  "vm": 6,
  "s": [
    -1,
    4340165664
  ]
},
    {
  "tm": 5334,
  "vm": 6,
  "s": [
    -1,
    6485903236
  ]
},
    {
  "tm": 5375,
  "vm": 6,
  "s": [
    -1,
    6485899060
  ]
},
    {
  "tm": 8875,
  "vm": 6,
  "s": [
    -1,
    6484700736
  ]
},
    {
  "tm": 8875,
  "vm": 6,
  "s": [
    -1,
    6485903236
  ]
},
    {
  "tm": 10542,
  "vm": 6,
  "s": [
    -1,
    6485903236
  ]
},
    {
  "tm": 11084,
  "vm": 5,
  "s": [
    -1,
    6486340656
  ]
},
    {
  "tm": 12584,
  "vm": 6,
  "s": [
    -1,
    4392351376
  ]
},
    {
  "tm": 15000,
  "vm": 3,
  "s": [
    -1,
    6485362340,
    30021,
    26,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 15625,
  "vm": 3,
  "s": [
    -1,
    4346645944,
    30025,
    97,
    30021,
    32,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 17250,
  "vm": 3,
  "s": [
    -1,
    6486129796,
    30025,
    213,
    30021,
    32,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 19000,
  "vm": 3,
  "s": [
    -1,
    4333073656,
    30025,
    269,
    30021,
    32,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 20209,
  "vm": 3,
  "s": [
    -1,
    6486130060,
    30054,
    29,
    30021,
    82,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 21792,
  "vm": 3,
  "s": [
    -1,
    6485172072,
    30021,
    125,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 24084,
  "vm": 3,
  "s": [
    -1,
    6486130060,
    30074,
    16,
    30073,
    13,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 24917,
  "vm": 3,
  "s": [
    -1,
    6485362404,
    28808,
    1424,
    30076,
    14,
    30075,
    10,
    30074,
    16,
    30073,
    13,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 26375,
  "vm": 0,
  "s": [
    -1,
    6484744140,
    -1,
    34255316176193,
    30027,
    70,
    30081,
    183,
    30075,
    62,
    30074,
    16,
    30073,
    13,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 26875,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30092,
    21,
    30091,
    16,
    30073,
    19,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 28250,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30124,
    17,
    30122,
    130,
    30121,
    16,
    30116,
    628,
    30105,
    220,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 31834,
  "vm": 3,
  "s": [
    -1,
    6486129496,
    30132,
    35,
    30131,
    57,
    30130,
    23,
    30127,
    724,
    30116,
    719,
    30105,
    220,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 31834,
  "vm": 3,
  "s": [
    -1,
    4337903964,
    30132,
    35,
    30131,
    57,
    30130,
    23,
    30127,
    724,
    30116,
    719,
    30105,
    220,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 32875,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30133,
    6,
    30132,
    35,
    30131,
    57,
    30130,
    23,
    30127,
    724,
    30116,
    719,
    30105,
    220,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 34542,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30133,
    18,
    30132,
    35,
    30131,
    57,
    30130,
    23,
    30127,
    724,
    30116,
    719,
    30105,
    220,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 35209,
  "vm": 2,
  "s": [
    -1,
    4339313612,
    30149,
    60,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 36750,
  "vm": 3,
  "s": [
    -1,
    6486130020,
    30135,
    14,
    30134,
    104,
    30150,
    10,
    30149,
    60,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 37917,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30162,
    37,
    30159,
    110,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 38834,
  "vm": 3,
  "s": [
    -1,
    6486129984,
    30034,
    500,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 40250,
  "vm": 5,
  "s": [
    -1,
    4339333048,
    30034,
    500,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 41792,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30034,
    500,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 45125,
  "vm": 3,
  "s": [
    -1,
    6486129712,
    30034,
    500,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 45125,
  "vm": 3,
  "s": [
    -1,
    6484811412,
    30034,
    500,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 46250,
  "vm": 3,
  "s": [
    -1,
    6485362376,
    30034,
    500,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 48292,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30189,
    867,
    30034,
    704,
    30033,
    620,
    30187,
    161,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 48834,
  "vm": 3,
  "s": [
    -1,
    6486128404,
    30034,
    500,
    30033,
    620,
    30187,
    269,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 50375,
  "vm": 3,
  "s": [
    -1,
    4333075712,
    30034,
    500,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 51500,
  "vm": 2,
  "s": [
    -1,
    4335487216,
    30034,
    500,
    30033,
    620,
    30204,
    65,
    30034,
    704,
    30033,
    620,
    30200,
    224,
    30034,
    704,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 53542,
  "vm": 3,
  "s": [
    -1,
    6486129412,
    30034,
    500,
    30033,
    620,
    30204,
    65,
    30034,
    704,
    30033,
    620,
    30200,
    224,
    30034,
    704,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 53709,
  "vm": 2,
  "s": [
    -1,
    4335441040,
    30034,
    500,
    30033,
    620,
    30206,
    480,
    30034,
    704,
    30033,
    620,
    30204,
    65,
    30034,
    704,
    30033,
    620,
    30200,
    224,
    30034,
    704,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 54917,
  "vm": 3,
  "s": [
    -1,
    6486129476,
    30034,
    500,
    30033,
    620,
    30206,
    735,
    30034,
    704,
    30033,
    620,
    30204,
    65,
    30034,
    704,
    30033,
    620,
    30200,
    224,
    30034,
    704,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 56667,
  "vm": 3,
  "s": [
    -1,
    6486129412,
    30034,
    500,
    30033,
    620,
    30204,
    77,
    30034,
    704,
    30033,
    620,
    30200,
    224,
    30034,
    704,
    30033,
    620,
    30198,
    50,
    30034,
    704,
    30033,
    620,
    30187,
    283,
    30034,
    704,
    30033,
    620,
    30185,
    61,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 57375,
  "vm": 0,
  "s": [
    -1,
    4339134420,
    30185,
    634,
    30034,
    704,
    30033,
    620,
    30183,
    677,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 59000,
  "vm": 3,
  "s": [
    -1,
    4337904016,
    30034,
    500,
    30033,
    620,
    30183,
    1432,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 60125,
  "vm": 0,
  "s": [
    -1,
    6484179260,
    30034,
    500,
    30033,
    620,
    30183,
    1479,
    30034,
    704,
    30033,
    620,
    30180,
    502,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 61959,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30034,
    500,
    30033,
    620,
    30180,
    514,
    30034,
    704,
    30033,
    620,
    30178,
    695,
    30034,
    704,
    30033,
    620,
    30176,
    226,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 62834,
  "vm": 3,
  "s": [
    -1,
    6486129200,
    30034,
    500,
    30033,
    620,
    30176,
    257,
    30034,
    704,
    30033,
    620,
    30174,
    37,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30161,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 64459,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30034,
    500,
    30033,
    620,
    30274,
    43,
    30034,
    704,
    30033,
    620,
    30272,
    6,
    30101,
    13,
    30146,
    160,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 66167,
  "vm": 3,
  "s": [
    -1,
    6485362340,
    30034,
    500,
    30033,
    620,
    30293,
    6,
    30278,
    72,
    30282,
    17,
    30280,
    178,
    30279,
    15,
    30272,
    11,
    30101,
    13,
    30146,
    160,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 66875,
  "vm": 2,
  "s": [
    -1,
    4339482952,
    30034,
    500,
    30033,
    620,
    30309,
    14,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30308,
    3,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 68375,
  "vm": 0,
  "s": [
    -1,
    4340331368,
    30034,
    500,
    30033,
    620,
    30316,
    3,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30308,
    16,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 69750,
  "vm": 3,
  "s": [
    -1,
    6485362440,
    30034,
    500,
    30033,
    620,
    30318,
    627,
    30034,
    704,
    30033,
    620,
    30316,
    3,
    30034,
    704,
    30172,
    60,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30308,
    16,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 71250,
  "vm": 3,
  "s": [
    -1,
    4337905088,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30104,
    69,
    30096,
    130,
    30095,
    47,
    30073,
    58,
    30021,
    301,
    30020,
    40,
    30019,
    38
  ]
},
    {
  "tm": 73125,
  "vm": 3,
  "s": [
    -1,
    6484700600,
    30034,
    500,
    30033,
    620,
    30380,
    12,
    30379,
    3,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30378,
    66,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 74667,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30034,
    500,
    30033,
    620,
    30382,
    320,
    30034,
    704,
    30033,
    620,
    30380,
    12,
    30379,
    3,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30378,
    66,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 75750,
  "vm": 2,
  "s": [
    -1,
    4335441040,
    30034,
    500,
    30033,
    620,
    30384,
    1180,
    30034,
    704,
    30033,
    620,
    30382,
    320,
    30034,
    704,
    30033,
    620,
    30380,
    12,
    30379,
    3,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30378,
    66,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 78500,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30034,
    500,
    30033,
    620,
    30384,
    1354,
    30034,
    704,
    30033,
    620,
    30382,
    320,
    30034,
    704,
    30033,
    620,
    30380,
    12,
    30379,
    3,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30378,
    66,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 79125,
  "vm": 3,
  "s": [
    -1,
    4346643904,
    30034,
    500,
    30033,
    620,
    30396,
    625,
    30034,
    704,
    30033,
    620,
    30384,
    1354,
    30034,
    704,
    30033,
    620,
    30382,
    320,
    30034,
    704,
    30033,
    620,
    30380,
    12,
    30379,
    3,
    29115,
    204,
    30301,
    276,
    30302,
    440,
    30269,
    10,
    27879,
    184,
    30268,
    159,
    30172,
    127,
    30169,
    56,
    30105,
    331,
    30168,
    69,
    30167,
    8,
    30378,
    66,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 80250,
  "vm": 0,
  "s": [
    -1,
    6485313812,
    30150,
    104,
    30149,
    60,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 81417,
  "vm": 5,
  "s": [
    -1,
    4340278088,
    30150,
    104,
    30149,
    60,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 82500,
  "vm": 5,
  "s": [
    -1,
    4340278744,
    30150,
    104,
    30149,
    60,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 84000,
  "vm": 5,
  "s": [
    -1,
    6485886796,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 85542,
  "vm": 5,
  "s": [
    -1,
    4339333420,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 86709,
  "vm": 2,
  "s": [
    -1,
    4339421584,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 88209,
  "vm": 2,
  "s": [
    -1,
    4339421716,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 89750,
  "vm": 2,
  "s": [
    -1,
    4339625040,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 90750,
  "vm": 2,
  "s": [
    -1,
    4339421716,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 92250,
  "vm": 2,
  "s": [
    -1,
    4339624620,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172875,
  "vm": 3,
  "s": [
    -1,
    4346643904,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172917,
  "vm": 3,
  "s": [
    -1,
    6486129256,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172917,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172917,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172917,
  "vm": 3,
  "s": [
    -1,
    6486128492,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172959,
  "vm": 3,
  "s": [
    -1,
    4333075456,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172959,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172959,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172959,
  "vm": 3,
  "s": [
    -1,
    6484700524,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 172959,
  "vm": 3,
  "s": [
    -1,
    6486130072,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    4333075464,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173000,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    4333073752,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    4335679592,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    4333075544,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    6486129984,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173042,
  "vm": 3,
  "s": [
    -1,
    4333073812,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    6485172040,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    6485889688,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    6486130112,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    4333075712,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173084,
  "vm": 3,
  "s": [
    -1,
    6486130060,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173125,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173125,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173125,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173125,
  "vm": 3,
  "s": [
    -1,
    4333075488,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173125,
  "vm": 3,
  "s": [
    -1,
    4346645944,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173167,
  "vm": 3,
  "s": [
    -1,
    6484701392,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173167,
  "vm": 3,
  "s": [
    -1,
    4333075456,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173167,
  "vm": 3,
  "s": [
    -1,
    6485362464,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173167,
  "vm": 3,
  "s": [
    -1,
    4335679564,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173167,
  "vm": 3,
  "s": [
    -1,
    6485172072,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    4335679880,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    4333075672,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    6485362476,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    4333073812,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    6485889688,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173209,
  "vm": 3,
  "s": [
    -1,
    4333073600,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6486128404,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6486129984,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6486341212,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6486128464,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173250,
  "vm": 3,
  "s": [
    -1,
    6485903236,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173292,
  "vm": 3,
  "s": [
    -1,
    4335679568,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173292,
  "vm": 3,
  "s": [
    -1,
    4333075652,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173292,
  "vm": 3,
  "s": [
    -1,
    4333075456,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 173292,
  "vm": 3,
  "s": [
    -1,
    6486128296,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 174417,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    -1,
    31605243222355,
    30159,
    110,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 175459,
  "vm": 1,
  "s": [
    -1,
    4336702356
  ]
},
    {
  "tm": 177000,
  "vm": 0,
  "s": [
    -1,
    4336871860,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 178542,
  "vm": 1,
  "s": [
    -1,
    4337379472
  ]
},
    {
  "tm": 180042,
  "vm": 0,
  "s": [
    -1,
    4346630992,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 181542,
  "vm": 0,
  "s": [
    -1,
    4337835636,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 183042,
  "vm": 0,
  "s": [
    -1,
    4336888908,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 184542,
  "vm": 1,
  "s": [
    -1,
    4337245184
  ]
},
    {
  "tm": 186084,
  "vm": 0,
  "s": [
    -1,
    4336918124,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 187584,
  "vm": 0,
  "s": [
    -1,
    4337844652,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 189084,
  "vm": 0,
  "s": [
    -1,
    4337847148,
    30416,
    12,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    50,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 190584,
  "vm": 2,
  "s": [
    -1,
    4336832332,
    30411,
    87,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 191750,
  "vm": 2,
  "s": [
    -1,
    4335487184,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    131,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 193375,
  "vm": 3,
  "s": [
    -1,
    4333073600,
    30159,
    35,
    30158,
    196,
    30157,
    69,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30168,
    69,
    30167,
    8,
    30411,
    131,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 194750,
  "vm": 0,
  "s": [
    28157,
    124,
    30440,
    4164,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 196250,
  "vm": 0,
  "s": [
    28149,
    1376,
    30445,
    188,
    30444,
    732,
    30446,
    96,
    28826,
    1116,
    30447,
    208,
    30448,
    432,
    30440,
    5036,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 197750,
  "vm": 1,
  "s": [
    -1,
    6485901484
  ]
},
    {
  "tm": 199250,
  "vm": 1,
  "s": [
    -1,
    4337371076
  ]
},
    {
  "tm": 200792,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30448,
    24,
    30440,
    5036,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 202292,
  "vm": 1,
  "s": [
    -1,
    6485903236
  ]
},
    {
  "tm": 203792,
  "vm": 1,
  "s": [
    -1,
    6485901484
  ]
},
    {
  "tm": 205292,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28386,
    1172,
    30440,
    5364,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 206792,
  "vm": 0,
  "s": [
    28210,
    1216,
    28215,
    64,
    30440,
    5540,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 208292,
  "vm": 0,
  "s": [
    30452,
    2624,
    30448,
    432,
    30440,
    5036,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 209834,
  "vm": 0,
  "s": [
    28157,
    276,
    30440,
    4164,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 211334,
  "vm": 0,
  "s": [
    28910,
    1192,
    30440,
    4496,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 212834,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    27989,
    2016,
    30453,
    4784,
    30440,
    5036,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 214292,
  "vm": 0,
  "s": [
    28476,
    16,
    28386,
    300,
    30440,
    5364,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 215792,
  "vm": 1,
  "s": [
    -1,
    6485906696
  ]
},
    {
  "tm": 217292,
  "vm": 1,
  "s": [
    -1,
    4337379916
  ]
},
    {
  "tm": 218834,
  "vm": 0,
  "s": [
    29512,
    348,
    30440,
    4236,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 220334,
  "vm": 0,
  "s": [
    28210,
    124,
    28215,
    64,
    30440,
    5540,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 221834,
  "vm": 1,
  "s": [
    -1,
    4337379392
  ]
},
    {
  "tm": 223375,
  "vm": 1,
  "s": [
    -1,
    4337382148
  ]
},
    {
  "tm": 224834,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28349,
    136,
    30440,
    5452,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 226375,
  "vm": 0,
  "s": [
    28157,
    308,
    30440,
    4876,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 227875,
  "vm": 0,
  "s": [
    27785,
    8,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 228959,
  "vm": 0,
  "s": [
    28347,
    132,
    28349,
    64,
    30440,
    5452,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 230459,
  "vm": 0,
  "s": [
    28157,
    320,
    30440,
    4164,
    30435,
    355,
    30411,
    150,
    30409,
    64,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 232000,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    -1,
    41127856296987,
    30457,
    15,
    30456,
    30,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 233250,
  "vm": 3,
  "s": [
    -1,
    4338465148,
    30458,
    437,
    30457,
    15,
    30456,
    30,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 234750,
  "vm": 3,
  "s": [
    -1,
    4336115468,
    30489,
    1083,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 236250,
  "vm": 1,
  "s": [
    -1,
    4337383880
  ]
},
    {
  "tm": 237792,
  "vm": 1,
  "s": [
    -1,
    6485901484
  ]
},
    {
  "tm": 239292,
  "vm": 0,
  "s": [
    28149,
    2536,
    30502,
    4068,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 240792,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28212,
    1808,
    30502,
    4048,
    30513,
    264,
    30502,
    7328,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 242292,
  "vm": 0,
  "s": [
    27785,
    8,
    30502,
    876,
    30502,
    2516,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 243834,
  "vm": 1,
  "s": [
    -1,
    6484167636
  ]
},
    {
  "tm": 244834,
  "vm": 0,
  "s": [
    30515,
    7060,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 246000,
  "vm": 0,
  "s": [
    28921,
    0,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 247500,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30507,
    24,
    30502,
    2192,
    30513,
    264,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 248625,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30507,
    24,
    30502,
    2192,
    30513,
    264,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 250125,
  "vm": 0,
  "s": [
    -1,
    4336891448,
    30502,
    1600,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 251667,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28211,
    2004,
    30510,
    420,
    30502,
    7368,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 253167,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28212,
    1808,
    28211,
    3760,
    30502,
    2868,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 254667,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28212,
    1808,
    28211,
    3760,
    30502,
    2868,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 256167,
  "vm": 0,
  "s": [
    -1,
    4338440680,
    30502,
    3604,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 257667,
  "vm": 0,
  "s": [
    28267,
    604,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 259167,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28217,
    200,
    30502,
    4068,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 260667,
  "vm": 0,
  "s": [
    30520,
    200,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 262209,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    27998,
    196,
    30502,
    6240,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 263500,
  "vm": 0,
  "s": [
    28185,
    164,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 265000,
  "vm": 0,
  "s": [
    27993,
    696,
    28840,
    988,
    30502,
    2292,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 266500,
  "vm": 0,
  "s": [
    28479,
    636,
    28211,
    2580,
    30502,
    660,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 268000,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30531,
    1416,
    30502,
    2192,
    30524,
    216,
    30502,
    7328,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 269500,
  "vm": 0,
  "s": [
    30533,
    264,
    30533,
    2076,
    30533,
    6976,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 270834,
  "vm": 0,
  "s": [
    30533,
    1580,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 272334,
  "vm": 0,
  "s": [
    30533,
    5636,
    30533,
    6976,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 273834,
  "vm": 0,
  "s": [
    27829,
    140,
    30533,
    3452,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 275375,
  "vm": 0,
  "s": [
    30533,
    1384,
    30520,
    448,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 276875,
  "vm": 0,
  "s": [
    30520,
    48,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 278375,
  "vm": 0,
  "s": [
    28157,
    132,
    30534,
    110,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 279875,
  "vm": 0,
  "s": [
    28267,
    964,
    30536,
    144,
    29258,
    1436,
    30534,
    235,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 281417,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30536,
    24,
    29258,
    1436,
    30534,
    235,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 282917,
  "vm": 0,
  "s": [
    28149,
    128,
    29258,
    1436,
    30534,
    235,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 284417,
  "vm": 0,
  "s": [
    29254,
    3236,
    29258,
    1436,
    30534,
    235,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 285917,
  "vm": 0,
  "s": [
    30536,
    1300,
    29258,
    1436,
    30534,
    235,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 287417,
  "vm": 0,
  "s": [
    30537,
    2312,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 288959,
  "vm": 2,
  "s": [
    -1,
    6484159680,
    30488,
    252,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 290125,
  "vm": 0,
  "s": [
    28269,
    232,
    30502,
    2616,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 291625,
  "vm": 0,
  "s": [
    28149,
    1360,
    30507,
    628,
    30502,
    2192,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 293125,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28217,
    200,
    28211,
    2664,
    30530,
    300,
    30502,
    3496,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 294667,
  "vm": 0,
  "s": [
    27792,
    16,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 296167,
  "vm": 0,
  "s": [
    28469,
    76,
    30502,
    3604,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 297667,
  "vm": 0,
  "s": [
    30551,
    532,
    30502,
    2192,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 299209,
  "vm": 0,
  "s": [
    -1,
    4338441312,
    30502,
    3604,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 300500,
  "vm": 0,
  "s": [
    28157,
    308,
    30502,
    1776,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 302000,
  "vm": 0,
  "s": [
    30552,
    416,
    30549,
    760,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 303500,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28840,
    4232,
    30502,
    2292,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 304917,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28840,
    4232,
    30502,
    2292,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 306417,
  "vm": 0,
  "s": [
    30551,
    964,
    30553,
    1712,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 307917,
  "vm": 0,
  "s": [
    28210,
    1216,
    30552,
    316,
    30549,
    760,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 309042,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30551,
    1560,
    30553,
    1712,
    30549,
    548,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 310459,
  "vm": 0,
  "s": [
    28268,
    212,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 311959,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30552,
    668,
    30512,
    816,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 313125,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30552,
    668,
    30512,
    816,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 314625,
  "vm": 0,
  "s": [
    29056,
    192,
    30502,
    2192,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 315792,
  "vm": 0,
  "s": [
    30550,
    1040,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 317292,
  "vm": 0,
  "s": [
    28149,
    0,
    29258,
    1436,
    30537,
    1768,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 318792,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30536,
    24,
    29258,
    1436,
    30537,
    1768,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 320292,
  "vm": 0,
  "s": [
    28149,
    16,
    29258,
    1436,
    30537,
    1768,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 321334,
  "vm": 0,
  "s": [
    28149,
    1360,
    30536,
    1380,
    29258,
    1436,
    30537,
    1768,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 322875,
  "vm": 4,
  "s": [
    -1,
    6486129180,
    29510,
    100,
    30547,
    23,
    30488,
    252,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 324375,
  "vm": 0,
  "s": [
    30502,
    892,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 325875,
  "vm": 1,
  "s": [
    -1,
    4339178120
  ]
},
    {
  "tm": 327375,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28211,
    2004,
    30502,
    660,
    30502,
    2516,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 328917,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28211,
    2004,
    30502,
    660,
    30502,
    2516,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 330167,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30577,
    9028,
    30577,
    8040,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 331667,
  "vm": 0,
  "s": [
    -1,
    6486330816,
    27863,
    56,
    30577,
    1712,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 333167,
  "vm": 0,
  "s": [
    27786,
    160,
    30507,
    628,
    30577,
    1712,
    30577,
    8040,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 334709,
  "vm": 0,
  "s": [
    -1,
    4336667136,
    30577,
    9196,
    30577,
    2172,
    30577,
    8476,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 336209,
  "vm": 0,
  "s": [
    28479,
    660,
    28211,
    2500,
    30577,
    3604,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 337709,
  "vm": 0,
  "s": [
    28479,
    360,
    28211,
    2500,
    30577,
    216,
    30577,
    8040,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 339209,
  "vm": 0,
  "s": [
    28862,
    104,
    28850,
    5140,
    30577,
    4712,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 340709,
  "vm": 0,
  "s": [
    27993,
    824,
    30577,
    948,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 342250,
  "vm": 0,
  "s": [
    -1,
    4338690932,
    28850,
    5140,
    30577,
    4712,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 343625,
  "vm": 0,
  "s": [
    27829,
    52,
    30577,
    216,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 345125,
  "vm": 0,
  "s": [
    28222,
    164,
    28211,
    2792,
    30577,
    4208,
    30577,
    8040,
    30555,
    748,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 346667,
  "vm": 0,
  "s": [
    28210,
    24,
    30579,
    712,
    30577,
    1712,
    30577,
    8476,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 347709,
  "vm": 0,
  "s": [
    30579,
    976,
    30577,
    1712,
    30577,
    8476,
    30512,
    584,
    30515,
    7052,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 349209,
  "vm": 0,
  "s": [
    27989,
    96,
    30537,
    1020,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 350709,
  "vm": 0,
  "s": [
    28167,
    2892,
    30561,
    1128,
    30534,
    538,
    30488,
    199,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 352250,
  "vm": 0,
  "s": [
    28921,
    80,
    30489,
    449,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 353709,
  "vm": 0,
  "s": [
    30516,
    956,
    30509,
    368,
    30506,
    556,
    30502,
    2616,
    30516,
    1152,
    30509,
    368,
    30516,
    948,
    30509,
    368,
    30592,
    84,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 355250,
  "vm": 0,
  "s": [
    27840,
    20,
    30589,
    2308,
    30591,
    184,
    30592,
    410,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 356750,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28998,
    356,
    30589,
    2680,
    30591,
    184,
    30592,
    410,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 358250,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28998,
    356,
    30589,
    2680,
    30591,
    184,
    30592,
    410,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 359750,
  "vm": 0,
  "s": [
    27784,
    240,
    30595,
    1100,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 361292,
  "vm": 0,
  "s": [
    27999,
    2136,
    30509,
    144,
    30596,
    612,
    30509,
    368,
    30506,
    556,
    30502,
    2616,
    30596,
    876,
    30509,
    368,
    30596,
    612,
    30509,
    368,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 362792,
  "vm": 4,
  "s": [
    -1,
    4337037728,
    28840,
    4232,
    30502,
    1156,
    30599,
    1164,
    30599,
    928,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 364292,
  "vm": 4,
  "s": [
    -1,
    6484694836,
    28840,
    4232,
    30502,
    1156,
    30599,
    1164,
    30599,
    928,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 365625,
  "vm": 4,
  "s": [
    -1,
    6484752236,
    28840,
    4232,
    30502,
    1156,
    30599,
    1164,
    30599,
    928,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 367125,
  "vm": 0,
  "s": [
    27871,
    404,
    30502,
    3496,
    30599,
    1164,
    30599,
    928,
    30599,
    928,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 368625,
  "vm": 0,
  "s": [
    30599,
    216,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 370167,
  "vm": 0,
  "s": [
    28268,
    212,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 371667,
  "vm": 0,
  "s": [
    -1,
    4339334604,
    29168,
    300,
    30598,
    1296,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 373167,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30602,
    1760,
    30502,
    2192,
    30599,
    1164,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 374667,
  "vm": 0,
  "s": [
    28149,
    132,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 376167,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    30599,
    1624,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 377667,
  "vm": 0,
  "s": [
    30597,
    4000,
    30594,
    108,
    30598,
    2124,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 379209,
  "vm": 0,
  "s": [
    30604,
    2340,
    30599,
    1164,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 380709,
  "vm": 0,
  "s": [
    28149,
    0,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 382209,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    29168,
    352,
    30598,
    1376,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 383709,
  "vm": 0,
  "s": [
    28268,
    120,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 385209,
  "vm": 4,
  "s": [
    -1,
    6485903236,
    28211,
    2004,
    30502,
    660,
    30599,
    1164,
    30599,
    928,
    30598,
    912,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 386709,
  "vm": 0,
  "s": [
    30597,
    3156,
    30594,
    108,
    30598,
    2124,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 388250,
  "vm": 0,
  "s": [
    27794,
    80,
    30599,
    1164,
    30599,
    928,
    30598,
    508,
    30515,
    5360,
    30488,
    155,
    30469,
    35,
    30456,
    70,
    28807,
    828,
    30409,
    108,
    30378,
    102,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 390084,
  "vm": 3,
  "s": [
    -1,
    6485168904,
    30609,
    33,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 391250,
  "vm": 4,
  "s": [
    -1,
    6486128128,
    -1,
    67917350424323,
    30609,
    33,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 392667,
  "vm": 0,
  "s": [
    -1,
    6485894764,
    30609,
    147,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 394167,
  "vm": 0,
  "s": [
    -1,
    6485894764,
    30609,
    147,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 395667,
  "vm": 0,
  "s": [
    -1,
    6485894764,
    30609,
    147,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
},
    {
  "tm": 396667,
  "vm": 0,
  "s": [
    -1,
    6485893368,
    30609,
    147,
    30378,
    107,
    30157,
    403,
    30149,
    484,
    30146,
    144,
    30105,
    465,
    30370,
    87,
    30019,
    113
  ]
}
  ],
  "scripts": [
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/assert",
    "source": "'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n",
    "name": "assert",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 11,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/no-cluster.js",
    "source": "const cluster = require('cluster')\n\ncluster.on('fork', () => {\n  throw new Error('0x does not support clustering.')\n})\n",
    "name": "no-cluster.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 81,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/redir-stdout.js",
    "source": "'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3,\n    readable: false,\n    writable: true\n  })\n  Object.defineProperty(process, 'stdout', {\n    configurable: true,\n    enumerable: true,\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout, 'fd', {\n    value: socket._handle.fd\n  })\n}\n",
    "name": "redir-stdout.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 123,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "node:worker_threads",
    "source": "'use strict';\n\nconst {\n  isMainThread,\n  SHARE_ENV,\n  resourceLimits,\n  setEnvironmentData,\n  getEnvironmentData,\n  threadId,\n  Worker,\n} = require('internal/worker');\n\nconst {\n  MessagePort,\n  MessageChannel,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  BroadcastChannel,\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable,\n  isMarkedAsUntransferable,\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread,\n  MessagePort,\n  MessageChannel,\n  markAsUntransferable,\n  isMarkedAsUntransferable,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  resourceLimits,\n  threadId,\n  SHARE_ENV,\n  Worker,\n  parentPort: null,\n  workerData: null,\n  BroadcastChannel,\n  setEnvironmentData,\n  getEnvironmentData,\n};\n",
    "name": "node:worker_threads",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 126,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  {
    "url": "/Users/michaelhowell/rustdoc-js-profiler/node_modules/0x/lib/preload/soft-exit.js",
    "source": "'use strict'\n\nprocess.on('SIGINT', process.exit)\nprocess.on('SIGTERM', process.exit)\n",
    "name": "soft-exit.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 131,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/modules/esm/handle_process_exit",
    "source": "'use strict';\n\nconst { exitCodes: { kUnfinishedTopLevelAwait } } = internalBinding('errors');\n\n/**\n * Handle a Promise from running code that potentially does Top-Level Await.\n * In that case, it makes sense to set the exit code to a specific non-zero value\n * if the main code never finishes running.\n */\nfunction handleProcessExit() {\n  process.exitCode ??= kUnfinishedTopLevelAwait;\n}\n\nmodule.exports = {\n  handleProcessExit,\n};\n",
    "name": "handle_process_exit",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 144,
    "sourcePositions": []
  }
]}
